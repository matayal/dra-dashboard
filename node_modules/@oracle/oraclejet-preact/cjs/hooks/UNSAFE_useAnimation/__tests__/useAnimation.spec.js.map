{"version":3,"file":"useAnimation.spec.js","sources":["../../../../../src/hooks/UNSAFE_useAnimation/__tests__/useAnimation.spec.tsx"],"sourcesContent":["import { useAnimation } from '../useAnimation';\nimport { render } from '@testing-library/preact';\nimport { renderHook } from '@testing-library/preact-hooks';\nimport { expect } from 'chai';\nimport { spy } from 'sinon';\n\nconst spyWAAPIAnimateFunction = spy(HTMLElement.prototype, 'animate');\n\nconst { result } = renderHook(() =>\n  useAnimation<'visible'>('visible', {\n    animationStates: {\n      visible: {\n        to: {\n          opacity: 1\n        }\n      }\n    }\n  })\n);\n\ntype TestComponentProps = { animationState: 'visible' | 'notVisible' };\n\nfunction TestComponent(props: TestComponentProps) {\n  const { nodeRef } = useAnimation<TestComponentProps['animationState'], HTMLDivElement>(\n    props.animationState,\n    {\n      animationStates: {\n        visible: {\n          to: {\n            opacity: 1\n          },\n          options: {\n            duration: 500\n          }\n        },\n        notVisible: {\n          to: {\n            opacity: 0\n          },\n          options: {\n            duration: 500\n          }\n        }\n      },\n      isAnimatedOnMount: true\n    }\n  );\n  return (\n    <div style={{ opacity: 0 }} ref={nodeRef}>\n      Hello world\n    </div>\n  );\n}\n\ndescribe('Test useAnimation hook', () => {\n  it('useAnimation returns a Ref value', async function () {\n    expect(result.current?.nodeRef).to.exist;\n  });\n  it('useAnimation returns a controller', async function () {\n    expect(result.current?.controller).to.exist;\n  });\n  it('WAAPI animate function is called', async function () {\n    //TODO: Test seems to be unstable on some browsers using karma, we have to comeback here and check\n    //why this could be happening\n    if (typeof jest !== 'undefined') {\n      const { rerender } = render(<TestComponent animationState=\"visible\"></TestComponent>);\n      rerender(<TestComponent animationState=\"notVisible\"></TestComponent>);\n      expect(spyWAAPIAnimateFunction.calledTwice).to.be.true;\n    }\n  });\n});\n"],"names":["spy","renderHook","useAnimation","_jsx","expect","render"],"mappings":";;;;;;;;;;;;AAMA,MAAM,uBAAuB,GAAGA,SAAG,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAEtE,MAAM,EAAE,MAAM,EAAE,GAAGC,sBAAU,CAAC,MAC5BC,yBAAY,CAAY,SAAS,EAAE;AACjC,IAAA,eAAe,EAAE;AACf,QAAA,OAAO,EAAE;AACP,YAAA,EAAE,EAAE;AACF,gBAAA,OAAO,EAAE,CAAC;AACX,aAAA;AACF,SAAA;AACF,KAAA;AACF,CAAA,CAAC,CACH,CAAC;AAIF,SAAS,aAAa,CAAC,KAAyB,EAAA;IAC9C,MAAM,EAAE,OAAO,EAAE,GAAGA,yBAAY,CAC9B,KAAK,CAAC,cAAc,EACpB;AACE,QAAA,eAAe,EAAE;AACf,YAAA,OAAO,EAAE;AACP,gBAAA,EAAE,EAAE;AACF,oBAAA,OAAO,EAAE,CAAC;AACX,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,QAAQ,EAAE,GAAG;AACd,iBAAA;AACF,aAAA;AACD,YAAA,UAAU,EAAE;AACV,gBAAA,EAAE,EAAE;AACF,oBAAA,OAAO,EAAE,CAAC;AACX,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,QAAQ,EAAE,GAAG;AACd,iBAAA;AACF,aAAA;AACF,SAAA;AACD,QAAA,iBAAiB,EAAE,IAAI;AACxB,KAAA,CACF,CAAC;AACF,IAAA,QACEC,cAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAK,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,EAAA,EAAA,EAAA,QAAA,EAAA,aAAA,EAAA,CAAA,CAElC,EACN;AACJ,CAAC;AAED,QAAQ,CAAC,wBAAwB,EAAE,MAAK;IACtC,EAAE,CAAC,kCAAkC,EAAE,kBAAK;;AAC1C,QAAAC,WAAM,CAAC,CAAA,EAAA,GAAA,MAAM,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;AAC3C,KAAC,CAAC,CAAC;IACH,EAAE,CAAC,mCAAmC,EAAE,kBAAK;;AAC3C,QAAAA,WAAM,CAAC,CAAA,EAAA,GAAA,MAAM,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;AAC9C,KAAC,CAAC,CAAC;IACH,EAAE,CAAC,kCAAkC,EAAE,kBAAK;;;AAG1C,QAAA,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;AAC/B,YAAA,MAAM,EAAE,QAAQ,EAAE,GAAGC,aAAM,CAACF,cAAA,CAAC,aAAa,EAAA,EAAC,cAAc,EAAC,SAAS,EAAA,CAAiB,CAAC,CAAC;YACtF,QAAQ,CAACA,eAAC,aAAa,EAAA,EAAC,cAAc,EAAC,YAAY,EAAiB,CAAA,CAAC,CAAC;YACtEC,WAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AACxD,SAAA;AACH,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;"}