{"version":3,"file":"useFocusWithin.spec.js","sources":["../../../../../src/hooks/UNSAFE_useFocusWithin/__tests__/useFocusWithin.spec.tsx"],"sourcesContent":["import { useFocusWithin } from '../useFocusWithin';\n// import { render, waitFor, waitForElementToBeRemoved } from '@testing-library/preact';\nimport { render, waitFor } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { match, spy } from 'sinon';\n\ntype TestComponentProps = {\n  isDisabled?: boolean;\n  onBlurWithin?: (e: FocusEvent) => void;\n  onFocusWithin?: (e: FocusEvent) => void;\n};\nfunction TestComponent(props: TestComponentProps) {\n  const { focusProps, isFocused } = useFocusWithin(props);\n  return (\n    <div>\n      <div {...focusProps}>\n        <input id=\"insideInput\" />\n      </div>\n      {isFocused && <span>Focused</span>}\n      <input id=\"outsideInput\" />\n    </div>\n  );\n}\n\ndescribe('useFocusWithin tests', () => {\n  // TODO: Figure out why this test is timing out in Jest.\n  // it('should correctly set the isFocused boolean', async () => {\n  //   const { container } = render(<TestComponent />);\n\n  //   const inputElement = container.querySelector<HTMLInputElement>('#insideInput');\n  //   const outerInputElement = container.querySelector<HTMLInputElement>('#outsideInput');\n  //   // check that the isFocused is false initially\n  //   expect(container.querySelector('span'), 'focused text is not present').be.null;\n\n  //   // focus the input element and check for the flag\n  //   inputElement?.focus();\n  //   await waitFor(\n  //     () => expect(container.querySelector('span'), 'focused text is present').not.be.null\n  //   );\n\n  //   // focus outside and check for the flag\n  //   outerInputElement?.focus();\n  //   await waitForElementToBeRemoved(container.querySelector('span'));\n  // });\n\n  it('should call the callbacks correctly', async () => {\n    const onFocus = spy();\n    const onBlur = spy();\n    const { container } = render(<TestComponent onFocusWithin={onFocus} onBlurWithin={onBlur} />);\n\n    const inputElement = container.querySelector<HTMLInputElement>('#insideInput');\n    const outerInputElement = container.querySelector<HTMLInputElement>('#outsideInput');\n\n    // focus the input element and check for the flag\n    inputElement?.focus();\n    await waitFor(\n      () =>\n        expect(onFocus.calledOnceWithExactly(match({ type: 'focusin' })), 'onFocusWithin called').be\n          .true\n    );\n\n    // focus outside and check for the flag\n    outerInputElement?.focus();\n    await waitFor(\n      () =>\n        expect(onFocus.calledOnceWithExactly(match({ type: 'focusin' })), 'onBlurWithin called').be\n          .true\n    );\n  });\n\n  it('should not call the callbacks when disabled', async () => {\n    const onFocus = spy();\n    const onBlur = spy();\n    const { container } = render(\n      <TestComponent onFocusWithin={onFocus} onBlurWithin={onBlur} isDisabled={true} />\n    );\n\n    const inputElement = container.querySelector<HTMLInputElement>('#insideInput');\n    const outerInputElement = container.querySelector<HTMLInputElement>('#outsideInput');\n\n    // focus the input element and check for the flag\n    inputElement?.focus();\n    await waitFor(() => expect(onFocus.notCalled, 'onFocusWithin not called').be.true);\n\n    // focus outside and check for the flag\n    outerInputElement?.focus();\n    await waitFor(() => expect(onBlur.notCalled, 'onBlurWithin not called').be.true);\n  });\n});\n"],"names":["useFocusWithin","_jsxs","_jsx","spy","render","waitFor","expect","match"],"mappings":"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"}