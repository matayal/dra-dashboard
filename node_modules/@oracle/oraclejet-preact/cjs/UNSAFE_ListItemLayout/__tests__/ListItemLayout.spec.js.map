{"version":3,"file":"ListItemLayout.spec.js","sources":["../../../../src/UNSAFE_ListItemLayout/__tests__/ListItemLayout.spec.tsx"],"sourcesContent":["import { cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { ListItemLayout } from '../ListItemLayout';\nimport { ListItemText } from '../ListItemText';\nimport { ListItemTextLayout } from '../ListItemTextLayout';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\n\nafterEach(cleanup);\n\ndescribe('Test ListItemLayout component', () => {\n  it('render ListItemLayout', async function () {\n    const content = render(<ListItemLayout primary=\"Simple Text\" />);\n    const label = await content.findByText('Simple Text');\n    expect(label).not.to.be.null;\n  });\n\n  it('render ListItemText', async function () {\n    const content = render(\n      <ListItemLayout\n        primary={<ListItemText variant=\"primary\">ListItemText Sample</ListItemText>}\n      />\n    );\n    const label = await content.findByText('ListItemText Sample');\n    expect(label).not.to.be.null;\n  });\n\n  it('render ListItemTextLayout', async function () {\n    const content = render(\n      <ListItemLayout>\n        <ListItemTextLayout primary=\"ListItemTextLayout Sample\" />\n      </ListItemLayout>\n    );\n    const label = await content.findByText('ListItemTextLayout Sample');\n    expect(label).not.to.be.null;\n  });\n\n  it('ListItemText, TabbableModeContext isTabbable=true', async () => {\n    const { container } = render(\n      <TabbableModeContext.Provider value={{ isTabbable: true }}>\n        <ListItemText variant=\"secondary\">Tabbing with mode</ListItemText>\n      </TabbableModeContext.Provider>\n    );\n\n    const div = container.querySelector('div');\n    expect(div).not.to.be.null;\n\n    const tabindex = div?.getAttribute('tabindex');\n    expect(tabindex).to.equal('0');\n  });\n});\n"],"names":["cleanup","render","_jsx","ListItemLayout","expect","ListItemText","ListItemTextLayout","TabbableModeContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAAS,CAACA,cAAO,CAAC,CAAC;AAEnB,QAAQ,CAAC,+BAA+B,EAAE,MAAK;IAC7C,EAAE,CAAC,uBAAuB,EAAE,kBAAK;AAC/B,QAAA,MAAM,OAAO,GAAGC,aAAM,CAACC,cAAC,CAAAC,iCAAc,EAAC,EAAA,OAAO,EAAC,aAAa,EAAG,CAAA,CAAC,CAAC;QACjE,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACtDC,WAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AAC/B,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,kBAAK;AAC7B,QAAA,MAAM,OAAO,GAAGH,aAAM,CACpBC,cAAC,CAAAC,iCAAc,IACb,OAAO,EAAED,cAAC,CAAAG,+BAAY,kBAAC,OAAO,EAAC,SAAS,EAAmC,EAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,CAAA,CAAA,EAAA,CAC3E,CACH,CAAC;QACF,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QAC9DD,WAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AAC/B,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,kBAAK;AACnC,QAAA,MAAM,OAAO,GAAGH,aAAM,CACpBC,cAAA,CAACC,iCAAc,EACb,EAAA,QAAA,EAAAD,cAAA,CAACI,qCAAkB,EAAA,EAAC,OAAO,EAAC,2BAA2B,EAAG,CAAA,EAAA,CAC3C,CAClB,CAAC;QACF,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;QACpEF,WAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AAC/B,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,mDAAmD,EAAE,YAAW;AACjE,QAAA,MAAM,EAAE,SAAS,EAAE,GAAGH,aAAM,CAC1BC,cAAC,CAAAK,gDAAmB,CAAC,QAAQ,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,EACvD,EAAA,EAAA,QAAA,EAAAL,cAAA,CAACG,+BAAY,EAAA,MAAA,CAAA,MAAA,CAAA,EAAC,OAAO,EAAC,WAAW,EAAA,EAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,CAAiC,EACrC,CAAA,CAAA,CAChC,CAAC;QAEF,MAAM,GAAG,GAAG,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3CD,WAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AAE3B,QAAA,MAAM,QAAQ,GAAG,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAE,YAAY,CAAC,UAAU,CAAC,CAAC;QAC/CA,WAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACjC,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;"}