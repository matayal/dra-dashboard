{"version":3,"file":"MessageLayer-2d31300d.js","sources":["../../src/PRIVATE_MessageLayer/MessageLayer.tsx"],"sourcesContent":["import { ComponentChildren } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\n\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { stringLiteralArray } from '../utils/UNSAFE_arrayUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { Flex } from '../UNSAFE_Flex';\nimport { WindowOverlay } from '../UNSAFE_WindowOverlay';\n\nconst positions = stringLiteralArray([\n  'top',\n  'top-left',\n  'top-right',\n  'top-start',\n  'top-end',\n  'bottom',\n  'bottom-left',\n  'bottom-right',\n  'bottom-start',\n  'bottom-end'\n]);\n\ntype Position = typeof positions[number];\n\ntype Offset =\n  | number\n  | {\n      horizontal?: number;\n      vertical?: number;\n    };\n\ntype Props = {\n  children: ComponentChildren;\n\n  /**\n   * Defines the fixed position where the notifications will to be placed on the screen.\n   * - top-start resolves to top-left in LTR (top-right in RTL)\n   * - top-end resolves to top-right in LTR (top-left in RTL)\n   * - bottom-start resolves to bottom-left in LTR (bottom-right in RTL)\n   * - bottom-end resolves to bottom-right in LTR (bottom-left in RTL)\n   *\n   * default bottom\n   */\n  position?: Position;\n\n  /**\n   * Defines an offset (in pixels) in the placement. Value can be supplied as a number or\n   * an object with horizontal and vertical values.\n   *\n   * default 0\n   */\n  offset?: Offset;\n\n  /**\n   * The test id which is assigned to the \"data-testid\" for the component's element.\n   * Used for test automation, it is assigned to the wrapper element rendered by the component.\n   */\n  testId?: string;\n};\n\nconst styles = {\n  notificationPosition: cssProps`${{\n    position: 'absolute',\n    pointerEvents: 'initial',\n    width: 'max-content'\n  }}`,\n  ['top-left']: cssProps`${{\n    left: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    top: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`,\n  top: cssProps`${{\n    left: 'calc(50% + var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset))',\n    top: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)',\n    transform: 'translateX(-50%)'\n  }}`,\n  ['top-right']: cssProps`${{\n    right: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    top: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`,\n  ['bottom-left']: cssProps`${{\n    left: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    bottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`,\n  bottom: cssProps`${{\n    left: 'calc(50% + var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset))',\n    bottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)',\n    transform: 'translateX(-50%)'\n  }}`,\n  ['bottom-right']: cssProps`${{\n    right: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset)',\n    bottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset)'\n  }}`\n} as const;\n\nconst MessageLayer = ({ children, offset, testId, position = 'bottom' }: Props) => {\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n\n  let logicalPosition;\n  switch (position) {\n    case 'top-start':\n      logicalPosition = isLtr ? styles['top-left'] : styles['top-right'];\n      break;\n    case 'top-end':\n      logicalPosition = isLtr ? styles['top-right'] : styles['top-left'];\n      break;\n    case 'bottom-start':\n      logicalPosition = isLtr ? styles['bottom-left'] : styles['bottom-right'];\n      break;\n    case 'bottom-end':\n      logicalPosition = isLtr ? styles['bottom-right'] : styles['bottom-left'];\n      break;\n    default:\n      logicalPosition = styles[position];\n      break;\n  }\n\n  const positionClasses = classNames([styles.notificationPosition, logicalPosition]);\n\n  const offsetStyle =\n    typeof offset === 'number'\n      ? {\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${offset}px`,\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${offset}px`\n        }\n      : {\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${offset?.vertical ?? 0}px`,\n          '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${offset?.horizontal ?? 0}px`\n        };\n\n  return (\n    <WindowOverlay>\n      <div\n        class={positionClasses}\n        data-testid={testId}\n        style={offset !== undefined ? offsetStyle : undefined}>\n        <Flex direction=\"column\" gap=\"2x\">\n          {children}\n        </Flex>\n      </div>\n    </WindowOverlay>\n  );\n};\n\nexport type { Position, Offset };\nexport { MessageLayer, positions };\n"],"names":["positions","stringLiteralArray","styles","MessageLayer","children","offset","testId","position","direction","useUser","isLtr","logicalPosition","positionClasses","classNames","notificationPosition","offsetStyle","_a","vertical","_b","horizontal","_jsx","WindowOverlay","Object","assign","class","style","undefined","Flex","gap"],"mappings":"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"}