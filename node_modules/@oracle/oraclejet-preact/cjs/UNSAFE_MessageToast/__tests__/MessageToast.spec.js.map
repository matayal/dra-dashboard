{"version":3,"file":"MessageToast.spec.js","sources":["../../../../src/UNSAFE_MessageToast/__tests__/MessageToast.spec.tsx"],"sourcesContent":["import { act, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { ComponentProps } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport Sinon from 'sinon';\nimport { RootEnvironment, RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { MessageToast } from '../MessageToast';\n\ntype MessageToastProps = ComponentProps<typeof MessageToast>;\n\ndescribe('Test MessageToast component', () => {\n  let env: Partial<RootEnvironment>;\n\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n\n  beforeEach(async () => {\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    env =\n      env ||\n      ({\n        translations: { '@oracle/oraclejet-preact': translations }\n      } as Partial<RootEnvironment>);\n\n    // use fake matchMedia in jest\n    if (!window.matchMedia ?? jest) {\n      Object.defineProperty(window, 'matchMedia', {\n        writable: true,\n        value: jest.fn().mockImplementation((query) => ({\n          matches: false,\n          media: query,\n          onchange: null,\n          addListener: jest.fn(), // deprecated\n          removeListener: jest.fn(), // deprecated\n          addEventListener: jest.fn(),\n          removeEventListener: jest.fn(),\n          dispatchEvent: jest.fn()\n        }))\n      });\n    }\n  });\n\n  it('renders data correctly', async () => {\n    const data: MessageToastProps['data'] = [\n      { key: 0, data: { summary: 'primary text', detail: 'data attribute', severity: 'error' } },\n      { key: 1, data: { summary: 'primary text', detail: 'data attribute', severity: 'error' } },\n      { key: 2, data: { summary: 'primary text', detail: 'data attribute', severity: 'error' } }\n    ];\n    const { queryAllByRole, queryAllByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n    const messages = queryAllByRole('alert');\n\n    expect(messages.length).equals(3);\n\n    const summaries = queryAllByText('primary text', { exact: true });\n    const details = queryAllByText('data attribute', { exact: true });\n\n    expect(messages[0].contains(summaries[0])).be.true;\n    expect(messages[0].contains(details[0])).be.true;\n\n    expect(messages[1].contains(summaries[1])).be.true;\n    expect(messages[1].contains(details[1])).be.true;\n\n    expect(messages[2].contains(summaries[2])).be.true;\n    expect(messages[2].contains(details[2])).be.true;\n  });\n\n  it('renders nothing when no data', async () => {\n    const { queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={[]} />\n      </RootEnvironmentProvider>\n    );\n    const messages = queryAllByRole('alert');\n\n    expect(messages.length).equals(0);\n  });\n\n  it('renders as error by default', async () => {\n    const data = [{ key: 0, data: { summary: 'test toast' } }];\n    const { container, queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    const errorTitle = container.querySelector('[title=\"Error\"]');\n    expect(errorTitle).not.be.null;\n  });\n\n  it('renders as warning message', async () => {\n    const data = [\n      { key: 0, data: { severity: 'warning', summary: 'test toast' } }\n    ] as MessageToastProps['data'];\n    const { container, queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    const warningTitle = container.querySelector('[title=\"Warning\"]');\n    expect(warningTitle).not.be.null;\n  });\n\n  it('renders as confirmation message', async () => {\n    const data = [\n      { key: 0, data: { severity: 'confirmation', summary: 'test toast' } }\n    ] as MessageToastProps['data'];\n    const { container, queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    const confirmationTitle = container.querySelector('[title=\"Confirmation\"]');\n    expect(confirmationTitle).not.be.null;\n  });\n\n  it('renders as info message', async () => {\n    const data = [\n      { key: 0, data: { severity: 'info', summary: 'test toast' } }\n    ] as MessageToastProps['data'];\n    const { container, queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    const infoTitle = container.querySelector('[title=\"Info\"]');\n    expect(infoTitle).not.be.null;\n  });\n\n  it('renders as neutral message', async () => {\n    const data = [\n      { key: 0, data: { severity: 'none', summary: 'test toast' } }\n    ] as MessageToastProps['data'];\n    const { queryAllByRole, queryByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    const severityIcon = queryByRole('img');\n    expect(severityIcon).be.null;\n  });\n\n  it('renders as close button by default', async () => {\n    const data = [{ key: 0, data: { summary: 'test toast' } }] as MessageToastProps['data'];\n    const { queryAllByRole, queryByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    const closeButton = queryByRole('button');\n    expect(closeButton).not.be.null;\n  });\n\n  it('renders without close button', async () => {\n    const data = [\n      { key: 0, data: { closeAffordance: 'off', summary: 'test toast' } }\n    ] as MessageToastProps['data'];\n    const { queryAllByRole, queryByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    const closeButton = queryByRole('button');\n    expect(closeButton).be.null;\n  });\n\n  it('renders custom detail content for all messages', async () => {\n    const data = [\n      { key: 0, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 1, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 2, data: { summary: 'test toast', detail: 'detail text' } }\n    ] as MessageToastProps['data'];\n    const { queryAllByRole, queryAllByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast\n          data={data}\n          renderers={{ customRenderer: () => <div>Custom text</div> }}\n          detailRendererKey=\"customRenderer\"\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // default rendering should not have happened\n    const detailText = queryAllByText('detail text');\n    expect(detailText).be.empty;\n\n    // all the messages should have used custom rendering\n    const customText = queryAllByText('Custom text');\n    expect(customText.length).equals(3);\n  });\n\n  it('passes correct argument for custom detail renderers', async () => {\n    type MessageRenderer = Exclude<MessageToastProps['renderers'], undefined>[string];\n    const data = [\n      { key: 0, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 1, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 2, data: { summary: 'test toast', detail: 'detail text' } }\n    ] as MessageToastProps['data'];\n    const customRenderer = Sinon.spy<MessageRenderer>(() => <div>Custom text</div>);\n    const { queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast\n          data={data}\n          renderers={{ customRenderer }}\n          detailRendererKey=\"customRenderer\"\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // renderer should be called thrice for each render\n    expect(customRenderer.callCount).equals(6);\n    expect(\n      customRenderer.calledWith(\n        Sinon.match({\n          data: data[0].data,\n          key: data[0].key\n        })\n      )\n    ).be.true;\n    expect(\n      customRenderer.calledWith(\n        Sinon.match({\n          data: data[1].data,\n          key: data[1].key\n        })\n      )\n    ).be.true;\n    expect(\n      customRenderer.calledWith(\n        Sinon.match({\n          data: data[2].data,\n          key: data[2].key\n        })\n      )\n    ).be.true;\n  });\n\n  it('renders custom detail content for selective messages', async () => {\n    const data = [\n      { key: 0, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 1, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 2, data: { summary: 'test toast', detail: 'detail text' } }\n    ] as MessageToastProps['data'];\n    const detailRendererKey: MessageToastProps['detailRendererKey'] = ({ key }) => {\n      if (key === 1) {\n        return 'customRenderer';\n      }\n      return undefined;\n    };\n    const { queryAllByRole, queryAllByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast\n          data={data}\n          renderers={{ customRenderer: () => <div>Custom text</div> }}\n          detailRendererKey={detailRendererKey}\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // default rendering should have happened for 2 messages\n    const detailText = queryAllByText('detail text');\n    expect(detailText.length).equals(2);\n\n    // custom rendering should have happened for 1 message\n    const customText = queryAllByText('Custom text');\n    expect(customText.length).equals(1);\n  });\n\n  it('passes correct argument for detailRendererKey', async () => {\n    // eslint-disable-next-line\n    type MessageDetailRendererKeyFn = Extract<MessageToastProps['detailRendererKey'], Function>;\n    const data = [\n      { key: 0, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 1, data: { summary: 'test toast', detail: 'detail text' } },\n      { key: 2, data: { summary: 'test toast', detail: 'detail text' } }\n    ] as MessageToastProps['data'];\n    const detailRendererKey = Sinon.spy<MessageDetailRendererKeyFn>(({ key }) => {\n      if (key === 1) {\n        return 'customRenderer';\n      }\n      return undefined;\n    });\n    const { queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast\n          data={data}\n          renderers={{ customRenderer: () => <div>Custom text</div> }}\n          detailRendererKey={detailRendererKey}\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // renderer should be called thrice for each render\n    expect(detailRendererKey.callCount).equals(6);\n    expect(detailRendererKey.calledWith(Sinon.match(data[0]))).be.true;\n    expect(detailRendererKey.calledWith(Sinon.match(data[1]))).be.true;\n    expect(detailRendererKey.calledWith(Sinon.match(data[2]))).be.true;\n  });\n\n  it('renders custom start icon content for all messages', async () => {\n    const data = [\n      { key: 0, data: { summary: 'test toast', severity: 'error' } },\n      { key: 1, data: { summary: 'test toast', severity: 'warning' } },\n      { key: 2, data: { summary: 'test toast', severity: 'none' } }\n    ] as MessageToastProps['data'];\n    const { queryAllByRole, queryAllByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast\n          data={data}\n          renderers={{ customRenderer: () => <div>X</div> }}\n          iconRendererKey=\"customRenderer\"\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // default rendering should not have happened\n    const defaultIcons = queryAllByRole('img');\n    expect(defaultIcons).be.empty;\n\n    // all the messages should have used custom rendering\n    const customIcon = queryAllByText('X');\n    expect(customIcon.length).equals(3);\n  });\n\n  it('passes correct argument for custom icon renderers', async () => {\n    type MessageRenderer = Exclude<MessageToastProps['renderers'], undefined>[string];\n    const data = [\n      { key: 0, data: { summary: 'test toast', severity: 'error' } },\n      { key: 1, data: { summary: 'test toast', severity: 'warning' } },\n      { key: 2, data: { summary: 'test toast', severity: 'none' } }\n    ] as MessageToastProps['data'];\n    const customRenderer = Sinon.spy<MessageRenderer>(() => <div>X</div>);\n    const { queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} renderers={{ customRenderer }} iconRendererKey=\"customRenderer\" />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // renderer should be called thrice for each render\n    expect(customRenderer.callCount).equals(6);\n    expect(\n      customRenderer.calledWith(\n        Sinon.match({\n          data: data[0].data,\n          key: data[0].key\n        })\n      )\n    ).be.true;\n    expect(\n      customRenderer.calledWith(\n        Sinon.match({\n          data: data[1].data,\n          key: data[1].key\n        })\n      )\n    ).be.true;\n    expect(\n      customRenderer.calledWith(\n        Sinon.match({\n          data: data[2].data,\n          key: data[2].key\n        })\n      )\n    ).be.true;\n  });\n\n  it('renders custom start icon content for selective messages', async () => {\n    const data = [\n      { key: 0, data: { summary: 'test toast', severity: 'error' } },\n      { key: 1, data: { summary: 'test toast', severity: 'warning' } },\n      { key: 2, data: { summary: 'test toast', severity: 'none' } }\n    ] as MessageToastProps['data'];\n    const iconRendererKey: MessageToastProps['iconRendererKey'] = ({ key }) => {\n      if (key === 1) {\n        return 'customRenderer';\n      }\n      return undefined;\n    };\n    const { queryAllByRole, queryAllByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast\n          data={data}\n          renderers={{ customRenderer: () => <div>X</div> }}\n          iconRendererKey={iconRendererKey}\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // default rendering should have happened for 2 messages\n    // since we have `none` for 1 message, we should have only one icon.\n    const icon = queryAllByRole('img');\n    expect(icon.length).equals(1);\n\n    // custom rendering should have happened for 1 message\n    const customIcon = queryAllByText('X');\n    expect(customIcon.length).equals(1);\n  });\n\n  it('passes correct argument for iconRendererKey', async () => {\n    // eslint-disable-next-line\n    type MessageIconRendererKeyFn = Extract<MessageToastProps['iconRendererKey'], Function>;\n    const data = [\n      { key: 0, data: { summary: 'test toast', severity: 'error' } },\n      { key: 1, data: { summary: 'test toast', severity: 'warning' } },\n      { key: 2, data: { summary: 'test toast', severity: 'none' } }\n    ] as MessageToastProps['data'];\n    const iconRendererKey = Sinon.spy<MessageIconRendererKeyFn>(({ key }) => {\n      if (key === 1) {\n        return 'customRenderer';\n      }\n      return undefined;\n    });\n    const { queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast\n          data={data}\n          renderers={{ customRenderer: () => <div>X</div> }}\n          iconRendererKey={iconRendererKey}\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // renderer should be called thrice for each render\n    expect(iconRendererKey.callCount).equals(6);\n    expect(iconRendererKey.calledWith(Sinon.match(data[0]))).be.true;\n    expect(iconRendererKey.calledWith(Sinon.match(data[1]))).be.true;\n    expect(iconRendererKey.calledWith(Sinon.match(data[2]))).be.true;\n  });\n});\n\ndescribe('Test MessageToast interaction', () => {\n  function UncontrolledMessageToast({\n    data: propData,\n    onClose: propOnClose,\n    ...props\n  }: MessageToastProps) {\n    const [data, setData] = useState(propData);\n    const onClose = useCallback<Exclude<typeof propOnClose, undefined>>(\n      (args) => {\n        // When no close handler is provided, close the corresponding\n        // message. Otherwise let the provided handler do things.\n        if (propOnClose === undefined) {\n          setData(data.filter((i) => i.key !== args.key));\n          return;\n        }\n        propOnClose.call(null, args);\n      },\n      [propOnClose]\n    );\n\n    console.log(data);\n\n    return <MessageToast {...props} data={data} onClose={onClose} />;\n  }\n\n  let env: Partial<RootEnvironment>;\n\n  beforeEach(async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    env = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    } as Partial<RootEnvironment>;\n\n    if (typeof jest !== 'undefined') {\n      jest.useFakeTimers();\n    }\n  });\n\n  // TODO: fix removal issue (for some reason the test cannot be made to wait for the removal of the message)\n  // it works in the UI, but not in the test\n  xit('closes messages correctly', async () => {\n    const data: MessageToastProps['data'] = [\n      { key: 0, data: { summary: 'first message', detail: 'data attribute', severity: 'error' } },\n      { key: 1, data: { summary: 'second message', detail: 'data attribute', severity: 'error' } },\n      { key: 2, data: { summary: 'third message', detail: 'data attribute', severity: 'error' } }\n    ];\n    const { queryAllByRole, queryByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <UncontrolledMessageToast data={data} />\n      </RootEnvironmentProvider>\n    );\n\n    let messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    // close the second message\n    let closeButton = queryAllByRole('button')[1];\n    expect(closeButton).not.be.null;\n\n    act(() => closeButton.click());\n    // TODO: wait for animations when it is implemented\n\n    messages = queryAllByRole('alert');\n    expect(messages.length).equals(2);\n\n    // second message should be closed\n    expect(queryByText('second message')).be.null;\n\n    // close the now second message\n    closeButton = queryAllByRole('button')[1];\n    expect(closeButton).not.be.null;\n\n    act(() => closeButton.click());\n    // TODO: wait for animations when it is implemented\n\n    messages = queryAllByRole('alert');\n    expect(messages.length).equals(1);\n\n    // originally third message should be closed\n    expect(queryByText('third message')).be.null;\n  });\n\n  it('has correct close button payload', async () => {\n    const data: MessageToastProps['data'] = [\n      { key: 0, data: { summary: 'first message', detail: 'data attribute', severity: 'error' } },\n      { key: 1, data: { summary: 'second message', detail: 'data attribute', severity: 'error' } },\n      { key: 2, data: { summary: 'third message', detail: 'data attribute', severity: 'error' } }\n    ];\n    const onClose = Sinon.spy();\n    const { queryAllByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageToast data={data} onClose={onClose} />\n      </RootEnvironmentProvider>\n    );\n\n    const messages = queryAllByRole('alert');\n    expect(messages.length).equals(3);\n\n    const closeButtons = queryAllByRole('button');\n    expect(closeButtons.length).equals(3);\n\n    act(() => closeButtons[0].click());\n    expect(onClose.calledOnceWith(Sinon.match(data[0]))).be.true;\n    onClose.resetHistory();\n\n    act(() => closeButtons[1].click());\n    expect(onClose.calledOnceWith(Sinon.match(data[1]))).be.true;\n    onClose.resetHistory();\n\n    act(() => closeButtons[2].click());\n    expect(onClose.calledOnceWith(Sinon.match(data[2]))).be.true;\n    onClose.resetHistory();\n  });\n\n  // test only in jest environment\n  if (typeof jest !== 'undefined') {\n    // TODO: fix removal issue (for some reason the test cannot be made to wait for the removal of the message)\n    // it works in the UI, but not in the test\n    xit('auto dismiss works with default', async () => {\n      const data: MessageToastProps['data'] = [\n        {\n          key: 'message1',\n          data: {\n            severity: 'info',\n            summary: 'Info Text',\n            detail: 'Auto Timeout On',\n            closeAffordance: 'off',\n            autoTimeout: 'on'\n          }\n        },\n        {\n          key: 'message3',\n          data: {\n            severity: 'error',\n            summary: 'Error Text',\n            detail: 'Auto Timeout Off',\n            closeAffordance: 'on',\n            autoTimeout: 'off'\n          }\n        }\n      ];\n\n      const { queryAllByRole } = render(\n        <RootEnvironmentProvider environment={env}>\n          <UncontrolledMessageToast data={data} />\n        </RootEnvironmentProvider>\n      );\n\n      const messages = queryAllByRole('alert');\n      expect(messages.length).equals(2);\n\n      // advanced past default\n      await act(async () => {\n        jest?.advanceTimersByTime(6000);\n      });\n\n      // rerender(\n      //   <RootEnvironmentProvider environment={env}>\n      //     <UncontrolledMessageToast data={data} />\n      //   </RootEnvironmentProvider>\n      // );\n\n      const messagesSecond = queryAllByRole('alert');\n      expect(messagesSecond.length).equals(1);\n    });\n\n    // TODO: fix removal issue (for some reason the test cannot be made to wait for the removal of the message)\n    // it works in the UI, but not in the test\n    xit('auto dismiss works with user defined', async () => {\n      const data: MessageToastProps['data'] = [\n        {\n          key: 'message1',\n          data: {\n            severity: 'info',\n            summary: 'Info Text',\n            detail: 'Auto Timeout On',\n            closeAffordance: 'off',\n            autoTimeout: 10000\n          }\n        },\n        {\n          key: 'message3',\n          data: {\n            severity: 'error',\n            summary: 'Error Text',\n            detail: 'Auto Timeout Off',\n            closeAffordance: 'on',\n            autoTimeout: 'off'\n          }\n        }\n      ];\n\n      const { queryAllByRole, rerender } = render(\n        <RootEnvironmentProvider environment={env}>\n          <UncontrolledMessageToast data={data} />\n        </RootEnvironmentProvider>\n      );\n\n      const messages = queryAllByRole('alert');\n      expect(messages.length).equals(2);\n\n      // advanced past default\n      await act(async () => {\n        jest?.advanceTimersByTime(11000);\n      });\n\n      rerender(\n        <RootEnvironmentProvider environment={env}>\n          <UncontrolledMessageToast data={data} />\n        </RootEnvironmentProvider>\n      );\n\n      const messagesSecond = queryAllByRole('alert');\n      expect(messagesSecond.length).equals(1);\n    });\n  }\n\n  if (typeof jest !== 'undefined') {\n    afterEach(() => {\n      jest.runOnlyPendingTimers();\n      jest.useRealTimers();\n    });\n  }\n});\n"],"names":["matchTranslationBundle","render","_jsx","RootEnvironmentProvider","MessageToast","expect","Sinon","__rest","useState","useCallback","act"],"mappings":"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"}