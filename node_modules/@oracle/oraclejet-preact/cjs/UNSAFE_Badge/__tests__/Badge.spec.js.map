{"version":3,"file":"Badge.spec.js","sources":["../../../../src/UNSAFE_Badge/__tests__/Badge.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { Badge } from '../Badge';\n\ndescribe('Test Badge component', () => {\n  it('render', async function () {\n    const content = render(<Badge>Badge</Badge>);\n    const initials = await content.findByText('Badge');\n    expect(initials).not.null;\n  });\n\n  it('variant property success', async function () {\n    const content = render(<Badge variant=\"success\">Badge</Badge>);\n    const firstElement = content.container.firstElementChild;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(3);\n  });\n\n  it('variant property danger', async function () {\n    const content = render(<Badge variant=\"danger\">Badge</Badge>);\n    const firstElement = content.container.firstElementChild;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(3);\n  });\n\n  it('variant property warning', async function () {\n    const content = render(<Badge variant=\"warning\">Badge</Badge>);\n    const firstElement = content.container.firstElementChild;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(3);\n  });\n\n  it('variant property info', async function () {\n    const content = render(<Badge variant=\"info\">Badge</Badge>);\n    const firstElement = content.container.firstElementChild;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(3);\n  });\n});\n"],"names":["render","_jsx","Badge","expect"],"mappings":";;;;;;;;;;;AAIA,QAAQ,CAAC,sBAAsB,EAAE,MAAK;IACpC,EAAE,CAAC,QAAQ,EAAE,kBAAK;QAChB,MAAM,OAAO,GAAGA,aAAM,CAACC,eAACC,WAAK,EAAA,EAAA,QAAA,EAAA,OAAA,EAAA,CAAc,CAAC,CAAC;QAC7C,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACnD,QAAAC,WAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC5B,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,kBAAK;AAClC,QAAA,MAAM,OAAO,GAAGH,aAAM,CAACC,cAAC,CAAAC,WAAK,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,OAAO,EAAC,SAAS,EAAc,EAAA,EAAA,QAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAC,CAAC;AAC/D,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC;;AAEzD,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACzCC,WAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACrC,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,kBAAK;AACjC,QAAA,MAAM,OAAO,GAAGH,aAAM,CAACC,cAAC,CAAAC,WAAK,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,OAAO,EAAC,QAAQ,EAAc,EAAA,EAAA,QAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAC,CAAC;AAC9D,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC;;AAEzD,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACzCC,WAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACrC,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,kBAAK;AAClC,QAAA,MAAM,OAAO,GAAGH,aAAM,CAACC,cAAC,CAAAC,WAAK,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,OAAO,EAAC,SAAS,EAAc,EAAA,EAAA,QAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAC,CAAC;AAC/D,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC;;AAEzD,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACzCC,WAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACrC,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,kBAAK;AAC/B,QAAA,MAAM,OAAO,GAAGH,aAAM,CAACC,cAAC,CAAAC,WAAK,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,OAAO,EAAC,MAAM,EAAc,EAAA,EAAA,QAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAC,CAAC;AAC5D,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC;;AAEzD,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACzCC,WAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACrC,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;"}