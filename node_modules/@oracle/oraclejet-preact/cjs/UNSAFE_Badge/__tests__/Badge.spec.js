/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');
var preact = require('@testing-library/preact');
var chai = require('chai');
var Badge = require('../../Badge-c5723bb5.js');
require('../../utils/UNSAFE_classNames.js');
require('../../classNames-55bceee6.js');
require("identity-obj-proxy");

describe('Test Badge component', () => {
    it('render', async function () {
        const content = preact.render(jsxRuntime.jsx(Badge.Badge, { children: "Badge" }));
        const initials = await content.findByText('Badge');
        chai.expect(initials).not.null;
    });
    it('variant property success', async function () {
        const content = preact.render(jsxRuntime.jsx(Badge.Badge, Object.assign({ variant: "success" }, { children: "Badge" })));
        const firstElement = content.container.firstElementChild;
        // @ts-ignore
        const classList = firstElement.classList;
        chai.expect(classList.length).equals(3);
    });
    it('variant property danger', async function () {
        const content = preact.render(jsxRuntime.jsx(Badge.Badge, Object.assign({ variant: "danger" }, { children: "Badge" })));
        const firstElement = content.container.firstElementChild;
        // @ts-ignore
        const classList = firstElement.classList;
        chai.expect(classList.length).equals(3);
    });
    it('variant property warning', async function () {
        const content = preact.render(jsxRuntime.jsx(Badge.Badge, Object.assign({ variant: "warning" }, { children: "Badge" })));
        const firstElement = content.container.firstElementChild;
        // @ts-ignore
        const classList = firstElement.classList;
        chai.expect(classList.length).equals(3);
    });
    it('variant property info', async function () {
        const content = preact.render(jsxRuntime.jsx(Badge.Badge, Object.assign({ variant: "info" }, { children: "Badge" })));
        const firstElement = content.container.firstElementChild;
        // @ts-ignore
        const classList = firstElement.classList;
        chai.expect(classList.length).equals(3);
    });
});
/*  */
//# sourceMappingURL=Badge.spec.js.map
