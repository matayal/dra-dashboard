/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

var tslib_es6 = require('./tslib.es6-6f60dd09.js');
var jsxRuntime = require('preact/jsx-runtime');
var preact = require('preact');

var utils_UNSAFE_size = require('./utils/UNSAFE_size.js');
var hooks_UNSAFE_useTooltip = require('./hooks/UNSAFE_useTooltip.js');

const Icon = ({
  size = '1em',
  color = 'currentColor',
  accessibleLabel = '',
  viewBox = 'none',
  children
}) => jsxRuntime.jsx(Svg, Object.assign({
  height: "1em",
  width: "1em",
  viewBox: viewBox,
  accessibleLabel: accessibleLabel,
  class: colorStyles[color],
  style: {
    fontSize: size === '1em' ? size : `${utils_UNSAFE_size.sizeToCSS(size)}`
  }
}, {
  children: children
}));

const Svg = _a => {
  var {
    accessibleLabel
  } = _a,
      otherProps = tslib_es6.__rest(_a, ["accessibleLabel"]);

  return accessibleLabel ? jsxRuntime.jsx(SemanticSvg, Object.assign({
    accessibleLabel: accessibleLabel
  }, otherProps)) : jsxRuntime.jsx(DecorativeSvg, Object.assign({}, otherProps));
};

const DecorativeSvg = props => jsxRuntime.jsx("svg", Object.assign({}, props));

const SemanticSvg = _a => {
  var {
    accessibleLabel,
    children
  } = _a,
      props = tslib_es6.__rest(_a, ["accessibleLabel", "children"]);

  const {
    tooltipContent,
    tooltipProps
  } = hooks_UNSAFE_useTooltip.useTooltip({
    text: accessibleLabel,
    anchor: {
      x: 'element',
      y: 'element'
    },
    position: 'bottom',
    offset: {
      mainAxis: 8,
      crossAxis: 0
    }
  });
  return jsxRuntime.jsxs(preact.Fragment, {
    children: [jsxRuntime.jsx("svg", Object.assign({
      role: "img"
    }, props, tooltipProps, {
      "aria-label": accessibleLabel
    }, {
      children: children
    })), tooltipContent]
  });
};

const colorStyles = {
  primary: "_17ib2js",
  secondary: "_1nrkqom",
  disabled: "_1elkjh",
  danger: "_1ynye33",
  warning: "_1gx7uxn",
  success: "_1q0dpsy",
  info: "_3kt4at",
  currentColor: "_17d1esb"
};

exports.Icon = Icon;
/*  */
//# sourceMappingURL=Icon-c44e10c9.js.map
