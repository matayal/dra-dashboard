{"version":3,"file":"UNSAFE_UserAssistance.js","sources":["../../src/UNSAFE_UserAssistance/InlineHelp.tsx","../../src/UNSAFE_UserAssistance/InlineRequired.tsx","../../src/UNSAFE_UserAssistance/InlineUserAssistanceContainer.tsx","../../src/UNSAFE_UserAssistance/InlineUserAssistance.tsx"],"sourcesContent":["import { cssProps } from '@oracle/oraclejet-cssprops';\nimport { InlineHelpSource } from './InlineHelpSource';\n\nconst helpTextStyles = cssProps`${{\n  marginInlineEnd: '0.25rem',\n  whiteSpace: 'pre'\n}}`;\n\ntype Props = {\n  assistiveText?: string;\n  sourceLink?: string;\n  sourceText?: string;\n};\n\nexport function InlineHelp({ assistiveText, sourceLink, sourceText }: Props) {\n  return (\n    <div>\n      {assistiveText && sourceLink ? (\n        <span class={helpTextStyles}>{assistiveText}</span>\n      ) : (\n        assistiveText\n      )}\n      {sourceLink && <InlineHelpSource source={sourceLink}>{sourceText}</InlineHelpSource>}\n    </div>\n  );\n}\n","import { classNames } from '../utils/UNSAFE_classNames';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\n\nconst variantStyles = {\n  start: cssProps`${{\n    paddingInlineEnd: '2px',\n    textAlign: 'start'\n  }}`,\n  end: cssProps`${{\n    paddingInlineStart: '2px',\n    textAlign: 'end'\n  }}`\n};\nconst displayHiddenStyles = cssProps`${{\n  display: 'none'\n}}`;\n\ntype Props = {\n  align?: 'start' | 'end';\n  hasMessages?: boolean;\n  hasHelp?: boolean;\n};\n\nexport function InlineRequired({ align = 'end', hasHelp = false, hasMessages = false }: Props) {\n  const classes = classNames([\n    variantStyles[align],\n    (hasHelp || hasMessages) && displayHiddenStyles\n  ]);\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const requiredStr = translations.userAssistance_required();\n\n  return <div class={classes}>{requiredStr}</div>;\n}\n","import { ComponentChildren } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { UserAssistanceDensityType } from './InlineUserAssistance';\n\nconst baseStyles = cssProps`${{\n  marginTop: '2px',\n  color: 'var(--oj-c-PRIVATE-DO-NOT-USE-user-assistance-inline-text-color)',\n  fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-user-assistance-inline-font-size)',\n  fontWeight: 'normal',\n  lineHeight: 1.333,\n  wordBreak: 'break-word'\n}}`;\nconst variantStyles = {\n  reflow: cssProps`${{\n    '&:empty': {\n      marginTop: '0px'\n    }\n  }}`,\n  efficient: cssProps`${{\n    minHeight: '1.333rem'\n  }}`\n};\n\ntype Props = {\n  children?: ComponentChildren;\n  id?: string;\n  variant?: UserAssistanceDensityType;\n};\n\n// defaults to type='reflow'. If this is within an oj-form-layout, the o-f-l\n// will pass down its type which defaults to 'efficient' (TODO).\nexport function InlineUserAssistanceContainer({ variant = 'reflow', children, id }: Props) {\n  const classes = classNames([baseStyles, variantStyles[variant]]);\n\n  return (\n    <div class={classes} id={id}>\n      {children}\n    </div>\n  );\n}\n","import { ComponentMessageItem, ComponentMessageContainer } from '../UNSAFE_ComponentMessage';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { InlineHelp } from './InlineHelp';\nimport { InlineRequired } from './InlineRequired';\nimport { InlineUserAssistanceContainer } from './InlineUserAssistanceContainer';\n\n// TODO: support 'compact' density type\nexport type UserAssistanceDensityType = 'reflow' | 'efficient';\n\ntype Props = {\n  assistiveText?: string;\n  fieldLabel?: string;\n  helpSourceLink?: string;\n  helpSourceText?: string;\n  id?: string;\n  isRequiredShown?: boolean;\n  messages?: ComponentMessageItem[];\n  userAssistanceDensity?: UserAssistanceDensityType;\n};\n\n// This has the precedence rules for the user assistance.\nexport function InlineUserAssistance({\n  assistiveText,\n  fieldLabel,\n  helpSourceLink,\n  helpSourceText,\n  id,\n  isRequiredShown,\n  messages = [],\n  userAssistanceDensity\n}: Props) {\n  const { isReadonly: isFormReadonly } = useFormContext();\n  const needsUserAssistanceIfNoContent =\n    userAssistanceDensity === 'efficient' && isFormReadonly === false;\n  const { isFocused } = useFormFieldContext();\n  const uaInlineContent =\n    messages.length > 0 ? (\n      <ComponentMessageContainer fieldLabel={fieldLabel} messages={messages} />\n    ) : (assistiveText || helpSourceLink) && isFocused ? (\n      <InlineHelp\n        assistiveText={assistiveText}\n        sourceLink={helpSourceLink}\n        sourceText={helpSourceText}\n      />\n    ) : isRequiredShown ? (\n      <InlineRequired />\n    ) : null;\n\n  // when reflow we do not render unless it has content.\n  // when efficient we render regardless of if it has content.\n  // TODO: Get the userAssistanceDensity value from the FormContext\n  return uaInlineContent || needsUserAssistanceIfNoContent ? (\n    <InlineUserAssistanceContainer id={id} variant={userAssistanceDensity}>\n      {uaInlineContent}\n    </InlineUserAssistanceContainer>\n  ) : null;\n}\n"],"names":["helpTextStyles","InlineHelp","assistiveText","sourceLink","sourceText","_jsxs","children","_jsx","Object","assign","class","InlineHelpSource","source","variantStyles","displayHiddenStyles","InlineRequired","align","hasHelp","hasMessages","translations","useTranslationBundle","requiredStr","userAssistance_required","classes","baseStyles","InlineUserAssistanceContainer","variant","id","classNames","useFormContext","useFormFieldContext","ComponentMessageContainer"],"mappings":"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"}