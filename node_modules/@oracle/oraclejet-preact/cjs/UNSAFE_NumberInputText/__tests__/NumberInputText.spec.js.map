{"version":3,"file":"NumberInputText.spec.js","sources":["../../../../src/UNSAFE_NumberInputText/__dev__/NumberInputText.stories.tsx","../../../../src/UNSAFE_NumberInputText/__tests__/NumberInputText.spec.tsx"],"sourcesContent":["import { Meta, Story } from '@storybook/preact';\nimport { ComponentProps } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport { FormContext, FormContextProps } from '../../hooks/UNSAFE_useFormContext';\nimport { NumberInputText } from '../NumberInputText';\nimport { StepDirection, StepEvent } from '../useSteppers';\nimport { ValueUpdateDetail } from '../../utils/UNSAFE_valueUpdateDetail';\n\nexport default {\n  title: 'Forms/UNSAFE_NumberInputText',\n  component: NumberInputText,\n  decorators: [\n    (Story: any) => (\n      <div style={{ minWidth: '18rem', maxWidth: '28rem', width: '50%' }}>{Story()}</div>\n    )\n  ]\n} as Meta;\n\ntype PickedPropsFromNumberInputText = Pick<\n  ComponentProps<typeof NumberInputText>,\n  | 'assistiveText'\n  | 'helpSourceLink'\n  | 'helpSourceText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'isRequired'\n  | 'label'\n  | 'labelEdge'\n  | 'messages'\n  | 'placeholder'\n  | 'prefix'\n  | 'suffix'\n  | 'textAlign'\n  | 'userAssistanceDensity'\n  | 'value'\n  | 'variant'\n>;\n\nconst DemoNumberInputText = ({\n  assistiveText,\n  helpSourceLink,\n  helpSourceText,\n  isDisabled,\n  isReadonly,\n  isRequired,\n  label,\n  labelEdge,\n  messages,\n  placeholder,\n  prefix,\n  suffix,\n  textAlign,\n  userAssistanceDensity,\n  value,\n  variant\n}: PickedPropsFromNumberInputText) => {\n  const [displayValue, setDisplayValue] = useState(value ?? '');\n  const handleInput = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      if (displayValue !== detail.value) {\n        setDisplayValue(detail.value ?? '');\n      }\n    },\n    [displayValue]\n  );\n\n  // In Redwood UX spec Required text should hide when the user types in a value and commits it,\n  // not when the user starts typing. Because of that we set isRequiredShown based on the\n  // committedValue being empty and isRequired.\n  const [valueCommitted, setValueCommitted] = useState(value ?? '');\n  const handleCommit = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      if (valueCommitted !== detail.value) {\n        setValueCommitted(detail.value ?? '');\n      }\n    },\n    [valueCommitted]\n  );\n\n  const valueNow = valueCommitted === '' ? undefined : +valueCommitted;\n\n  return (\n    <NumberInputText\n      ariaValueNow={valueNow}\n      ariaValueText={valueCommitted}\n      assistiveText={assistiveText}\n      helpSourceLink={helpSourceLink}\n      helpSourceText={helpSourceText}\n      isDisabled={isDisabled}\n      isReadonly={isReadonly}\n      isRequired={isRequired}\n      isRequiredShown={isRequired && valueCommitted === ''}\n      label={label}\n      labelEdge={labelEdge}\n      messages={messages}\n      onCommit={handleCommit}\n      onInput={handleInput}\n      placeholder={placeholder}\n      prefix={prefix}\n      suffix={suffix}\n      textAlign={textAlign}\n      userAssistanceDensity={userAssistanceDensity}\n      value={displayValue}\n      variant={variant}\n    />\n  );\n};\n\nconst demoContainerStyle = {\n  backgroundColor: 'aliceblue',\n  border: 'yellow dotted 2px',\n  boxSizing: 'border-box',\n  color: 'orangered',\n  height: '80px',\n  minWidth: '6em',\n  textAlign: 'right',\n  width: '25em'\n};\nconst DemoEmbeddedNumberInputText = (props: Omit<PickedPropsFromNumberInputText, 'variant'>) => (\n  <div style={demoContainerStyle}>\n    <DemoNumberInputText {...props} variant=\"embedded\" />\n  </div>\n);\n\ntype DemoSteppersProps = Pick<\n  ComponentProps<typeof NumberInputText>,\n  'isDisabled' | 'isReadonly' | 'label' | 'labelEdge'\n>;\n\nconst DemoSteppers = ({ isDisabled, isReadonly, label, labelEdge }: DemoSteppersProps) => {\n  // Note: unary + converts empty string to 0 so use parseInt for this example.\n  const parse = (value: string) => parseInt(value.replace(/[^\\d]+/gi, ''));\n  const min = 10,\n    max = 100,\n    step = 5;\n\n  const [displayValue, setDisplayValue] = useState('20');\n  const handleInput = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      if (displayValue !== detail.value) {\n        setDisplayValue(detail.value ?? '');\n      }\n    },\n    [displayValue]\n  );\n\n  const [committedValue, setCommittedValue] = useState(20);\n  const handleCommit = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      // On commit, filter out any non-numbers and parse the value.\n      // If the result is NaN, clear the display value.\n      const numberValue = parse(detail.value ?? '');\n      const newValue = Number.isNaN(numberValue) ? '' : numberValue.toString();\n      if (displayValue !== newValue) {\n        setDisplayValue(newValue);\n      }\n      if (committedValue !== numberValue) {\n        setCommittedValue(numberValue);\n      }\n    },\n    [displayValue, committedValue]\n  );\n\n  const doStep = (currentValue: number, direction: StepDirection) => {\n    if (Number.isNaN(currentValue)) {\n      // currentValue is not a valid number, return min\n      return min;\n    }\n\n    const modulo = currentValue % step;\n    let newValue: number;\n    if (modulo !== 0) {\n      // If currentValue is not a step match, snap it.\n      newValue = direction === 'increase' ? currentValue + (step - modulo) : currentValue - modulo;\n    } else {\n      // If currentValue is already a step match, just increment or decrement it.\n      newValue = direction === 'increase' ? currentValue + step : currentValue - step;\n    }\n    return newValue > max ? max : newValue < min ? min : newValue;\n  };\n\n  // Increment or decrement the current display value and then update the\n  // display and committed values to match.\n  const handleStep = useCallback((event: StepEvent) => {\n    setDisplayValue((current) => {\n      const currentValue = parse(current);\n      const newValue = doStep(currentValue, event.direction);\n      setCommittedValue(newValue);\n      return newValue.toString();\n    });\n  }, []);\n\n  const numberTooHigh: PickedPropsFromNumberInputText['messages'] = [\n    {\n      severity: 'error',\n      detail: 'Enter 100 or a lower number.'\n    }\n  ];\n  const numberTooLow: PickedPropsFromNumberInputText['messages'] = [\n    {\n      severity: 'error',\n      detail: 'Enter 10 or a higher number.'\n    }\n  ];\n  const messages: PickedPropsFromNumberInputText['messages'] =\n    committedValue !== NaN\n      ? committedValue > max\n        ? numberTooHigh\n        : committedValue < min\n        ? numberTooLow\n        : []\n      : [];\n\n  // If the committed value is not a valid number, don't update the aria value attributes.\n  const valueNow = Number.isNaN(committedValue) ? undefined : committedValue;\n  const valueText = Number.isNaN(committedValue) ? undefined : committedValue.toString();\n\n  return (\n    <NumberInputText\n      ariaValueMax={max}\n      ariaValueMin={min}\n      ariaValueNow={valueNow}\n      ariaValueText={valueText}\n      assistiveText=\"Enter a number between 10 and 100\"\n      hasSteppers={true}\n      isDisabled={isDisabled}\n      isReadonly={isReadonly}\n      isStepDownDisabled={committedValue <= min}\n      isStepUpDisabled={committedValue >= max}\n      label={label}\n      labelEdge={labelEdge}\n      messages={messages}\n      onCommit={handleCommit}\n      onInput={handleInput}\n      onSpin={handleStep}\n      onStep={handleStep}\n      value={displayValue}\n    />\n  );\n};\n\nconst numValue = '123';\nconst widthValue = '1920';\nconst accessCode = '58964';\nconst lbsValue = '140.5';\nconst longValue = '001-111222-3334-444444-555666666-777-8880-9099-0123456789';\nconst longText =\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.';\n\nconst formContext: FormContextProps = {\n  isFormLayout: true,\n  userAssistanceDensity: 'efficient'\n};\n\nconst formContextWrap: FormContextProps = {\n  isFormLayout: true,\n  labelWrapping: 'wrap',\n  userAssistanceDensity: 'efficient'\n};\n\nconst formContextTruncate: FormContextProps = {\n  isFormLayout: true,\n  labelWrapping: 'truncate',\n  userAssistanceDensity: 'efficient'\n};\n\nexport const Overview = () => {\n  return (\n    <>\n      <h4>States inside form context</h4>\n      {/* TODO: use preact form layout in all these demos instead of FormContext.Provider\n          JET-49915 - Preact NumberInputText: replace FormContext.Provider with FormLayout in demos */}\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"Enabled\" value={numValue} />\n        <DemoNumberInputText label=\"Disabled\" value={numValue} isDisabled={true} />\n        <DemoNumberInputText label=\"Readonly\" value={numValue} isReadonly={true} />\n        <DemoNumberInputText label=\"Enabled no value\" />\n        <DemoNumberInputText label=\"Disabled no value\" isDisabled={true} />\n        <DemoNumberInputText label=\"Readonly no value\" isReadonly={true} />\n      </FormContext.Provider>\n\n      <h4>States outside form context</h4>\n      <div>\n        <DemoNumberInputText label=\"Enabled\" value={numValue} />\n        <DemoNumberInputText label=\"Disabled\" value={numValue} isDisabled={true} />\n        <DemoNumberInputText label=\"Readonly\" value={numValue} isReadonly={true} />\n        <DemoNumberInputText label=\"Enabled no value\" />\n        <DemoNumberInputText label=\"Disabled no value\" isDisabled={true} />\n        <DemoNumberInputText label=\"Readonly no value\" isReadonly={true} />\n      </div>\n\n      <h4>Required & Placeholder</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"Required\" isRequired={true} />\n        <DemoNumberInputText label=\"Placeholder\" placeholder=\"placeholder text\" />\n      </FormContext.Provider>\n\n      <h4>Prefix & Suffix</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"Access Code\" prefix=\"IN\" value={accessCode} />\n        <DemoNumberInputText label=\"Width\" suffix=\"px\" value={widthValue} />\n      </FormContext.Provider>\n\n      <h4>Help</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"help text\" value={numValue} assistiveText=\"help text\" />\n        <DemoNumberInputText\n          label=\"help source\"\n          value={numValue}\n          helpSourceLink=\"https://www.oracle.com\"\n        />\n        <DemoNumberInputText\n          label=\"help source (custom text)\"\n          value={numValue}\n          helpSourceLink=\"https://www.oracle.com\"\n          helpSourceText=\"Click here\"\n        />\n      </FormContext.Provider>\n\n      <h4>Messages</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText\n          label=\"error\"\n          value={numValue}\n          messages={[{ severity: 'error', detail: 'detail' }]}\n        />\n        <DemoNumberInputText\n          label=\"warning\"\n          value={numValue}\n          messages={[{ severity: 'warning', detail: 'detail' }]}\n        />\n        <DemoNumberInputText\n          label=\"info\"\n          value={numValue}\n          messages={[{ severity: 'info', detail: 'detail' }]}\n        />\n        <DemoNumberInputText\n          label=\"confirmation\"\n          value={numValue}\n          messages={[{ severity: 'confirmation', detail: 'detail' }]}\n        />\n      </FormContext.Provider>\n    </>\n  );\n};\n\nexport const EmbeddedStylesOverview = () => {\n  return (\n    <div style=\"max-width: 50%;\">\n      <h4>States inside form context</h4>\n      {/* TODO: use preact form layout in all these demos instead of FormContext.Provider\n          JET-49915 - Preact InputText: replace FormContext.Provider with FormLayout in demos */}\n      <FormContext.Provider value={formContext}>\n        <DemoEmbeddedNumberInputText label=\"Enabled\" value={numValue}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Disabled\"\n          value={numValue}\n          isDisabled={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Readonly\"\n          value={numValue}\n          isReadonly={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText label=\"Enabled no value\"></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Disabled no value\"\n          isDisabled={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Readonly no value\"\n          isReadonly={true}></DemoEmbeddedNumberInputText>\n      </FormContext.Provider>\n\n      <h4>States outside form context</h4>\n      <div>\n        <DemoEmbeddedNumberInputText label=\"Enabled\" value={numValue}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Disabled\"\n          value={numValue}\n          isDisabled={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Readonly\"\n          value={numValue}\n          isReadonly={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText label=\"Enabled no value\"></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Disabled no value\"\n          isDisabled={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Readonly no value\"\n          isReadonly={true}></DemoEmbeddedNumberInputText>\n      </div>\n\n      <h4>No label</h4>\n      <div>\n        <DemoEmbeddedNumberInputText\n          label=\"Enabled\"\n          labelEdge=\"none\"\n          value={numValue}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Disabled\"\n          labelEdge=\"none\"\n          value={numValue}\n          isDisabled={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Readonly\"\n          labelEdge=\"none\"\n          value={numValue}\n          isReadonly={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Enabled no value\"\n          labelEdge=\"none\"></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Disabled no value\"\n          labelEdge=\"none\"\n          isDisabled={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Readonly no value\"\n          labelEdge=\"none\"\n          isReadonly={true}></DemoEmbeddedNumberInputText>\n      </div>\n\n      <h4>Required & Placeholder</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoEmbeddedNumberInputText\n          label=\"Required\"\n          isRequired={true}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"Placeholder\"\n          placeholder=\"placeholder text\"></DemoEmbeddedNumberInputText>\n      </FormContext.Provider>\n\n      <h4>Help</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoEmbeddedNumberInputText\n          label=\"help text\"\n          value={numValue}\n          assistiveText=\"help text\"></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"help source\"\n          value={numValue}\n          helpSourceLink=\"https://www.oracle.com\"></DemoEmbeddedNumberInputText>\n      </FormContext.Provider>\n\n      <h4>Messages</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoEmbeddedNumberInputText\n          label=\"error\"\n          value={numValue}\n          messages={[{ severity: 'error', detail: 'detail' }]}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"warning\"\n          value={numValue}\n          messages={[{ severity: 'warning', detail: 'detail' }]}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"info\"\n          value={numValue}\n          messages={[{ severity: 'info', detail: 'detail' }]}></DemoEmbeddedNumberInputText>\n        <DemoEmbeddedNumberInputText\n          label=\"confirmation\"\n          value={numValue}\n          messages={[{ severity: 'confirmation', detail: 'detail' }]}></DemoEmbeddedNumberInputText>\n      </FormContext.Provider>\n    </div>\n  );\n};\n\ntype EmbeddedStylesProps = Pick<\n  ComponentProps<typeof NumberInputText>,\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'isRequiredShown'\n  | 'labelEdge'\n  | 'placeholder'\n  | 'textAlign'\n  | 'variant'\n>;\nexport const EmbeddedStyles: Story<EmbeddedStylesProps> = (args) => {\n  const demoContainerStyle = {\n    backgroundColor: 'aliceblue',\n    border: 'yellow dotted 2px',\n    boxSizing: 'border-box',\n    color: 'orangered',\n    height: '80px',\n    minWidth: '6em',\n    textAlign: 'right',\n    width: '25em'\n  };\n  return (\n    <div style={demoContainerStyle}>\n      <DemoNumberInputText label=\"Input Number\" {...args} />\n    </div>\n  );\n};\nEmbeddedStyles.args = {\n  isDisabled: false,\n  isReadonly: false,\n  labelEdge: 'none',\n  placeholder: 'Enter value',\n  textAlign: undefined,\n  variant: 'embedded'\n};\nEmbeddedStyles.parameters = {\n  controls: {\n    include: [...Object.keys(EmbeddedStyles.args)]\n  }\n};\n\ntype CreateNumberInputTextProps = {\n  textAlign?: 'start' | 'end' | 'right';\n  isDisabled?: boolean;\n  isReadonly?: boolean;\n  label: string;\n  labelEdge?: 'inside' | 'start' | 'top' | 'none';\n  value?: string;\n};\nconst createNumberInputText = ({\n  textAlign,\n  isDisabled,\n  isReadonly,\n  label,\n  labelEdge,\n  value = numValue\n}: CreateNumberInputTextProps) => {\n  return (\n    <DemoNumberInputText\n      textAlign={textAlign}\n      label={label}\n      labelEdge={labelEdge}\n      value={value}\n      isDisabled={isDisabled}\n      isReadonly={isReadonly}\n    />\n  );\n};\n\nexport const TextAlign = () => {\n  return (\n    <>\n      <FormContext.Provider value={formContext}>\n        <h4>Enabled</h4>\n        {createNumberInputText({ textAlign: 'start', label: 'start' })}\n        {createNumberInputText({ textAlign: 'end', label: 'end' })}\n        {createNumberInputText({ textAlign: 'right', label: 'right' })}\n\n        <h4>Disabled</h4>\n        {createNumberInputText({ textAlign: 'start', label: 'start', isDisabled: true })}\n        {createNumberInputText({ textAlign: 'end', label: 'end', isDisabled: true })}\n        {createNumberInputText({ textAlign: 'right', label: 'right', isDisabled: true })}\n\n        <h4>Readonly</h4>\n        {createNumberInputText({ textAlign: 'start', label: 'start', isReadonly: true })}\n        {createNumberInputText({ textAlign: 'end', label: 'end', isReadonly: true })}\n        {createNumberInputText({ textAlign: 'right', label: 'right', isReadonly: true })}\n      </FormContext.Provider>\n\n      <h4>Readonly outside form context</h4>\n      {createNumberInputText({ textAlign: 'start', label: 'start', isReadonly: true })}\n      {createNumberInputText({ textAlign: 'end', label: 'end', isReadonly: true })}\n      {createNumberInputText({ textAlign: 'right', label: 'right', isReadonly: true })}\n    </>\n  );\n};\n\nconst EnabledDisabledReadonly = ({\n  labelEdge = 'inside',\n  label,\n  value\n}: {\n  labelEdge?: 'inside' | 'start' | 'top' | 'none';\n  label?: string;\n  value?: string;\n}) => {\n  return (\n    <>\n      {createNumberInputText({ label: label || 'Enabled', labelEdge: labelEdge, value: value })}\n      {createNumberInputText({\n        label: label || 'Disabled',\n        isDisabled: true,\n        labelEdge: labelEdge,\n        value: value\n      })}\n      {createNumberInputText({\n        label: label || 'Readonly',\n        isReadonly: true,\n        labelEdge: labelEdge,\n        value: value\n      })}\n    </>\n  );\n};\n\nconst LabelEdge = ({\n  labelEdge = 'inside',\n  label\n}: {\n  labelEdge?: 'inside' | 'start' | 'top' | 'none';\n  label: string;\n}) => {\n  return (\n    <>\n      <FormContext.Provider value={formContext}>\n        <h4>Inside form context</h4>\n        <EnabledDisabledReadonly label={label} labelEdge={labelEdge} />\n      </FormContext.Provider>\n\n      <h4>Outside form context</h4>\n      <EnabledDisabledReadonly label={label} labelEdge={labelEdge} />\n    </>\n  );\n};\n\nexport const LabelEdgeInside = ({ label }: { label: string }) => <LabelEdge label={label} />;\nexport const LabelEdgeStart = ({ label }: { label: string }) => (\n  <LabelEdge labelEdge=\"start\" label={label} />\n);\nexport const LabelEdgeTop = ({ label }: { label: string }) => (\n  <LabelEdge labelEdge=\"top\" label={label} />\n);\nexport const NoLabel = ({ label }: { label: string }) => (\n  <LabelEdge labelEdge=\"none\" label={label} />\n);\n\nconst LongLabels = ({\n  labelEdge = 'inside',\n  label\n}: {\n  labelEdge?: 'inside' | 'start' | 'top';\n  label: string;\n}) => {\n  return (\n    <>\n      <FormContext.Provider value={formContextWrap}>\n        <h4>Inside form context - wrapped</h4>\n        <EnabledDisabledReadonly label={label} labelEdge={labelEdge} />\n      </FormContext.Provider>\n\n      <FormContext.Provider value={formContextTruncate}>\n        <h4>Inside form context - truncated</h4>\n        <EnabledDisabledReadonly label={label} labelEdge={labelEdge} />\n      </FormContext.Provider>\n\n      <h4>Outside form context</h4>\n      <EnabledDisabledReadonly label={label} labelEdge={labelEdge} />\n    </>\n  );\n};\n\nexport const LongLabelInside = () => <LabelEdgeInside label={longText} />;\nexport const LongLabelStart = () => <LongLabels label={longText} labelEdge=\"start\" />;\nexport const LongLabelTop = () => <LongLabels label={longText} labelEdge=\"top\" />;\n\nexport const LongValue = () => {\n  return (\n    <>\n      <FormContext.Provider value={formContext}>\n        <h4>Inside form context</h4>\n        <EnabledDisabledReadonly value={longValue} />\n      </FormContext.Provider>\n\n      <h4>Outside form context</h4>\n      <EnabledDisabledReadonly value={longValue} />\n    </>\n  );\n};\n\nexport const Prefix = () => {\n  return (\n    <>\n      <h4>States inside form context</h4>\n      {/* TODO: use preact form layout in all these demos instead of FormContext.Provider\n          JET-49915 - Preact NumberInputText: replace FormContext.Provider with FormLayout in demos */}\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"Access code\" value={accessCode} prefix=\"IN\" />\n        <DemoNumberInputText label=\"Access code\" value={accessCode} isDisabled={true} prefix=\"IN\" />\n        <DemoNumberInputText label=\"Access code\" value={accessCode} isReadonly={true} prefix=\"IN\" />\n        <DemoNumberInputText label=\"Access code\" prefix=\"IN\" />\n        <DemoNumberInputText label=\"Access code\" isDisabled={true} prefix=\"IN\" />\n        <DemoNumberInputText label=\"Access code\" isReadonly={true} prefix=\"IN\" />\n      </FormContext.Provider>\n\n      <h4>Placeholder</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"Access code\" placeholder=\"placeholder text\" prefix=\"IN\" />\n      </FormContext.Provider>\n    </>\n  );\n};\n\nexport const Suffix = () => {\n  return (\n    <>\n      <h4>States inside form context</h4>\n      {/* TODO: use preact form layout in all these demos instead of FormContext.Provider\n          JET-49915 - Preact NumberInputText: replace FormContext.Provider with FormLayout in demos */}\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"Enabled Weight\" value={lbsValue} suffix=\"lbs\" />\n        <DemoNumberInputText\n          label=\"Disabled Weight\"\n          value={lbsValue}\n          isDisabled={true}\n          suffix=\"lbs\"\n        />\n        <DemoNumberInputText\n          label=\"Readonly Weight\"\n          value={lbsValue}\n          isReadonly={true}\n          suffix=\"lbs\"\n        />\n        <DemoNumberInputText label=\"Enabled No Value Weight\" suffix=\"lbs\" />\n        <DemoNumberInputText label=\"Disabled No Value Weight\" isDisabled={true} suffix=\"lbs\" />\n        <DemoNumberInputText label=\"Readonly No Value Weight\" isReadonly={true} suffix=\"lbs\" />\n      </FormContext.Provider>\n\n      <h4>Placeholder</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoNumberInputText label=\"Target Weight\" placeholder=\"placeholder text\" suffix=\"lbs\" />\n      </FormContext.Provider>\n    </>\n  );\n};\n\nexport const MinAndMax = () => {\n  // Note: unary + converts empty string to 0, so use parseInt for this example.\n  const parse = (value: string) => parseInt(value.replace(/[^\\d]+/gi, ''));\n  const min = 10;\n  const max = 100;\n\n  const [displayValue, setDisplayValue] = useState('50');\n  const handleInput = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      if (displayValue !== detail.value) {\n        setDisplayValue(detail.value ?? '');\n      }\n    },\n    [displayValue]\n  );\n\n  const [committedValue, setCommittedValue] = useState(50);\n  const handleCommit = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      // On commit, filter out any non-numbers and parse the value.\n      // If the result is NaN, clear the display value.\n      const numberValue = parse(detail.value ?? '');\n      const newValue = Number.isNaN(numberValue) ? '' : numberValue.toString();\n      if (displayValue !== newValue) {\n        setDisplayValue(newValue);\n      }\n      if (committedValue !== numberValue) {\n        setCommittedValue(numberValue);\n      }\n    },\n    [displayValue, committedValue]\n  );\n\n  const numberTooHigh: PickedPropsFromNumberInputText['messages'] = [\n    {\n      severity: 'error',\n      detail: 'Enter 100 or a lower number.'\n    }\n  ];\n  const numberTooLow: PickedPropsFromNumberInputText['messages'] = [\n    {\n      severity: 'error',\n      detail: 'Enter 10 or a higher number.'\n    }\n  ];\n  const messages: PickedPropsFromNumberInputText['messages'] =\n    committedValue !== NaN\n      ? committedValue > max\n        ? numberTooHigh\n        : committedValue < min\n        ? numberTooLow\n        : []\n      : [];\n\n  // If the committed value is not a valid number, don't update the aria value attributes.\n  // Note that this applies when there is no value (empty string parses as NaN with parseInt).\n  const valueNow = Number.isNaN(committedValue) ? undefined : committedValue;\n  const valueText = Number.isNaN(committedValue) ? undefined : committedValue.toString();\n\n  return (\n    <>\n      <h4>Min and Max</h4>\n      <NumberInputText\n        ariaValueMax={max}\n        ariaValueMin={min}\n        ariaValueNow={valueNow}\n        ariaValueText={valueText}\n        assistiveText=\"Enter a number between 10 and 100\"\n        label=\"min=10, max=100\"\n        onCommit={handleCommit}\n        onInput={handleInput}\n        messages={messages}\n        value={displayValue}\n      />\n    </>\n  );\n};\n\nexport const StepButtonOverview = () => {\n  return (\n    <>\n      <h4>States inside form context</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoSteppers label=\"Enabled\" />\n        <DemoSteppers isDisabled={true} label=\"Disabled\" />\n        <DemoSteppers isReadonly={true} label=\"Readonly\" />\n      </FormContext.Provider>\n\n      <h4>No Label</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoSteppers labelEdge=\"none\" label=\"No label\" />\n      </FormContext.Provider>\n\n      <h4>Label Edge Top</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoSteppers labelEdge=\"top\" label=\"Top label\" />\n      </FormContext.Provider>\n\n      <h4>Label Edge Start</h4>\n      <FormContext.Provider value={formContext}>\n        <DemoSteppers labelEdge=\"start\" label=\"Start label\" />\n      </FormContext.Provider>\n    </>\n  );\n};\n\nexport const StepButtons = () => {\n  // Note: unary + converts empty string to 0 so use parseInt for this example.\n  const parse = (value: string) => parseInt(value.replace(/[^\\d]+/gi, ''));\n  const min = 10,\n    max = 100,\n    step = 5;\n\n  const [displayValue, setDisplayValue] = useState('10');\n  const handleInput = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      if (displayValue !== detail.value) {\n        setDisplayValue(detail.value ?? '');\n      }\n    },\n    [displayValue]\n  );\n\n  const [committedValue, setCommittedValue] = useState(10);\n  const handleCommit = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      // On commit, filter out any non-numbers and parse the value.\n      // If the result is NaN, clear the display value.\n      const numberValue = parse(detail.value ?? '');\n      const newValue = Number.isNaN(numberValue) ? '' : numberValue.toString();\n      if (displayValue !== newValue) {\n        setDisplayValue(newValue);\n      }\n      if (committedValue !== numberValue) {\n        setCommittedValue(numberValue);\n      }\n    },\n    [displayValue, committedValue]\n  );\n\n  const doStep = (currentValue: number, direction: StepDirection) => {\n    if (Number.isNaN(currentValue)) {\n      // currentValue is not a valid number, return min\n      return min;\n    }\n\n    const modulo = currentValue % step;\n    let newValue: number;\n    if (modulo !== 0) {\n      // If currentValue is not a step match, snap it.\n      newValue = direction === 'increase' ? currentValue + (step - modulo) : currentValue - modulo;\n    } else {\n      // If currentValue is already a step match, just increment or decrement it.\n      newValue = direction === 'increase' ? currentValue + step : currentValue - step;\n    }\n    return newValue > max ? max : newValue < min ? min : newValue;\n  };\n\n  // Increment or decrement the current display value and then update the\n  // display and committed values to match.\n  const handleStep = useCallback((event: StepEvent) => {\n    setDisplayValue((current) => {\n      const currentValue = parse(current);\n      const newValue = doStep(currentValue, event.direction);\n      setCommittedValue(newValue);\n      return newValue.toString();\n    });\n  }, []);\n\n  const numberTooHigh: PickedPropsFromNumberInputText['messages'] = [\n    {\n      severity: 'error',\n      detail: 'Enter 100 or a lower number.'\n    }\n  ];\n  const numberTooLow: PickedPropsFromNumberInputText['messages'] = [\n    {\n      severity: 'error',\n      detail: 'Enter 10 or a higher number.'\n    }\n  ];\n  const messages: PickedPropsFromNumberInputText['messages'] =\n    committedValue !== NaN\n      ? committedValue > max\n        ? numberTooHigh\n        : committedValue < min\n        ? numberTooLow\n        : []\n      : [];\n\n  // If the committed value is not a valid number, don't update the aria value attributes.\n  const valueNow = Number.isNaN(committedValue) ? undefined : committedValue;\n  const valueText = Number.isNaN(committedValue) ? undefined : committedValue.toString();\n\n  return (\n    <>\n      <h4>Step Buttons</h4>\n      <NumberInputText\n        ariaValueMax={max}\n        ariaValueMin={min}\n        ariaValueNow={valueNow}\n        ariaValueText={valueText}\n        assistiveText=\"Enter a number between 10 and 100\"\n        hasSteppers={true}\n        isStepDownDisabled={committedValue <= min}\n        isStepUpDisabled={committedValue >= max}\n        label=\"min=10, max=100, step=5\"\n        messages={messages}\n        onCommit={handleCommit}\n        onInput={handleInput}\n        onSpin={handleStep}\n        onStep={handleStep}\n        value={displayValue}\n      />\n    </>\n  );\n};\n","import { cleanup, fireEvent, render, waitFor } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport userEvent from '@testing-library/user-event';\nimport { NumberInputText } from '../NumberInputText';\nimport { StepButtons as DemoStepButtons } from '../__dev__/NumberInputText.stories';\nimport type { RootEnvironment } from '../../UNSAFE_Environment';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n\nconst noOp = () => {};\n\ndescribe('Test NumberInputText', () => {\n  it('Renders', function () {\n    const { container } = render(<NumberInputText label=\"mylabel\" onInput={noOp} />);\n    const inputElement = container.querySelector('input');\n    expect(inputElement).not.to.be.null;\n  });\n\n  it('Does not have spinbutton role if no steppers are shown', function () {\n    const { container } = render(<NumberInputText label=\"mylabel\" onInput={noOp} />);\n    const match = container.querySelector('[role=spinbutton]');\n    expect(match).to.be.null;\n  });\n\n  afterEach(cleanup);\n});\n\ndescribe('Test NumberInputText aria-value attributes', () => {\n  it('Adds aria-valuemin and aria-valuemax when enabled', function () {\n    const { container } = render(\n      <NumberInputText ariaValueMin={0} ariaValueMax={100} label=\"min=0, max=100\" onInput={noOp} />\n    );\n    const inputElement = container.querySelector('input');\n    const ariaValueMin = inputElement?.getAttribute('aria-valuemin');\n    const ariaValueMax = inputElement?.getAttribute('aria-valuemax');\n    expect(ariaValueMin).to.equal('0');\n    expect(ariaValueMax).to.equal('100');\n  });\n\n  it('Adds aria-valuemin and aria-valuemax when disabled', function () {\n    const { container } = render(\n      <NumberInputText\n        ariaValueMin={0}\n        ariaValueMax={100}\n        isDisabled={true}\n        label=\"min=0, max=100\"\n        onInput={noOp}\n      />\n    );\n    const inputElement = container.querySelector('input');\n    const ariaValueMin = inputElement?.getAttribute('aria-valuemin');\n    const ariaValueMax = inputElement?.getAttribute('aria-valuemax');\n    expect(ariaValueMin).to.equal('0');\n    expect(ariaValueMax).to.equal('100');\n  });\n\n  it('Does not add aria-valuemin and aria-valuemax when readonly', function () {\n    const numberVal = '25';\n    const { getByText } = render(\n      <NumberInputText\n        ariaValueMin={0}\n        ariaValueMax={100}\n        isReadonly={true}\n        label=\"min=0, max=100\"\n        onInput={noOp}\n        value={numberVal}\n      />\n    );\n    // When readonly, only a div is shown which should not have aria value attributes set.\n    const inputDiv = getByText(numberVal);\n    const ariaValueMin = inputDiv.getAttribute('aria-valuemin');\n    const ariaValueMax = inputDiv.getAttribute('aria-valuemax');\n    expect(ariaValueMin).to.be.null;\n    expect(ariaValueMax).to.be.null;\n  });\n\n  it('Adds aria-valuenow and aria-valuetext when enabled', function () {\n    const currencyString = '$500';\n    const { container } = render(\n      <NumberInputText\n        ariaValueNow={500}\n        ariaValueText={currencyString}\n        label=\"min=0, max=1000\"\n        onInput={noOp}\n        value={currencyString}\n      />\n    );\n    const inputElement = container.querySelector('input');\n    const ariaValueNow = inputElement?.getAttribute('aria-valuenow');\n    const ariaValueText = inputElement?.getAttribute('aria-valuetext');\n    expect(ariaValueNow).to.equal('500');\n    expect(ariaValueText).to.equal(currencyString);\n  });\n\n  it('Adds aria-valuenow and aria-valuetext when disabled', function () {\n    const currencyString = '$500';\n    const { container } = render(\n      <NumberInputText\n        ariaValueNow={500}\n        ariaValueText={currencyString}\n        isDisabled={true}\n        label=\"min=0, max=1000\"\n        onInput={noOp}\n        value={currencyString}\n      />\n    );\n    const inputElement = container.querySelector('input');\n    const ariaValueNow = inputElement?.getAttribute('aria-valuenow');\n    const ariaValueText = inputElement?.getAttribute('aria-valuetext');\n    expect(ariaValueNow).to.equal('500');\n    expect(ariaValueText).to.equal(currencyString);\n  });\n\n  it('Does not add aria-valuenow and aria-valuetext when readonly', function () {\n    const currencyString = '$500';\n    const { getByText } = render(\n      <NumberInputText\n        ariaValueNow={500}\n        ariaValueText={currencyString}\n        isReadonly={true}\n        label=\"min=0, max=1000\"\n        onInput={noOp}\n        value={currencyString}\n      />\n    );\n    // When readonly, only a div is shown which should not have aria value attributes set.\n    const inputDiv = getByText(currencyString);\n    const ariaValueNow = inputDiv.getAttribute('aria-valuenow');\n    const ariaValueText = inputDiv.getAttribute('aria-valuetext');\n    expect(ariaValueNow).to.be.null;\n    expect(ariaValueText).to.be.null;\n  });\n\n  it('Does not add aria-valuetext when it is the same as aria-valuenow', function () {\n    const numberVal = '500';\n    const { container } = render(\n      <NumberInputText\n        ariaValueNow={500}\n        ariaValueText={numberVal}\n        label=\"min=0, max=1000\"\n        onInput={noOp}\n        value={numberVal}\n      />\n    );\n    const inputElement = container.querySelector('input');\n    const ariaValueNow = inputElement?.getAttribute('aria-valuenow');\n    const ariaValueText = inputElement?.getAttribute('aria-valuetext');\n    expect(ariaValueNow).to.equal(numberVal);\n    expect(ariaValueText).to.be.null;\n  });\n\n  afterEach(cleanup);\n});\n\ndescribe('Test NumberInputText steppers', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n  afterEach(cleanup);\n\n  const getStepUpButton = (container: Element) =>\n    container?.querySelector('button[title=\"Increase\"]');\n  const getStepDownButton = (container: Element) =>\n    container?.querySelector('button[title=\"Decrease\"]');\n\n  it('If hasSteppers=true and control is enabled, steppers are present and role is spinbutton', function () {\n    const { container, getByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <NumberInputText hasSteppers={true} label=\"mylabel\" onInput={noOp} />\n      </RootEnvironmentProvider>\n    );\n    const roleElement = getByRole('spinbutton');\n    expect(roleElement).not.to.be.null;\n    expect(roleElement?.tagName.toUpperCase()).to.equal('INPUT');\n    const upButton = getStepUpButton(container);\n    const downButton = getStepDownButton(container);\n    expect(upButton).not.to.be.null;\n    expect(downButton).not.to.be.null;\n  });\n\n  it('If hasSteppers=true and control is disabled, steppers are present and role is spinbutton', function () {\n    const { container, getByRole } = render(\n      <RootEnvironmentProvider environment={env}>\n        <NumberInputText hasSteppers={true} isDisabled={true} label=\"mylabel\" onInput={noOp} />\n      </RootEnvironmentProvider>\n    );\n    const roleElement = getByRole('spinbutton');\n    expect(roleElement).not.to.be.null;\n    expect(roleElement?.tagName.toUpperCase()).to.equal('INPUT');\n    // If isDisabled is true, steppers are still present.\n    const upButton = getStepUpButton(container);\n    const downButton = getStepDownButton(container);\n    expect(upButton).not.to.be.null;\n    expect(downButton).not.to.be.null;\n  });\n\n  it('If hasSteppers=true and control is readonly, no steppers or spinbutton role', function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <NumberInputText hasSteppers={true} isReadonly={true} label=\"mylabel\" onInput={noOp} />\n      </RootEnvironmentProvider>\n    );\n    const match = container.querySelector('[role=spinbutton]');\n    expect(match).to.be.null;\n    const upButton = getStepUpButton(container);\n    const downButton = getStepDownButton(container);\n    expect(upButton).to.be.null;\n    expect(downButton).to.be.null;\n  });\n\n  it('Step buttons are shown with correct tabindex and title', function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <NumberInputText hasSteppers={true} label=\"mylabel\" onInput={noOp} />\n      </RootEnvironmentProvider>\n    );\n    const upButton = getStepUpButton(container);\n    const downButton = getStepDownButton(container);\n    expect(upButton?.getAttribute('tabindex')).to.equal('-1');\n    expect(downButton?.getAttribute('tabindex')).to.equal('-1');\n    expect(upButton?.getAttribute('title')).to.equal('Increase');\n    expect(downButton?.getAttribute('title')).to.equal('Decrease');\n  });\n\n  it('Step buttons can be disabled', function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <NumberInputText\n          hasSteppers={true}\n          isStepDownDisabled={true}\n          isStepUpDisabled={true}\n          label=\"mylabel\"\n          onInput={noOp}\n        />\n      </RootEnvironmentProvider>\n    );\n    const upButton = getStepUpButton(container);\n    const downButton = getStepDownButton(container);\n    expect(upButton).not.to.be.null;\n    expect(downButton).not.to.be.null;\n    const upDisabled = upButton?.getAttribute('disabled');\n    const downDisabled = downButton?.getAttribute('disabled');\n    expect(upDisabled).not.to.be.null;\n    expect(downDisabled).not.to.be.null;\n  });\n\n  it('If number input is disabled, the steppers are disabled', function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <NumberInputText hasSteppers={true} isDisabled={true} label=\"mylabel\" onInput={noOp} />\n      </RootEnvironmentProvider>\n    );\n    const upButton = getStepUpButton(container);\n    const downButton = getStepDownButton(container);\n    expect(upButton).not.to.be.null;\n    expect(downButton).not.to.be.null;\n    const upDisabled = upButton?.getAttribute('disabled');\n    const downDisabled = downButton?.getAttribute('disabled');\n    expect(upDisabled).not.to.be.null;\n    expect(downDisabled).not.to.be.null;\n  });\n});\n\ndescribe('Test NumberInputText stepping functionality', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n  afterEach(cleanup);\n\n  const getStepUpButton = (container: Element) =>\n    container?.querySelector('button[title=\"Increase\"]');\n  const getStepDownButton = (container: Element) =>\n    container?.querySelector('button[title=\"Decrease\"]');\n\n  it('Can step up/down by clicking on steppers', function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <DemoStepButtons />\n      </RootEnvironmentProvider>\n    );\n\n    // Initial value of DemoStepButtons is 10, min=10, max=100, step=5.\n    const upButton = getStepUpButton(container)!;\n    const downButton = getStepDownButton(container)!;\n    const inputElement = container.querySelector('input')!;\n\n    // Click step up 3 times to increment value to 25.\n    fireEvent.click(upButton);\n    fireEvent.click(upButton);\n    fireEvent.click(upButton);\n    expect(inputElement.value).to.equal('25');\n\n    // Click step down once to decrement value to 20.\n    fireEvent.click(downButton);\n    expect(inputElement.value).to.equal('20');\n  });\n\n  it('Can step up/down by pressing the arrow keys', async function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <DemoStepButtons />\n      </RootEnvironmentProvider>\n    );\n\n    // Initial value of DemoStepButtons is 10, min=10, max=100, step=5.\n    const inputElement = container.querySelector('input')!;\n    expect(inputElement).not.to.be.null;\n\n    // Press and release ArrowUp should step up.\n    inputElement.focus();\n    userEvent.keyboard('[ARROWUP]');\n    await waitFor(() => expect(inputElement.value).equals('15'));\n\n    // Press and release ArrowDown should step down.\n    userEvent.keyboard('[ARROWDOWN]');\n    await waitFor(() => expect(inputElement.value).equals('10'));\n  });\n\n  it('Clicking step down or pressing arrow down does nothing when disabled', async function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <DemoStepButtons />\n      </RootEnvironmentProvider>\n    );\n\n    // Initial value of DemoStepButtons is 10, min=10, max=100, step=5.\n    // DemoStepButtons disables step down when value reaches min, which\n    // means it's initially disabled.\n    const inputElement = container.querySelector('input')!;\n    const downButton = getStepDownButton(container)!;\n    expect(inputElement).not.to.be.null;\n    expect(downButton).not.to.be.null;\n    const initialValue = '10';\n\n    // Clicking disabled down button should do nothing.\n    fireEvent.click(downButton);\n    expect(inputElement.value).to.equal(initialValue);\n\n    // Arrow key down should also do nothing.\n    inputElement.focus();\n    userEvent.keyboard('[ARROWDOWN]');\n    await waitFor(() => expect(inputElement.value).equals(initialValue));\n  });\n\n  it('Clicking step up or pressing arrow up does nothing when disabled', async function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <>\n          <DemoStepButtons />\n          <button class=\"testclickmebutton\">Click me</button>\n        </>\n      </RootEnvironmentProvider>\n    );\n\n    // Initial value of DemoStepButtons is 10, min=10, max=100, step=5.\n    // DemoStepButtons disables step up when the value reaches max.\n    const inputElement = container.querySelector('input')!;\n    const upButton = getStepUpButton(container)!;\n    const testButton = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n    expect(inputElement).not.to.be.null;\n    expect(upButton).not.to.be.null;\n    expect(testButton).not.to.be.null;\n\n    // Calling inputElement.blur did not commit the value, so set\n    // inputElement.value to 100 (max) and move the focus to commit it.\n    const maxValue = '100';\n    inputElement.focus();\n    inputElement.value = maxValue;\n    testButton.focus();\n    expect(inputElement.value).to.equal(maxValue);\n\n    // Clicking the disabled up button should do nothing.\n    fireEvent.click(upButton);\n    expect(inputElement.value).to.equal(maxValue);\n\n    // Arrow up key should also do nothing.\n    inputElement.focus();\n    userEvent.keyboard('[ARROWUP]');\n    await waitFor(() => expect(inputElement.value).equals(maxValue));\n  });\n});\n\ndescribe('Test NumberInputText spinning functionality', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n  afterEach(cleanup);\n\n  it('Can spin by holding down the arrow keys', async function () {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <DemoStepButtons />\n      </RootEnvironmentProvider>\n    );\n\n    // Initial value of DemoStepButtons is 10, min=10, max=100, step=5.\n    const inputElement = container.querySelector('input')!;\n    expect(inputElement).not.to.be.null;\n\n    // Holding down the arrow key triggers continuous step events.\n    // See https://testing-library.com/docs/user-event/keyboard/\n    inputElement.focus();\n    // Hold the arrow key down, trigger 10 keydown events, then send key up.\n    userEvent.keyboard('[ARROWUP>10/]');\n    await waitFor(() => expect(inputElement.value).equals('60'));\n\n    userEvent.keyboard('[ARROWDOWN>4/]');\n    await waitFor(() => expect(inputElement.value).equals('40'));\n  });\n});\n"],"names":["NumberInputText","_jsx","useState","useCallback","_jsxs","FormContext","_Fragment","matchTranslationBundle","render","expect","cleanup","RootEnvironmentProvider","DemoStepButtons","fireEvent","userEvent","waitFor"],"mappings":"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"}