/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');
var hooks = require('preact/hooks');
var hooks_UNSAFE_useTabbableMode = require('../../hooks/UNSAFE_useTabbableMode.js');
require('../../UNSAFE_Flex.js');
var VirtualizedListView = require('../../VirtualizedListView-59cb3e16.js');
var listViewTestFixtures = require('../../listViewTestFixtures-eb39b1f7.js');
var listViewTabbableModeTests = require('../../listViewTabbableModeTests-ebfa7a24.js');
var Flex = require('../../Flex-b113edd5.js');
require('preact');
require('../../tslib.es6-6f60dd09.js');
require('../../utils/UNSAFE_interpolations/dimensions.js');
require('../../utils/UNSAFE_arrayUtils.js');
require('../../utils/UNSAFE_size.js');
require('../../_curry1-f1ebd742.js');
require('../../utils/UNSAFE_mergeInterpolations.js');
require('../../utils/UNSAFE_classNames.js');
require('../../classNames-55bceee6.js');
require('../../_curry3-bc6e6a86.js');
require('../../_curry2-588f7ddc.js');
require('../../_has-2eedb7e0.js');

require('../../utils/UNSAFE_interpolations/boxalignment.js');
require('../../keys-326d80d5.js');
require('../../utils/UNSAFE_interpolations/flexbox.js');
require('../../flexbox-6deddb70.js');
require('../../utils/UNSAFE_interpolations/flexitem.js');
require('../../flexitem-0c1e9a72.js');
require('../../PRIVATE_List.js');
require('../../List-63716a22.js');
require('../../utils/UNSAFE_mergeProps.js');
require('../../utils/UNSAFE_keys.js');
require('../../LoadMoreCollection-eaa4ed6f.js');
require('../../PRIVATE_Collection.js');
require('../../Collection-2647e7ee.js');
require('../../hooks/UNSAFE_useViewportIntersect.js');
require('../../PRIVATE_VirtualizedCollection.js');
require('../../VirtualizedCollection-19e514e1.js');
require('../../UNSAFE_FocusTrap.js');
require('../../FocusTrap-8af50913.js');
require('preact/compat');
require('../../utils/PRIVATE_tabbableUtils.js');
require('../../hooks/UNSAFE_useId.js');
require('../../hooks/PRIVATE_useSelection.js');
require('../../hooks/PRIVATE_useCurrentKey.js');
require('../../hooks/PRIVATE_useCollectionFocusRing.js');
require('../../hooks/PRIVATE_useTabbableModeSet.js');
require('../../hooks/PRIVATE_useItemAction.js');
require('../../utils/PRIVATE_collectionUtils.js');
require('../../UNSAFE_Skeleton.js');
require('../../Skeleton-02ffb696.js');
require('../../utils/UNSAFE_interpolations/borders.js');
require('../../UNSAFE_Selector.js');
require('../../index-3651c0e7.js');
require('../../index-d5067e50.js');
require('../../UNSAFE_Icon.js');
require('../../Icon-c44e10c9.js');
require('../../hooks/UNSAFE_useTooltip.js');
require('../../UNSAFE_Floating.js');
require('../../Floating-48167355.js');
require('../../index-55dfe40c.js');
require('../../hooks/UNSAFE_useUser.js');
require('../../UNSAFE_Environment.js');
require('../../UNSAFE_Layer.js');
require('../../utils/PRIVATE_floatingUtils.js');
require('../../utils/PRIVATE_refUtils.js');
require('../../hooks/UNSAFE_useOutsideClick.js');
require('../../hooks/UNSAFE_useHover.js');
require('../../hooks/UNSAFE_useToggle.js');
require('../../hooks/UNSAFE_useFocus.js');
require('../../hooks/UNSAFE_useTouch.js');
require('../../hooks/UNSAFE_useAnimation.js');
require('../../useAnimation-576ef8bc.js');
require('../../hooks/UNSAFE_useTheme.js');
require('../../hooks/UNSAFE_useTranslationBundle.js');
require('@testing-library/preact');
require('chai');
require('@testing-library/user-event');
require('../../testHelpers-81b8b24e.js');

/**
 * Declare some tabbableMode aware components
 */
const Button = (props) => {
    const { tabbableModeProps } = hooks_UNSAFE_useTabbableMode.useTabbableMode();
    return jsxRuntime.jsx("button", Object.assign({ tabIndex: tabbableModeProps.tabIndex }, props));
};
const Input = (props) => {
    const { tabbableModeProps } = hooks_UNSAFE_useTabbableMode.useTabbableMode();
    return jsxRuntime.jsx("input", Object.assign({ tabIndex: tabbableModeProps.tabIndex }, props));
};
function TestComposition({ data }) {
    const rootRef = hooks.useRef(null);
    const [currentKey, setCurrentKey] = hooks.useState(undefined);
    const [dataState, setDataState] = hooks.useState({
        offset: 0,
        data: data.slice(0, 25),
        totalSize: data.length,
        sizePrecision: 'exact'
    });
    const loadRange = (range) => {
        const startIndex = range.offset;
        const endIndex = startIndex + range.count;
        const newDataState = Object.assign(Object.assign({}, dataState), { offset: startIndex, data: data.slice(startIndex, endIndex) });
        setDataState(newDataState);
    };
    const getConfig = () => {
        return {
            scroller: () => {
                return rootRef.current;
            }
        };
    };
    return (jsxRuntime.jsxs("div", Object.assign({ style: "height: 200px;overflow: auto", ref: rootRef }, { children: [jsxRuntime.jsx("button", { children: "Preceding Button" }), jsxRuntime.jsx(VirtualizedListView.VirtualizedListView, Object.assign({ accessibleSummary: "Basic list", data: dataState, currentKey: currentKey, viewportConfig: getConfig(), onCurrentKeyChange: (detail) => setCurrentKey(detail.value), onLoadRange: loadRange }, { children: (context) => (jsxRuntime.jsxs(Flex.Flex, { children: [context.selector && context.selector(), jsxRuntime.jsxs("div", Object.assign({ className: "item", style: { height: '20px', padding: '0.75rem' } }, { children: [jsxRuntime.jsx(Input, { "data-testid": 'input-' + context.data.id }), jsxRuntime.jsx("span", { children: context.data.name }), jsxRuntime.jsx(Button, Object.assign({ "data-testid": 'button-' + context.data.id }, { children: "Inside Button" }))] }))] })) })), jsxRuntime.jsx("button", { children: "Following Button" })] })));
}
describe('Test VirtualizedListView component Selection', () => {
    beforeEach(() => {
        if (!window.IntersectionObserver) {
            listViewTestFixtures.setupIntersectionObserverMock();
        }
    });
    listViewTabbableModeTests.testTabbableMode.bind(undefined)(TestComposition);
});
/*  */
//# sourceMappingURL=VirtualizedListViewTabbableMode.spec.js.map
