{"version":3,"file":"VirtualizedListViewTabbableMode.spec.js","sources":["../../../../src/UNSAFE_VirtualizedListView/__tests__/VirtualizedListViewTabbableMode.spec.tsx"],"sourcesContent":["/**\n * VirtualizedListView tests pertaining to single and multi-select with mouse and keyboard\n */\nimport { JSX } from 'preact';\nimport { useRef, useState } from 'preact/hooks';\n\nimport { DataState, ListItemContext, Range } from '../../UNSAFE_Collection';\nimport { useTabbableMode } from '../../hooks/UNSAFE_useTabbableMode';\nimport { Flex } from '../../UNSAFE_Flex';\nimport { VirtualizedListView } from '../VirtualizedListView';\n\nimport { setupIntersectionObserverMock } from '../../../test/mocks/mockIntersectionObserver';\nimport {\n  Props,\n  testTabbableMode\n} from '../../PRIVATE_List/__tests__/shared/listViewTabbableModeTests';\n\n/**\n * Declare some tabbableMode aware components\n */\nconst Button = (props: JSX.HTMLAttributes<HTMLButtonElement>) => {\n  const { tabbableModeProps } = useTabbableMode();\n  return <button tabIndex={tabbableModeProps.tabIndex} {...props} />;\n};\n\nconst Input = (props: JSX.HTMLAttributes<HTMLInputElement>) => {\n  const { tabbableModeProps } = useTabbableMode();\n  return <input tabIndex={tabbableModeProps.tabIndex} {...props} />;\n};\n\ntype Employee<K> = {\n  id: K;\n  name: string;\n};\n\nfunction TestComposition<K extends string | number>({ data }: Props<K>) {\n  const rootRef = useRef(null);\n  const [currentKey, setCurrentKey] = useState<K | undefined>(undefined);\n  const [dataState, setDataState] = useState<DataState<K, Employee<K>>>({\n    offset: 0,\n    data: data.slice(0, 25),\n    totalSize: data.length,\n    sizePrecision: 'exact'\n  });\n\n  const loadRange = (range: Range) => {\n    const startIndex = range.offset;\n    const endIndex = startIndex + range.count;\n    const newDataState = {\n      ...dataState,\n      offset: startIndex,\n      data: data.slice(startIndex, endIndex)\n    };\n    setDataState(newDataState);\n  };\n\n  const getConfig = () => {\n    return {\n      scroller: () => {\n        return rootRef.current;\n      }\n    };\n  };\n\n  return (\n    <div style=\"height: 200px;overflow: auto\" ref={rootRef}>\n      <button>Preceding Button</button>\n      <VirtualizedListView\n        accessibleSummary=\"Basic list\"\n        data={dataState}\n        currentKey={currentKey}\n        viewportConfig={getConfig()}\n        onCurrentKeyChange={(detail) => setCurrentKey(detail.value)}\n        onLoadRange={loadRange}>\n        {(context: ListItemContext<K, Employee<K>>) => (\n          <Flex>\n            {context.selector && context.selector()}\n            <div className=\"item\" style={{ height: '20px', padding: '0.75rem' }}>\n              <Input data-testid={'input-' + context.data.id} />\n              <span>{context.data.name}</span>\n              <Button data-testid={'button-' + context.data.id}>Inside Button</Button>\n            </div>\n          </Flex>\n        )}\n      </VirtualizedListView>\n      <button>Following Button</button>\n    </div>\n  );\n}\n\ndescribe('Test VirtualizedListView component Selection', () => {\n  beforeEach(() => {\n    if (!window.IntersectionObserver) {\n      setupIntersectionObserverMock();\n    }\n  });\n  testTabbableMode.bind(this)(TestComposition);\n});\n"],"names":["useTabbableMode","_jsx","useRef","useState","_jsxs","VirtualizedListView","Flex","setupIntersectionObserverMock","testTabbableMode","this"],"mappings":"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"}