{"version":3,"file":"ReadonlyTextFieldInput.spec.js","sources":["../../../../src/UNSAFE_TextField/__tests__/ReadonlyTextFieldInput.spec.tsx"],"sourcesContent":["import { cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { ReadonlyTextFieldInput } from '../ReadonlyTextFieldInput';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment/EnvironmentProvider';\nimport type { RootEnvironment } from '../../UNSAFE_Environment/EnvironmentContext';\n\ndescribe('ReadonlyTextFieldInput - TabbableModeContext', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n\n  it('as div, TabbableModeContext not provided', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <ReadonlyTextFieldInput as=\"div\" value={value} />\n      </RootEnvironmentProvider>\n    );\n\n    const divElement = await content.findByText(value);\n    expect(divElement).not.to.be.null;\n\n    const tabindex = divElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('0');\n  });\n\n  it('as div, TabbableModeContext isTabbable=true', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: true }}>\n          <ReadonlyTextFieldInput as=\"div\" value={value} />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const divElement = await content.findByText(value);\n    expect(divElement).not.to.be.null;\n\n    const tabindex = divElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('0');\n  });\n\n  it('as div, TabbableModeContext isTabbable=false', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: false }}>\n          <ReadonlyTextFieldInput as=\"div\" value={value} />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const divElement = await content.findByText(value);\n    expect(divElement).not.to.be.null;\n\n    const tabindex = divElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n\n  it('as input, TabbableModeContext not provided', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <ReadonlyTextFieldInput as=\"input\" type=\"text\" value={value} />\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = await content.findByDisplayValue(value);\n    expect(inputElement).not.to.be.null;\n\n    const tabindex = inputElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=true', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: true }}>\n          <ReadonlyTextFieldInput as=\"input\" type=\"text\" value={value} />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = await content.findByDisplayValue(value);\n    expect(inputElement).not.to.be.null;\n\n    const tabindex = inputElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=false', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: false }}>\n          <ReadonlyTextFieldInput as=\"input\" type=\"text\" value={value} />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = await content.findByDisplayValue(value);\n    expect(inputElement).not.to.be.null;\n\n    const tabindex = inputElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n\n  it('as textarea, TabbableModeContext not provided', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <ReadonlyTextFieldInput as=\"textarea\" value={value} />\n      </RootEnvironmentProvider>\n    );\n\n    const textareaElement = await content.findByDisplayValue(value);\n    expect(textareaElement).not.to.be.null;\n\n    const tabindex = textareaElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as textarea, TabbableModeContext isTabbable=true', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: true }}>\n          <ReadonlyTextFieldInput as=\"textarea\" value={value} />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const textareaElement = await content.findByDisplayValue(value);\n    expect(textareaElement).not.to.be.null;\n\n    const tabindex = textareaElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as textarea, TabbableModeContext isTabbable=false', async () => {\n    const value = 'sample text';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: false }}>\n          <ReadonlyTextFieldInput as=\"textarea\" value={value} />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const textareaElement = await content.findByDisplayValue(value);\n    expect(textareaElement).not.to.be.null;\n\n    const tabindex = textareaElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n\n  afterEach(cleanup);\n});\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n"],"names":["render","_jsx","RootEnvironmentProvider","ReadonlyTextFieldInput","expect","TabbableModeContext","cleanup","matchTranslationBundle"],"mappings":"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"}