{"version":3,"file":"TextFieldInput.spec.js","sources":["../../../../src/UNSAFE_TextField/__tests__/TextFieldInput.spec.tsx"],"sourcesContent":["import { cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { TextFieldInput } from '../TextFieldInput';\nimport { FormFieldContext } from '../../hooks/UNSAFE_useFormFieldContext';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment/EnvironmentProvider';\nimport type { RootEnvironment } from '../../UNSAFE_Environment/EnvironmentContext';\n\ndescribe('TextFieldInput - translations', () => {\n  it('aria-label is populated with translated loading string', async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <FormFieldContext.Provider value={{ isLoading: true }}>\n          <TextFieldInput ariaLabel=\"sample aria label\" value=\"sample text\" />\n        </FormFieldContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = container.querySelector('input');\n    expect(inputElement).not.to.be.null;\n\n    const ariaLabel = inputElement?.getAttribute('aria-label');\n    expect(ariaLabel).to.equal(translations.formControl_loading());\n  });\n\n  it('aria-label is populated with provided aria-label', async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    const ariaLabelText = 'sample aria label';\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <FormFieldContext.Provider value={{ isLoading: false }}>\n          <TextFieldInput ariaLabel={ariaLabelText} value=\"sample text\" />\n        </FormFieldContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = container.querySelector('input');\n    expect(inputElement).not.to.be.null;\n\n    const ariaLabel = inputElement?.getAttribute('aria-label');\n    expect(ariaLabel).to.equal(ariaLabelText);\n  });\n\n  afterEach(cleanup);\n});\n\ndescribe('TextFieldInput - TabbableModeContext', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n\n  it('as input, TabbableModeContext not provided', async () => {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <TextFieldInput value=\"sample text\" />\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = container.querySelector('input');\n    expect(inputElement).not.to.be.null;\n\n    const tabindex = inputElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=true', async () => {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: true }}>\n          <TextFieldInput value=\"sample text\" />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = container.querySelector('input');\n    expect(inputElement).not.to.be.null;\n\n    const tabindex = inputElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=false', async () => {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: false }}>\n          <TextFieldInput value=\"sample text\" />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const inputElement = container.querySelector('input');\n    expect(inputElement).not.to.be.null;\n\n    const tabindex = inputElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n\n  it('as textarea, TabbableModeContext not provided', async () => {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <TextFieldInput as=\"textarea\" value=\"sample text\" />\n      </RootEnvironmentProvider>\n    );\n\n    const textareaElement = container.querySelector('textarea');\n    expect(textareaElement).not.to.be.null;\n\n    const tabindex = textareaElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as textarea, TabbableModeContext isTabbable=true', async () => {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: true }}>\n          <TextFieldInput as=\"textarea\" value=\"sample text\" />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const textareaElement = container.querySelector('textarea');\n    expect(textareaElement).not.to.be.null;\n\n    const tabindex = textareaElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as textarea, TabbableModeContext isTabbable=false', async () => {\n    const { container } = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: false }}>\n          <TextFieldInput as=\"textarea\" value=\"sample text\" />\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const textareaElement = container.querySelector('textarea');\n    expect(textareaElement).not.to.be.null;\n\n    const tabindex = textareaElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n\n  afterEach(cleanup);\n});\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n"],"names":["matchTranslationBundle","render","_jsx","RootEnvironmentProvider","FormFieldContext","TextFieldInput","expect","cleanup","TabbableModeContext"],"mappings":"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"}