/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');

var hooks_UNSAFE_useUser = require('./hooks/UNSAFE_useUser.js');
var utils_UNSAFE_arrayUtils = require('./utils/UNSAFE_arrayUtils.js');
require('./utils/UNSAFE_classNames.js');
require('./UNSAFE_Flex.js');
var UNSAFE_WindowOverlay = require('./UNSAFE_WindowOverlay.js');
var classNames = require('./classNames-55bceee6.js');
var Flex = require('./Flex-b113edd5.js');

const positions = utils_UNSAFE_arrayUtils.stringLiteralArray(['top', 'top-left', 'top-right', 'top-start', 'top-end', 'bottom', 'bottom-left', 'bottom-right', 'bottom-start', 'bottom-end']);
const styles = {
  notificationPosition: "_16ik9hw",
  ['top-left']: "akd4h6",
  top: "urs9gb",
  ['top-right']: "_40to3k",
  ['bottom-left']: "i8j16y",
  bottom: "_183xiko",
  ['bottom-right']: "_1q3l9t"
};

const MessageLayer = ({
  children,
  offset,
  testId,
  position = 'bottom'
}) => {
  var _a, _b;

  const {
    direction
  } = hooks_UNSAFE_useUser.useUser();
  const isLtr = direction === 'ltr';
  let logicalPosition;

  switch (position) {
    case 'top-start':
      logicalPosition = isLtr ? styles['top-left'] : styles['top-right'];
      break;

    case 'top-end':
      logicalPosition = isLtr ? styles['top-right'] : styles['top-left'];
      break;

    case 'bottom-start':
      logicalPosition = isLtr ? styles['bottom-left'] : styles['bottom-right'];
      break;

    case 'bottom-end':
      logicalPosition = isLtr ? styles['bottom-right'] : styles['bottom-left'];
      break;

    default:
      logicalPosition = styles[position];
      break;
  }

  const positionClasses = classNames.classNames([styles.notificationPosition, logicalPosition]);
  const offsetStyle = typeof offset === 'number' ? {
    '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${offset}px`,
    '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${offset}px`
  } : {
    '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${(_a = offset === null || offset === void 0 ? void 0 : offset.vertical) !== null && _a !== void 0 ? _a : 0}px`,
    '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${(_b = offset === null || offset === void 0 ? void 0 : offset.horizontal) !== null && _b !== void 0 ? _b : 0}px`
  };
  return jsxRuntime.jsx(UNSAFE_WindowOverlay.WindowOverlay, {
    children: jsxRuntime.jsx("div", Object.assign({
      class: positionClasses,
      "data-testid": testId,
      style: offset !== undefined ? offsetStyle : undefined
    }, {
      children: jsxRuntime.jsx(Flex.Flex, Object.assign({
        direction: "column",
        gap: "2x"
      }, {
        children: children
      }))
    }))
  });
};

exports.MessageLayer = MessageLayer;
exports.positions = positions;
/*  */
//# sourceMappingURL=MessageLayer-2d31300d.js.map
