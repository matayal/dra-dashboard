{"version":3,"file":"Link.spec.js","sources":["../../../../src/UNSAFE_Link/__tests__/Link.spec.tsx"],"sourcesContent":["import { Fragment } from 'preact';\nimport { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { Link } from '../Link';\nimport userEvent from '@testing-library/user-event';\n\ndescribe('Test Link component', () => {\n  it('render', () => {\n    const content = render(<Link href=\"#\">Link</Link>);\n    const link = content.queryByText('Link', { exact: false });\n    expect(link).not.null;\n  });\n\n  it('applies default CSS classes', async function () {\n    const content = render(<Link href=\"#\">Link</Link>);\n    const firstElement = content.container.firstElementChild;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(2);\n  });\n\n  it('variant selected', async function () {\n    const content = render(\n      <Link href=\"#\" variant=\"primary\">\n        Link\n      </Link>\n    );\n    const firstElement = content.container.firstElementChild;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(3);\n  });\n\n  it('event', async function () {\n    let count = 0;\n    const increment = () => count++;\n    const content = render(\n      <Link href=\"#\" onClick={increment}>\n        Link\n      </Link>\n    );\n    const link = await content.findByText('Link');\n    expect(link).not.null;\n    userEvent.click(link);\n    expect(count).equals(1);\n  });\n\n  it('has single label id as aria-labelledby attribute value', async () => {\n    const labelId = 'sampleLabelId';\n    const content = render(\n      <Fragment>\n        <p id={labelId}></p>\n        <Link href=\"#\" ariaLabelledBy={labelId}>\n          Link\n        </Link>\n      </Fragment>\n    );\n    const link = await content.findByText('Link');\n    const ariaLabelledBy = link.getAttribute('aria-labelledBy');\n    expect(ariaLabelledBy).to.equal(labelId);\n  });\n\n  it('has multiple label ids as aria-labelledby attribute value', async () => {\n    const labelId1 = 'sampleLabelId1';\n    const labelId2 = 'sampleLabelId2';\n    const content = render(\n      <Fragment>\n        <p id={labelId1}></p>\n        <p id={labelId2}></p>\n        <Link href=\"#\" ariaLabelledBy={`${labelId1} ${labelId2}`}>\n          Link\n        </Link>\n      </Fragment>\n    );\n    const link = await content.findByText('Link');\n    const ariaLabelledBy = link.getAttribute('aria-labelledBy');\n    expect(ariaLabelledBy).to.equal(`${labelId1} ${labelId2}`);\n  });\n\n  it('has accessible aria-label and aria-describedby values', async () => {\n    const testAccessibleLabel = 'TEST-ACCESSIBLE-LABEL';\n    const testAriaDescribedBy = 'TEST ARIA-DESCRIBED-BY';\n    const content = render(\n      <Fragment>\n        <Link href=\"#\" accessibleLabel={testAccessibleLabel} ariaDescribedBy={testAriaDescribedBy}>\n          Link\n        </Link>\n      </Fragment>\n    );\n    const link = await content.findByText('Link');\n    expect(link.getAttribute('aria-label')).equals(testAccessibleLabel);\n    const describedByIds = link.getAttribute('aria-describedby')?.split(' ');\n    if (describedByIds && describedByIds.length > 0) {\n      expect(describedByIds[0]).equals('TEST');\n      expect(describedByIds[1]).equals('ARIA-DESCRIBED-BY');\n    }\n  });\n});\n"],"names":["render","_jsx","Link","expect","userEvent","_jsxs","Fragment"],"mappings":";;;;;;;;;;;;;;;;;;;AAMA,QAAQ,CAAC,qBAAqB,EAAE,MAAK;AACnC,IAAA,EAAE,CAAC,QAAQ,EAAE,MAAK;AAChB,QAAA,MAAM,OAAO,GAAGA,aAAM,CAACC,cAAC,CAAAC,SAAI,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,IAAI,EAAC,GAAG,EAAY,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAC,CAAC;AACnD,QAAA,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3D,QAAAC,WAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AACxB,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,kBAAK;AACrC,QAAA,MAAM,OAAO,GAAGH,aAAM,CAACC,cAAC,CAAAC,SAAI,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,IAAI,EAAC,GAAG,EAAY,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAC,CAAC;AACnD,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC;;AAEzD,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACzCC,WAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACrC,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE,kBAAK;AAC1B,QAAA,MAAM,OAAO,GAAGH,aAAM,CACpBC,cAAA,CAACC,SAAI,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,IAAI,EAAC,GAAG,EAAC,OAAO,EAAC,SAAS,EAAA,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,CAEzB,CACR,CAAC;AACF,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC;;AAEzD,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QACzCC,WAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACrC,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,OAAO,EAAE,kBAAK;QACf,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAA,MAAM,SAAS,GAAG,MAAM,KAAK,EAAE,CAAC;AAChC,QAAA,MAAM,OAAO,GAAGH,aAAM,CACpBC,cAAA,CAACC,SAAI,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,IAAI,EAAC,GAAG,EAAC,OAAO,EAAE,SAAS,EAAA,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,CAE1B,CACR,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAAC,WAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AACtB,QAAAC,6BAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtBD,WAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,wDAAwD,EAAE,YAAW;QACtE,MAAM,OAAO,GAAG,eAAe,CAAC;QAChC,MAAM,OAAO,GAAGH,aAAM,CACpBK,eAAA,CAACC,iBAAQ,EAAA,EAAA,QAAA,EAAA,CACPL,cAAG,CAAA,GAAA,EAAA,EAAA,EAAE,EAAE,OAAO,EAAM,CAAA,EACpBA,eAACC,SAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAC,IAAI,EAAC,GAAG,EAAC,cAAc,EAAE,OAAO,EAAA,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,CAE/B,CACE,EAAA,CAAA,CACZ,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC5DC,WAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,2DAA2D,EAAE,YAAW;QACzE,MAAM,QAAQ,GAAG,gBAAgB,CAAC;QAClC,MAAM,QAAQ,GAAG,gBAAgB,CAAC;AAClC,QAAA,MAAM,OAAO,GAAGH,aAAM,CACpBK,eAAA,CAACC,iBAAQ,EACP,EAAA,QAAA,EAAA,CAAAL,cAAA,CAAA,GAAA,EAAA,EAAG,EAAE,EAAE,QAAQ,EAAM,CAAA,EACrBA,cAAG,CAAA,GAAA,EAAA,EAAA,EAAE,EAAE,QAAQ,EAAA,CAAM,EACrBA,cAAA,CAACC,SAAI,EAAC,MAAA,CAAA,MAAA,CAAA,EAAA,IAAI,EAAC,GAAG,EAAC,cAAc,EAAE,CAAG,EAAA,QAAQ,IAAI,QAAQ,CAAA,CAAE,EAEjD,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CACE,CACZ,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;AAC5D,QAAAC,WAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA,EAAG,QAAQ,CAAA,CAAA,EAAI,QAAQ,CAAA,CAAE,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,uDAAuD,EAAE,YAAW;;QACrE,MAAM,mBAAmB,GAAG,uBAAuB,CAAC;QACpD,MAAM,mBAAmB,GAAG,wBAAwB,CAAC;QACrD,MAAM,OAAO,GAAGH,aAAM,CACpBC,cAAA,CAACK,iBAAQ,EACP,EAAA,QAAA,EAAAL,cAAA,CAACC,SAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EAAC,IAAI,EAAC,GAAG,EAAC,eAAe,EAAE,mBAAmB,EAAE,eAAe,EAAE,mBAAmB,EAAA,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,CAElF,EACE,CAAA,CACZ,CAAC;QACF,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAAC,WAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;AACpE,QAAA,MAAM,cAAc,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,GAAG,CAAC,CAAC;AACzE,QAAA,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/CA,WAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACzCA,WAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;AACvD,SAAA;AACH,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;"}