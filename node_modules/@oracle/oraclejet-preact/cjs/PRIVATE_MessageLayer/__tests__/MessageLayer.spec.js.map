{"version":3,"file":"MessageLayer.spec.js","sources":["../../../../src/PRIVATE_MessageLayer/__tests__/MessageLayer.spec.tsx"],"sourcesContent":["import { cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironment, RootEnvironmentProvider } from '../../UNSAFE_Environment';\n\nimport { MessageLayer, positions } from '../MessageLayer';\n\nconst MessageText = 'Test Message';\nconst MessageID = 'MessageID';\nconst TestMessage = () => <div>{MessageText}</div>;\nconst offset = 5;\nconst verticalOffset = '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset';\nconst horizontalOffset = '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset';\n\ndescribe('MessageLayer component', () => {\n  let env: Partial<RootEnvironment>;\n\n  before(async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    env =\n      env ||\n      ({\n        translations: { '@oracle/oraclejet-preact': translations }\n      } as Partial<RootEnvironment>);\n  });\n\n  afterEach(cleanup);\n\n  it('it renders', () => {\n    const { getByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageLayer>\n          <TestMessage />\n        </MessageLayer>\n      </RootEnvironmentProvider>\n    );\n\n    expect(getByText(MessageText)).to.exist;\n  });\n\n  positions.map((position) => {\n    it('it renders all positions: ' + position, async () => {\n      const { getByText, getByTestId } = render(\n        <RootEnvironmentProvider environment={env}>\n          <MessageLayer position={position} testId={MessageID}>\n            <TestMessage />\n          </MessageLayer>\n        </RootEnvironmentProvider>\n      );\n\n      const notificationLayer = getByTestId(MessageID);\n\n      expect(getByText(MessageText)).to.exist;\n      expect(notificationLayer.classList.length).to.equal(2);\n    });\n  });\n\n  it('it renders offset from number value', async () => {\n    const { getByTestId, getByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageLayer offset={offset} testId={MessageID}>\n          <TestMessage />\n        </MessageLayer>\n      </RootEnvironmentProvider>\n    );\n\n    const notificationLayer = getByTestId(MessageID);\n    const computed = getComputedStyle(notificationLayer);\n\n    expect(getByText(MessageText)).to.exist;\n    expect(computed.getPropertyValue(verticalOffset)).to.equal(offset + 'px');\n    expect(computed.getPropertyValue(horizontalOffset)).to.equal(offset + 'px');\n  });\n\n  it('it renders offset from object', () => {\n    const { getByTestId, getByText } = render(\n      <RootEnvironmentProvider environment={env}>\n        <MessageLayer\n          offset={{\n            horizontal: offset,\n            vertical: offset\n          }}\n          testId={MessageID}>\n          <TestMessage />\n        </MessageLayer>\n      </RootEnvironmentProvider>\n    );\n\n    const notificationLayer = getByTestId(MessageID);\n    const computed = getComputedStyle(notificationLayer);\n\n    expect(getByText(MessageText)).to.exist;\n    expect(computed.getPropertyValue(verticalOffset)).to.equal(offset + 'px');\n    expect(computed.getPropertyValue(horizontalOffset)).to.equal(offset + 'px');\n  });\n});\n"],"names":["_jsx","matchTranslationBundle","cleanup","render","RootEnvironmentProvider","MessageLayer","expect","positions"],"mappings":"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"}