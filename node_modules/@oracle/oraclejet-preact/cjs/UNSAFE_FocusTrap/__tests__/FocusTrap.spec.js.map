{"version":3,"file":"FocusTrap.spec.js","sources":["../../../../src/UNSAFE_FocusTrap/__tests__/FocusTrap.spec.tsx"],"sourcesContent":["/**\n * General FocusTrap tests\n */\nimport { Fragment, Ref, RefObject } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport { render, waitFor } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\nimport { FocusTrap } from '../FocusTrap';\n\nconst TestDialog = ({ submitButtonRef }: { submitButtonRef?: Ref<HTMLButtonElement> }) => (\n  <Fragment>\n    <input id=\"inside_input\" />\n    <button id=\"inside_cancel\">Cancel</button>\n    <button id=\"inside_submit\" ref={submitButtonRef}>\n      Submit\n    </button>\n  </Fragment>\n);\n\nconst TestComponent = ({\n  autoFocusTest = false,\n  isDisabled = false,\n  restoreFocusTest\n}: {\n  autoFocusTest?: boolean;\n  isDisabled?: boolean;\n  restoreFocusTest?: boolean;\n}) => {\n  const submitButtonRef = useRef<HTMLButtonElement>(null);\n  const followButtonRef = useRef<HTMLButtonElement>(null);\n\n  let maybeAutoFocusRef = undefined;\n  if (autoFocusTest) maybeAutoFocusRef = submitButtonRef;\n\n  let maybeRestoreFocusRef: undefined | RefObject<HTMLElement> | false = undefined;\n  if (restoreFocusTest === true) maybeRestoreFocusRef = followButtonRef;\n  if (restoreFocusTest === false) maybeRestoreFocusRef = false;\n\n  return (\n    <Fragment>\n      <button>Preceding Button</button>\n      {isDisabled ? (\n        <TestDialog submitButtonRef={submitButtonRef} />\n      ) : (\n        <FocusTrap autoFocusRef={maybeAutoFocusRef} restoreFocusRef={maybeRestoreFocusRef}>\n          <TestDialog submitButtonRef={submitButtonRef} />\n        </FocusTrap>\n      )}\n      <button ref={followButtonRef}>Following Button</button>\n    </Fragment>\n  );\n};\n\n/**\n * Asserting on document.activeElement is bit tricky and varies between jest (JSDOM) and karma-mocha\n * @param HTMLElement\n */\nconst expectActiveElementToBe = async (element: HTMLElement) => {\n  if (typeof jest !== typeof undefined) {\n    // For jest (JSDOM) tests we need to explicitly wait one tick\n    setTimeout(() => {\n      expect(document.activeElement).equals(element);\n    }, 0);\n  } else {\n    // for karma-mocha, sometimes, we need an await.\n    await waitFor(() => {\n      expect(document.activeElement).equals(element);\n    });\n  }\n};\n\ndescribe('Test FocusTrap component', () => {\n  beforeEach(() => {\n    // need this as focus trap expects it to be set, it is used to determine if the tab stop is visible\n    Object.defineProperty(HTMLElement.prototype, 'offsetParent', {\n      get() {\n        return this.parentNode;\n      }\n    });\n  });\n  it('renders and sets default focus on first tabbable item', function () {\n    const { getByRole } = render(<TestComponent />);\n    const insideInput = getByRole('textbox');\n    expect(document.activeElement).equals(insideInput);\n  });\n\n  it('renders and sets initial focus to specified element', function () {\n    const { getByText } = render(<TestComponent autoFocusTest={true} />);\n    const autofocusButton = getByText('Submit');\n    expect(document.activeElement).equals(autofocusButton);\n  });\n\n  it('constrains tab behavior', async () => {\n    const { getByRole, getByText } = render(<TestComponent />);\n    const cancelButton = getByText('Cancel');\n    const submitButton = getByText('Submit');\n    const insideInput = getByRole('textbox');\n    userEvent.tab();\n    await expectActiveElementToBe(cancelButton);\n    userEvent.tab();\n    await expectActiveElementToBe(submitButton);\n    userEvent.tab();\n    // wrap around forward\n    await expectActiveElementToBe(insideInput);\n    userEvent.tab();\n    await expectActiveElementToBe(cancelButton);\n    // wrap around backwards\n    userEvent.tab({ shift: true });\n    await expectActiveElementToBe(insideInput);\n    userEvent.tab({ shift: true });\n    await expectActiveElementToBe(submitButton);\n  });\n\n  it('unmounts and resets focus to original element', async () => {\n    const { getByRole, getByText, rerender } = render(<TestComponent isDisabled={true} />);\n    const precedingButton = getByText('Preceding Button');\n    // set original focus to button outside focus trap\n    precedingButton.focus();\n    await expectActiveElementToBe(precedingButton);\n    rerender(<TestComponent isDisabled={false} />);\n    const insideInput = getByRole('textbox');\n    await expectActiveElementToBe(insideInput);\n    rerender(<TestComponent isDisabled={true} />);\n    await expectActiveElementToBe(precedingButton);\n  });\n\n  it('unmounts and resets focus to specified element', async () => {\n    const { getByRole, getByText, rerender } = render(\n      <TestComponent isDisabled={true} restoreFocusTest={true} />\n    );\n    const precedingButton = getByText('Preceding Button');\n    const followingButton = getByText('Following Button');\n    // set original focus to button outside focus trap\n    precedingButton.focus();\n    await expectActiveElementToBe(precedingButton);\n    rerender(<TestComponent isDisabled={false} restoreFocusTest={true} />);\n    const insideInput = getByRole('textbox');\n    await expectActiveElementToBe(insideInput);\n    rerender(<TestComponent isDisabled={true} restoreFocusTest={true} />);\n    await expectActiveElementToBe(followingButton);\n  });\n\n  it('unmounts and does no focus restore behavior when toggled off', async () => {\n    const { getByRole, getByText, rerender } = render(\n      <TestComponent isDisabled={true} restoreFocusTest={false} />\n    );\n    const defaultActiveElement = document.activeElement;\n    const precedingButton = getByText('Preceding Button');\n    // set original focus to button outside focus trap\n    precedingButton.focus();\n    await expectActiveElementToBe(precedingButton);\n    rerender(<TestComponent isDisabled={false} restoreFocusTest={false} />);\n    const insideInput = getByRole('textbox');\n    await expectActiveElementToBe(insideInput);\n    rerender(<TestComponent isDisabled={true} restoreFocusTest={false} />);\n    await expectActiveElementToBe(defaultActiveElement as HTMLElement);\n  });\n});\n"],"names":["_jsxs","Fragment","_jsx","useRef","FocusTrap","expect","waitFor","render","userEvent"],"mappings":"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"}