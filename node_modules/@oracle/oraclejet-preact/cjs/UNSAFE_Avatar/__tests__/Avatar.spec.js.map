{"version":3,"file":"Avatar.spec.js","sources":["../../../../src/UNSAFE_Avatar/__tests__/Avatar.spec.tsx"],"sourcesContent":["import { ComponentProps } from 'preact';\nimport { render } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\nimport { Avatar } from '../';\n//import { DemoRedwoodIcon } from '@oracle/oraclejet-pattern-library';\n\ntype avatarProps = ComponentProps<typeof Avatar>;\n\ndescribe('Test Avatar component', () => {\n  it('render', async function () {\n    const content = render(<Avatar>TN</Avatar>);\n    const initials = await content.findByText('TN');\n    expect(initials).not.null;\n    userEvent.click(initials);\n  });\n\n  it('applies Linaria CSS classes', () => {\n    const content = render(<Avatar />);\n    const firstElement = content.container.firstElementChild as HTMLElement;\n    const classList = firstElement?.classList;\n    expect(classList?.length).equals(3);\n  });\n\n  it('checks for avatar sizes', () => {\n    const sizeOptionsArray: Array<avatarProps['size']> = [\n      '2xs',\n      'xs',\n      'sm',\n      'md',\n      'lg',\n      'xl',\n      '2xl'\n    ];\n    sizeOptionsArray.forEach((size) => {\n      const content = render(<Avatar size={size} />);\n      const firstElement = content.container.firstElementChild as HTMLElement;\n      const classList = firstElement?.classList;\n      const bgColorClass = 'oj-c-avatar-' + size;\n      const result = classList?.value;\n      expect(result).to.be.a('string').that.contains(bgColorClass);\n    });\n  });\n  it('checks for avatar initials', () => {\n    const testInitials = 'TEST INITIAL';\n    const content = render(<Avatar initials={testInitials} />);\n    const firstElement = content.container.firstElementChild?.firstElementChild as HTMLElement;\n    const innerHTMLText = firstElement?.innerHTML;\n    expect(innerHTMLText).equals(testInitials);\n  });\n  it('checks for avatar src', () => {\n    const src: avatarProps['src'] = 'avatar-image.jpg';\n    const content = render(<Avatar src={src} />);\n    const firstElement = content.container.firstElementChild?.firstElementChild as HTMLElement;\n    const srcImage = firstElement?.style.backgroundImage;\n    expect(srcImage).to.be.a('string').that.contains(src);\n  });\n  // commented out until we resolve using this external dependency\n  // it('checks for avatar icon', () => {\n  //   const iconName = 'car';\n  //   const content = render(\n  //     <Avatar>\n  //       <DemoRedwoodIcon name={iconName} />\n  //     </Avatar>\n  //   );\n  //   const firstElement = content.container.firstElementChild as HTMLElement;\n  //   const iconElement = firstElement?.querySelectorAll(`.oj-ux-ico-${iconName}`);\n  //   expect(iconElement?.length).equals(1);\n  // });\n  //Note: added check for running the below test only on browser, so as to access the getComputedStyle when the component is rendered\n  if (typeof jest === 'undefined') {\n    it('checks for avatar shape', () => {\n      const shapeOptionsArray: Array<avatarProps['shape']> = ['circle', 'square'];\n      shapeOptionsArray.forEach((shape) => {\n        const content = render(<Avatar shape={shape} />);\n        const firstElement = content.container.firstElementChild?.firstElementChild as HTMLElement;\n        const avatarBorderRadius = window\n          .getComputedStyle(firstElement)\n          .getPropertyValue('border-radius');\n        if (shape === 'circle') {\n          expect(avatarBorderRadius).equals('50%');\n        } else {\n          expect(avatarBorderRadius).not.equals('50%');\n        }\n      });\n    });\n  }\n  it('checks for backgroundColor style', () => {\n    const backgroundOptionsArray: Array<avatarProps['background']> = [\n      'neutral',\n      'orange',\n      'green',\n      'teal',\n      'blue',\n      'slate',\n      'pink',\n      'purple',\n      'lilac',\n      'gray'\n    ];\n    backgroundOptionsArray.forEach((background) => {\n      const content = render(<Avatar background={background} />);\n      const firstElement = content.container.firstElementChild as HTMLElement;\n      const classList = firstElement?.classList;\n      const sizeClass = 'oj-c-avatar-bg-' + background;\n      const result = classList?.value;\n      expect(result).to.be.a('string').that.contains(sizeClass);\n    });\n  });\n});\n\ndescribe('Security Test Avatar component', () => {\n  it('initials injection', function () {\n    const unwantedInitials = \"<span id='evil'>Evil disabled</span>\";\n    const content = render(<Avatar initials={unwantedInitials}></Avatar>);\n    const parentContainer = content.container as HTMLElement;\n    const evilSpan = parentContainer.querySelectorAll('#evil').length;\n    expect(evilSpan).equals(0);\n  });\n  it('src injection', function () {\n    const unwantedSrc = \"<span id='evil'>Evil disabled</span>\";\n    const content = render(<Avatar src={unwantedSrc}></Avatar>);\n    const parentContainer = content.container as HTMLElement;\n    const evilSpan = parentContainer.querySelectorAll('#evil').length;\n    expect(evilSpan).equals(0);\n  });\n  it('size injection', function () {\n    const unwantedInitials = \"<span id='evil'>Evil disabled</span>\";\n    // @ts-ignore\n    const content = render(<Avatar size={unwantedInitials}></Avatar>);\n    const parentContainer = content.container as HTMLElement;\n    const evilSpan = parentContainer.querySelectorAll('#evil').length;\n    expect(evilSpan).equals(0);\n  });\n});\n"],"names":["render","_jsx","Avatar","expect","userEvent"],"mappings":"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"}