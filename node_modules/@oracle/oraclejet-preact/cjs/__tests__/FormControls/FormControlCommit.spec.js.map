{"version":3,"file":"FormControlCommit.spec.js","sources":["../../../../src/__tests__/FormControls/FormControlCommit.spec.tsx"],"sourcesContent":["import { act, cleanup, fireEvent, render } from '@testing-library/preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport { expect } from 'chai';\nimport { InputPassword } from '../../UNSAFE_InputPassword';\nimport type { RootEnvironment } from '../../UNSAFE_Environment';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { ComponentProps } from 'preact';\nimport { ValueUpdateDetail } from '../../utils/UNSAFE_valueUpdateDetail';\nimport { InputText } from '../../UNSAFE_InputText';\nimport { NumberInputText } from '../../UNSAFE_NumberInputText';\nimport { TextArea } from '../../UNSAFE_TextArea';\nimport { TextAreaAutosize } from '../../UNSAFE_TextAreaAutosize';\n\ntype DemoInputPasswordProps = Pick<ComponentProps<typeof InputPassword>, 'hasClearIcon' | 'label'>;\n\nfunction DemoInputPassword({ hasClearIcon, label }: DemoInputPasswordProps) {\n  const [value, setValue] = useState('hello');\n  const [count, setCount] = useState(0);\n  const [committedValue, setCommittedValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  const handleCommit = useCallback((detail: ValueUpdateDetail<string>) => {\n    // setCount(count+1) does not increment it past 1.\n    // https://overreacted.io/a-complete-guide-to-useeffect/\n    // https://overreacted.io/react-as-a-ui-runtime/#batching\n    // use the 'updater function' form\n    setCount((prevCount) => prevCount + 1);\n    setCommittedValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <InputPassword\n        hasClearIcon={hasClearIcon}\n        label={label}\n        onCommit={handleCommit}\n        onInput={handleInput}\n        value={value}\n      />\n      <span class=\"testcommittedcountclass\">{count}</span>\n      <span class=\"testcommittedvalueclass\">{committedValue}</span>\n      <button class=\"testclickmebutton\" onClick={() => setValue('goodbye')}>\n        Click me\n      </button>\n    </>\n  );\n}\n\ntype DemoInputTextProps = Pick<\n  ComponentProps<typeof InputText>,\n  'hasClearIcon' | 'label' | 'maxLength'\n>;\n\nfunction DemoInputText({ hasClearIcon, label, maxLength }: DemoInputTextProps) {\n  const [value, setValue] = useState('hello');\n  const [count, setCount] = useState(0);\n  const [committedValue, setCommittedValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  const handleCommit = useCallback((detail: ValueUpdateDetail<string>) => {\n    // setCount(count+1) does not increment it past 1.\n    // https://overreacted.io/a-complete-guide-to-useeffect/\n    // https://overreacted.io/react-as-a-ui-runtime/#batching\n    // use the 'updater function' form\n    setCount((prevCount) => prevCount + 1);\n    setCommittedValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <InputText\n        hasClearIcon={hasClearIcon}\n        label={label}\n        maxLength={maxLength}\n        onCommit={handleCommit}\n        onInput={handleInput}\n        value={value}\n      />\n      <span class=\"testcommittedcountclass\">{count}</span>\n      <span class=\"testcommittedvalueclass\">{committedValue}</span>\n      <button class=\"testclickmebutton\" onClick={() => setValue('goodbye')}>\n        Click me\n      </button>\n    </>\n  );\n}\n\ntype DemoNumberInputTextProps = Pick<ComponentProps<typeof NumberInputText>, 'label'>;\n\nfunction DemoNumberInputText({ label }: DemoNumberInputTextProps) {\n  // Note: NumberInputText accepts non-numeric input so use 'hello'\n  // and 'goodbye' values for consistency.\n  const [value, setValue] = useState('hello');\n  const [count, setCount] = useState(0);\n  const [committedValue, setCommittedValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  const handleCommit = useCallback((detail: ValueUpdateDetail<string>) => {\n    // setCount(count+1) does not increment it past 1.\n    // https://overreacted.io/a-complete-guide-to-useeffect/\n    // https://overreacted.io/react-as-a-ui-runtime/#batching\n    // use the 'updater function' form\n    setCount((prevCount) => prevCount + 1);\n    setCommittedValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <NumberInputText label={label} onCommit={handleCommit} onInput={handleInput} value={value} />\n      <span class=\"testcommittedcountclass\">{count}</span>\n      <span class=\"testcommittedvalueclass\">{committedValue}</span>\n      <button class=\"testclickmebutton\" onClick={() => setValue('goodbye')}>\n        Click me\n      </button>\n    </>\n  );\n}\n\ntype DemoTextAreaProps = Pick<ComponentProps<typeof TextArea>, 'label' | 'maxLength'>;\n\nfunction DemoTextArea({ label, maxLength }: DemoTextAreaProps) {\n  const [value, setValue] = useState('hello');\n  const [count, setCount] = useState(0);\n  const [committedValue, setCommittedValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  const handleCommit = useCallback((detail: ValueUpdateDetail<string>) => {\n    // setCount(count+1) does not increment it past 1.\n    // https://overreacted.io/a-complete-guide-to-useeffect/\n    // https://overreacted.io/react-as-a-ui-runtime/#batching\n    // use the 'updater function' form\n    setCount((prevCount) => prevCount + 1);\n    setCommittedValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <TextArea\n        label={label}\n        maxLength={maxLength}\n        onCommit={handleCommit}\n        onInput={handleInput}\n        value={value}\n      />\n      <span class=\"testcommittedcountclass\">{count}</span>\n      <span class=\"testcommittedvalueclass\">{committedValue}</span>\n      <button class=\"testclickmebutton\" onClick={() => setValue('goodbye')}>\n        Click me\n      </button>\n    </>\n  );\n}\n\ntype DemoTextAreaAutosizeProps = Pick<\n  ComponentProps<typeof TextAreaAutosize>,\n  'label' | 'maxLength'\n>;\n\nfunction DemoTextAreaAutosize({ label, maxLength }: DemoTextAreaAutosizeProps) {\n  const [value, setValue] = useState('hello');\n  const [count, setCount] = useState(0);\n  const [committedValue, setCommittedValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  const handleCommit = useCallback((detail: ValueUpdateDetail<string>) => {\n    // setCount(count+1) does not increment it past 1.\n    // https://overreacted.io/a-complete-guide-to-useeffect/\n    // https://overreacted.io/react-as-a-ui-runtime/#batching\n    // use the 'updater function' form\n    setCount((prevCount) => prevCount + 1);\n    setCommittedValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <TextAreaAutosize\n        label={label}\n        maxLength={maxLength}\n        onCommit={handleCommit}\n        onInput={handleInput}\n        value={value}\n      />\n      <span class=\"testcommittedcountclass\">{count}</span>\n      <span class=\"testcommittedvalueclass\">{committedValue}</span>\n      <button class=\"testclickmebutton\" onClick={() => setValue('goodbye')}>\n        Click me\n      </button>\n    </>\n  );\n}\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n\nconst componentList: { name: string; component: any }[] = [\n  { name: 'InputPassword', component: DemoInputPassword },\n  { name: 'InputText', component: DemoInputText },\n  { name: 'NumberInputText', component: DemoNumberInputText },\n  { name: 'TextArea', component: DemoTextArea },\n  { name: 'TextAreaAutosize', component: DemoTextAreaAutosize }\n];\n\nconst componentWithClearIconList: { name: string; component: any }[] = [\n  { name: 'InputPassword', component: DemoInputPassword },\n  { name: 'InputText', component: DemoInputText }\n];\n\nconst componentWithMaxLengthList: { name: string; component: any }[] = [\n  { name: 'InputText', component: DemoInputText },\n  { name: 'TextArea', component: DemoTextArea },\n  { name: 'TextAreaAutosize', component: DemoTextAreaAutosize }\n];\n\ndescribe('Form Controls - onCommit', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = await getEnvironmentContext();\n  });\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: test initial value`, async () => {\n      const label = 'test initial value';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} />\n        </RootEnvironmentProvider>\n      );\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name} test blur should not call onCommit`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} />\n          <button />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n      const countspan = container.querySelector('.testcommittedcountclass');\n      const buttonElement = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n\n      act(() => {\n        inputElement.focus();\n      });\n\n      act(() => {\n        buttonElement.focus();\n      });\n      expect(countspan?.textContent, 'blur without editing, onCommit count should be 0').to.equal(\n        '0'\n      );\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: test Enter Enter Enter should not call onCommit`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n      const countspan = container.querySelector('.testcommittedcountclass');\n      const valuespan = container.querySelector('.testcommittedvalueclass');\n\n      expect(valuespan?.textContent, 'initial render committed value').to.equal('hello');\n\n      // expect onCommit not to be called at all yet\n      expect(countspan?.textContent, 'initial render, check onCommit count').to.equal('0');\n      // Enter a few times should not affect value or commit count\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n\n      expect(countspan?.textContent, 'Press Enter, check onCommit count').to.equal('0');\n      expect(valuespan?.textContent, 'after Enter, committed value').to.equal('hello');\n    })\n  );\n\n  componentWithClearIconList.forEach((compObj) =>\n    // click on enter over and over to make sure onCommit isn't being called but once.\n    it(`${compObj.name} test click Clear Icon clears display value, Enter Enter Enter commits value once`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} hasClearIcon=\"always\" />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n      const countspan = container.querySelector('.testcommittedcountclass');\n      const valuespan = container.querySelector('.testcommittedvalueclass');\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found').not.null;\n\n      if (clearIcon) {\n        fireEvent.click(clearIcon);\n      }\n      expect(inputElement.value, 'after click clear icon, input value').to.equal('');\n      expect(valuespan?.textContent, 'after click icon, committed value not changed').to.equal(\n        'hello'\n      );\n      // expect onCommit not to be called at all yet\n      expect(countspan?.textContent, 'clicked clear icon, check onCommit count').to.equal('0');\n      // Enter will commit the ''\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n\n      expect(countspan?.textContent, 'Press Enter a few times after clear icon').to.equal('1');\n      expect(valuespan?.textContent, 'after click icon and Enter, committed value').to.equal('');\n    })\n  );\n\n  componentWithClearIconList.forEach((compObj) =>\n    it(`${compObj.name}: test click Clear Icon clears display value, blur commits value`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} hasClearIcon=\"always\" />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n      const countspan = container.querySelector('.testcommittedcountclass');\n      const valuespan = container.querySelector('.testcommittedvalueclass');\n      const buttonElement = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found').not.null;\n\n      // click clear\n      if (clearIcon) {\n        fireEvent.click(clearIcon);\n      }\n      // input clears out but committed value is still 'hello' and onCommit handler not called.\n      expect(inputElement.value, 'after click clear icon, input value').to.equal('');\n      expect(valuespan?.textContent, 'after click icon, committed value not changed').to.equal(\n        'hello'\n      );\n      expect(countspan?.textContent, 'clicked clear icon, check onCommit count').to.equal('0');\n\n      // focus outside will call onCommit handler.\n      act(() => {\n        buttonElement.focus();\n      });\n      expect(\n        countspan?.textContent,\n        'after click icon and blur, onCommit count should be increased to 1'\n      ).to.equal('1');\n      expect(valuespan?.textContent, 'after click icon and blur, committed value').to.equal('');\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: test programmatic value change does not call onCommit`, async () => {\n      const label = 'programmatic change';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} hasClearIcon=\"never\" />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n      const countspan = container.querySelector('.testcommittedcountclass');\n      const valuespan = container.querySelector('.testcommittedvalueclass');\n      const buttonElement = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n\n      // click buttonElement which will programmatically change the value on the component\n      act(() => {\n        fireEvent.click(buttonElement);\n      });\n      // Component's display value\n      // Component should be able to distinguish between value being from an input and\n      // value being from a programmatic change. It calls onCommit if it is a programmatic change.\n      // See useCurrentValueReducer hook for details.\n      expect(inputElement.value, 'display value after programmatic change').to.equal('goodbye');\n      expect(countspan?.textContent, 'after programmatic change, onCommit is not called').to.equal(\n        '0'\n      );\n      expect(\n        valuespan?.textContent,\n        'after programmatic change, committed value is not changed'\n      ).to.equal('hello');\n      // press Enter should not cause an onCommit now since it was a programmatic change.\n      fireEvent.keyDown(inputElement, { key: 'Enter', code: 'Enter', charCode: 13 });\n      expect(countspan?.textContent, 'after programmatic change, onCommit is not called').to.equal(\n        '0'\n      );\n    })\n  );\n\n  componentWithMaxLengthList.forEach((compObj) =>\n    it(`${compObj.name} test programmatic value change with < maxlength does not call onCommit`, async () => {\n      const label = 'programmatic change';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} maxLength={30} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n      const countspan = container.querySelector('.testcommittedcountclass');\n      const valuespan = container.querySelector('.testcommittedvalueclass');\n      const buttonElement = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n\n      // click buttonElement which will programmatically change the value on Component\n      act(() => {\n        fireEvent.click(buttonElement);\n      });\n      // should not cause an onCommit now since it was a programmatic change\n      // and it didn't cause the maxLength filter did not kick in.\n      expect(inputElement.value, 'display value after programmatic change').to.equal('goodbye');\n      expect(countspan?.textContent, 'after programmatic change, onCommit is not called').to.equal(\n        '0'\n      );\n      expect(\n        valuespan?.textContent,\n        'after programmatic change, committed value is not changed'\n      ).to.equal('hello');\n    })\n  );\n\n  componentWithMaxLengthList.forEach((compObj) =>\n    it(`${compObj.name}: test programmatic value change with > maxlength does call onCommit`, async () => {\n      const label = 'programmatic change';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} maxLength={6} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType) as\n        | HTMLInputElement\n        | HTMLTextAreaElement;\n      expect(inputElement.value).equal('hello');\n      const countspan = container.querySelector('.testcommittedcountclass');\n      const valuespan = container.querySelector('.testcommittedvalueclass');\n      const buttonElement = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n\n      // click buttonElement which will ***programmatically change*** the value on Component\n      act(() => {\n        fireEvent.click(buttonElement);\n      });\n      // should cause an onCommit now even though it was a programmatic change\n      // because it caused the maxLength filter to kick in and that fires an onCommit.\n      expect(inputElement.value, 'display value after programmatic change').to.equal('goodby');\n      expect(\n        countspan?.textContent,\n        'after programmatic change when maxLength filter kicks in, onCommit is called'\n      ).to.equal('1');\n      expect(\n        valuespan?.textContent,\n        'after programmatic change when maxLength filter kicks in, committed value is changed'\n      ).to.equal('goodby');\n    })\n  );\n\n  afterEach(cleanup);\n});\n"],"names":["useState","useCallback","_jsxs","_Fragment","_jsx","InputPassword","InputText","NumberInputText","TextArea","TextAreaAutosize","matchTranslationBundle","render","RootEnvironmentProvider","expect","act","fireEvent","cleanup"],"mappings":"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"}