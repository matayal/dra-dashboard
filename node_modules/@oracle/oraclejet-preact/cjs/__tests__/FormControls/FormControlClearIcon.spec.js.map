{"version":3,"file":"FormControlClearIcon.spec.js","sources":["../../../../src/__tests__/FormControls/FormControlClearIcon.spec.tsx"],"sourcesContent":["import { act, cleanup, render } from '@testing-library/preact';\nimport { useState } from 'preact/hooks';\nimport { expect } from 'chai';\nimport { InputPassword } from '../../UNSAFE_InputPassword';\nimport type { RootEnvironment } from '../../UNSAFE_Environment';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { ComponentProps } from 'preact';\nimport { InputText } from '../../UNSAFE_InputText';\n\nconst noOp = () => {};\n\ntype DemoInputPasswordProps = Pick<\n  ComponentProps<typeof InputPassword>,\n  'hasClearIcon' | 'label' | 'isDisabled' | 'isReadonly'\n>;\n\nfunction DemoInputPassword({\n  hasClearIcon,\n  isDisabled,\n  isReadonly,\n  label\n}: DemoInputPasswordProps) {\n  const [value, setValue] = useState('hello');\n  return (\n    <>\n      <InputPassword\n        hasClearIcon={hasClearIcon}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        onInput={noOp}\n        value={value}\n      />\n      <button class=\"testclickmebutton\" onClick={() => setValue('goodbye')}>\n        Click me\n      </button>\n    </>\n  );\n}\n\ntype DemoInputTextProps = Pick<\n  ComponentProps<typeof InputText>,\n  'hasClearIcon' | 'label' | 'isDisabled' | 'isReadonly'\n>;\n\nfunction DemoInputText({ hasClearIcon, isDisabled, isReadonly, label }: DemoInputTextProps) {\n  const [value, setValue] = useState('hello');\n\n  return (\n    <>\n      <InputText\n        hasClearIcon={hasClearIcon}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        onInput={noOp}\n        value={value}\n      />\n      <button class=\"testclickmebutton\" onClick={() => setValue('goodbye')}>\n        Click me\n      </button>\n    </>\n  );\n}\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n\ntype ComponentsWithClearIcon = {\n  name: 'InputPassword' | 'InputText';\n  component: typeof DemoInputPassword | typeof DemoInputText;\n};\nconst componentWithClearIconList: ComponentsWithClearIcon[] = [\n  { name: 'InputPassword', component: DemoInputPassword },\n  { name: 'InputText', component: DemoInputText }\n];\n\ndescribe('FormControlClearIcon.spec', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = await getEnvironmentContext();\n  });\n\n  componentWithClearIconList.forEach(function (compObj) {\n    // conditionally\n\n    it(`${compObj.name} hasClearIcon 'conditionally', no value, focusin/focusout`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"conditionally\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n      inputElement.value = '';\n\n      act(() => {\n        inputElement.focus();\n      });\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      let clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found').not.null;\n\n      // focus out\n      const buttonElement = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n      act(() => {\n        buttonElement.focus();\n      });\n      clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'conditionally', with value, focusin/focusout`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"conditionally\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n      expect(inputElement.value).equal('hello');\n\n      act(() => {\n        inputElement.focus();\n      });\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      let clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found').not.null;\n\n      // focus out\n      const buttonElement = container.querySelector('.testclickmebutton') as HTMLButtonElement;\n      act(() => {\n        buttonElement.focus();\n      });\n      clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n\n    // hover/hover out\n    it(`${compObj.name} hasClearIcon 'conditionally', with value, hover/blur`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"conditionally\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n      expect(inputElement.value).equal('hello');\n\n      act(() => {\n        inputElement.focus();\n      });\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      let clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found').not.null;\n\n      act(() => {\n        inputElement.blur();\n      });\n\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n\n    // always\n\n    it(`${compObj.name} hasClearIcon 'always', check icon`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"always\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n      expect(inputElement.value).equal('hello');\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found').not.null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'always', with value, focusin/focusout`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"always\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n      expect(inputElement.value).equal('hello');\n\n      // set value to empty string.\n      inputElement.value = '';\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found even if no value is in the field').not.null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'always', isReadonly true`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"always\" isReadonly={true} label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found for readonly component').null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'always', isDisabled true`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"always\" isDisabled={true} label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found for disabled component').null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'always', focusin`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"always\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n      expect(inputElement.value).equal('hello');\n\n      act(() => {\n        inputElement.focus();\n      });\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon found, so this should not be null').not.null;\n    });\n\n    // never\n    it(`${compObj.name} hasClearIcon 'never', check icon`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"never\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n      expect(inputElement.value).equal('hello');\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'never', focusin`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"never\" label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n\n      act(() => {\n        inputElement.focus();\n      });\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'never', isReadonly comp`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"never\" isReadonly={true} label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n\n    it(`${compObj.name} hasClearIcon 'never', isDisabled comp`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component hasClearIcon=\"never\" isDisabled={true} label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n\n    // default\n    it(`${compObj.name} hasClearIcon not specified, focus comp`, async () => {\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component label={label} />\n          <button class=\"testclickmebutton\">Click me</button>\n        </RootEnvironmentProvider>\n      );\n\n      const inputElement = container.querySelector('input')!;\n\n      act(() => {\n        inputElement.focus();\n      });\n\n      const clearIconSelector = '[title=\"Clear\"]';\n      // Get the parent element of the svg icon which contains\n      // all the event listeners\n      const clearIcon = container.querySelector(clearIconSelector);\n      expect(clearIcon, 'clear icon not found').null;\n    });\n  });\n\n  afterEach(cleanup);\n});\n"],"names":["useState","_jsxs","_jsx","InputPassword","InputText","matchTranslationBundle","render","RootEnvironmentProvider","act","expect","cleanup"],"mappings":"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"}