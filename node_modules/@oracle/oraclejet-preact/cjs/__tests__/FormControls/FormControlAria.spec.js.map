{"version":3,"file":"FormControlAria.spec.js","sources":["../../../../src/__tests__/FormControls/FormControlAria.spec.tsx"],"sourcesContent":["import { act, cleanup, getByRole, getByText, render } from '@testing-library/preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport { expect } from 'chai';\nimport { InputPassword } from '../../UNSAFE_InputPassword';\nimport type { RootEnvironment } from '../../UNSAFE_Environment';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { ComponentProps } from 'preact';\nimport { ValueUpdateDetail } from '../../utils/UNSAFE_valueUpdateDetail';\nimport { InputText } from '../../UNSAFE_InputText';\nimport { NumberInputText } from '../../UNSAFE_NumberInputText';\nimport { TextArea } from '../../UNSAFE_TextArea';\nimport { TextAreaAutosize } from '../../UNSAFE_TextAreaAutosize';\nimport { SelectMultiple } from '../../UNSAFE_SelectMultiple';\nimport { SelectSingle } from '../../UNSAFE_SelectSingle';\n\ntype DemoInputPasswordProps = Pick<\n  ComponentProps<typeof InputPassword>,\n  | 'ariaDescribedBy'\n  | 'assistiveText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'label'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\n\nfunction DemoInputPassword({\n  ariaDescribedBy,\n  assistiveText,\n  isDisabled,\n  isReadonly,\n  label = 'Test Label',\n  messages,\n  userAssistanceDensity\n}: DemoInputPasswordProps) {\n  const [value, setValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <InputPassword\n        ariaDescribedBy={ariaDescribedBy}\n        assistiveText={assistiveText}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        messages={messages}\n        onInput={handleInput}\n        userAssistanceDensity={userAssistanceDensity}\n        value={value}\n      />\n    </>\n  );\n}\n\ntype DemoInputTextProps = Pick<\n  ComponentProps<typeof InputText>,\n  | 'ariaDescribedBy'\n  | 'assistiveText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'label'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\n\nfunction DemoInputText({\n  ariaDescribedBy,\n  assistiveText,\n  isDisabled,\n  isReadonly,\n  label = 'Test Label',\n  messages,\n  userAssistanceDensity\n}: DemoInputTextProps) {\n  const [value, setValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <InputText\n        ariaDescribedBy={ariaDescribedBy}\n        assistiveText={assistiveText}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        messages={messages}\n        onInput={handleInput}\n        userAssistanceDensity={userAssistanceDensity}\n        value={value}\n      />\n    </>\n  );\n}\n\ntype DemoTextAreaProps = Pick<\n  ComponentProps<typeof TextArea>,\n  | 'ariaDescribedBy'\n  | 'assistiveText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'label'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\n\nfunction DemoTextArea({\n  ariaDescribedBy,\n  assistiveText,\n  isDisabled,\n  isReadonly,\n  label = 'Test Label',\n  messages,\n  userAssistanceDensity\n}: DemoTextAreaProps) {\n  const [value, setValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <TextArea\n        ariaDescribedBy={ariaDescribedBy}\n        assistiveText={assistiveText}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        messages={messages}\n        onInput={handleInput}\n        userAssistanceDensity={userAssistanceDensity}\n        value={value}\n      />\n    </>\n  );\n}\n\ntype DemoTextAreaAutosizeProps = Pick<\n  ComponentProps<typeof TextAreaAutosize>,\n  | 'ariaDescribedBy'\n  | 'assistiveText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'label'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\n\nfunction DemoTextAreaAutosize({\n  ariaDescribedBy,\n  assistiveText,\n  isDisabled,\n  isReadonly,\n  label = 'Test Label',\n  messages,\n  userAssistanceDensity\n}: DemoTextAreaAutosizeProps) {\n  const [value, setValue] = useState('hello');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <TextAreaAutosize\n        ariaDescribedBy={ariaDescribedBy}\n        assistiveText={assistiveText}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        messages={messages}\n        onInput={handleInput}\n        userAssistanceDensity={userAssistanceDensity}\n        value={value}\n      />\n    </>\n  );\n}\n\ntype DemoSelectMultipleProps = Pick<\n  ComponentProps<typeof SelectMultiple>,\n  | 'ariaDescribedBy'\n  | 'assistiveText'\n  | 'itemText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'label'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\n\nfunction DemoSelectMultiple({\n  ariaDescribedBy,\n  assistiveText,\n  itemText = 'label',\n  isDisabled,\n  isReadonly,\n  label = 'Test Label',\n  messages,\n  userAssistanceDensity\n}: DemoSelectMultipleProps) {\n  const noOp = () => {};\n  return (\n    <>\n      <SelectMultiple\n        ariaDescribedBy={ariaDescribedBy}\n        assistiveText={assistiveText}\n        itemText={itemText}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        messages={messages}\n        onCommit={noOp}\n        userAssistanceDensity={userAssistanceDensity}\n      />\n    </>\n  );\n}\ntype DemoSelectSingleProps = Pick<\n  ComponentProps<typeof SelectSingle>,\n  | 'ariaDescribedBy'\n  | 'assistiveText'\n  | 'itemText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'label'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\nfunction DemoSelectSingle({\n  ariaDescribedBy,\n  assistiveText,\n  itemText = 'label',\n  isDisabled,\n  isReadonly,\n  label = 'Test Label',\n  messages,\n  userAssistanceDensity\n}: DemoSelectSingleProps) {\n  const noOp = () => {};\n  return (\n    <>\n      <SelectSingle\n        ariaDescribedBy={ariaDescribedBy}\n        assistiveText={assistiveText}\n        itemText={itemText}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        messages={messages}\n        onCommit={noOp}\n        userAssistanceDensity={userAssistanceDensity}\n      />\n    </>\n  );\n}\n\ntype DemoNumberInputTextProps = Pick<\n  ComponentProps<typeof NumberInputText>,\n  | 'ariaDescribedBy'\n  | 'assistiveText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'label'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\n\nfunction DemoNumberInputText({\n  ariaDescribedBy,\n  assistiveText,\n  isDisabled,\n  isReadonly,\n  label = 'Test Label',\n  messages,\n  userAssistanceDensity\n}: DemoNumberInputTextProps) {\n  const [value, setValue] = useState('123');\n  const handleInput = useCallback((detail: ValueUpdateDetail<string>) => {\n    setValue(detail.value ?? '');\n  }, []);\n  return (\n    <>\n      <NumberInputText\n        ariaDescribedBy={ariaDescribedBy}\n        assistiveText={assistiveText}\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        messages={messages}\n        onInput={handleInput}\n        userAssistanceDensity={userAssistanceDensity}\n        value={value}\n      />\n    </>\n  );\n}\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n\nconst componentList: { name: string; component: any }[] = [\n  { name: 'InputPassword', component: DemoInputPassword },\n  { name: 'InputText', component: DemoInputText },\n  { name: 'NumberInputText', component: DemoNumberInputText },\n  { name: 'TextArea', component: DemoTextArea },\n  { name: 'TextAreaAutosize', component: DemoTextAreaAutosize },\n  { name: 'SelectMultiple', component: DemoSelectMultiple },\n  { name: 'SelectSingle', component: DemoSelectSingle }\n];\n\nconst fieldLabelList: { name: string; component: any }[] = [\n  { name: 'InputText', component: DemoInputText },\n  { name: 'NumberInputText', component: DemoNumberInputText },\n  { name: 'TextArea', component: DemoTextArea },\n  { name: 'TextAreaAutosize', component: DemoTextAreaAutosize },\n  { name: 'SelectMultiple', component: DemoSelectMultiple },\n  { name: 'SelectSingle', component: DemoSelectSingle }\n];\n\ndescribe('Form Controls - WAI-Aria', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: adds aria-describedby correctly for ua container when enabled`, async () => {\n      const assistiveText = 'test ua content';\n      const { container, getByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component assistiveText={assistiveText} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      // fireEvent.focus and userEvent.click does not seem to work here\n      act(() => {\n        inputElement?.focus();\n      });\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const uaContainer = container.querySelector(`#${ariaDescribedby}`);\n      const helpTextElement = getByText(assistiveText);\n\n      expect(uaContainer).not.to.be.null;\n      expect(uaContainer?.contains(helpTextElement)).to.be.true;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: removes aria-describedby correctly for ua container when disabled`, async () => {\n      const assistiveText = 'test ua content';\n      const { container, queryByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component assistiveText={assistiveText} isDisabled={true} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n      expect(inputElement?.disabled).to.be.true;\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const helpTextElement = queryByText(assistiveText);\n\n      expect(ariaDescribedby).to.be.null;\n      expect(helpTextElement).to.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: removes aria-describedby correctly for ua container when readonly`, async () => {\n      const assistiveText = 'test ua content';\n      const { container, queryByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component assistiveText={assistiveText} isReadonly={true} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      const helpTextElement = queryByText(assistiveText);\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n\n      if (\n        compObj.name === 'InputText' ||\n        compObj.name === 'SelectMultiple' ||\n        compObj.name === 'SelectSingle' ||\n        compObj.name === 'NumberInputText' ||\n        compObj.name === 'TextAreaAutosize'\n      ) {\n        expect(inputElement).to.be.null;\n        expect(helpTextElement).to.be.null;\n      } else {\n        expect(inputElement).to.not.be.null;\n        expect(inputElement?.readOnly).to.be.true;\n        expect(ariaDescribedby).to.be.null;\n        expect(helpTextElement).to.be.null;\n      }\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: adds aria-describedby correctly for ua container for efficient density and with help text`, async () => {\n      const assistiveText = 'test ua content';\n      const { container, getByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component assistiveText={assistiveText} userAssistanceDensity=\"efficient\" />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      // fireEvent.focus and userEvent.click does not seem to work here\n      act(() => {\n        inputElement?.focus();\n      });\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const uaContainer = container.querySelector(`#${ariaDescribedby}`);\n      const helpTextElement = getByText(assistiveText);\n\n      expect(uaContainer).not.to.be.null;\n      expect(uaContainer?.contains(helpTextElement)).to.be.true;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: adds aria-invalid when showing error message`, async () => {\n      const messageText = 'message description';\n      const { container, getByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component\n            messages={[{ detail: messageText, severity: 'error', summary: messageText }]}\n          />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const ariaInvalid = inputElement?.getAttribute('aria-invalid');\n      const uaContainer = container.querySelector(`#${ariaDescribedby}`);\n      const messageElement = getByText(messageText);\n\n      expect(ariaInvalid).to.equal('true');\n      expect(uaContainer?.contains(messageElement)).to.be.true;\n    })\n  );\n\n  fieldLabelList.forEach((compObj) =>\n    it(`${compObj.name}: adds field label to the error message`, async () => {\n      const messageText = 'message description';\n      const label = 'field label';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component\n            label={label}\n            messages={[{ detail: messageText, severity: 'error', summary: messageText }]}\n          />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const uaContainer = container.querySelector<HTMLDivElement>(`#${ariaDescribedby}`);\n      expect(uaContainer).not.to.be.null;\n\n      const messageElement = getByRole(uaContainer as HTMLDivElement, 'alert');\n      const labelContextElement = getByText(messageElement, label);\n      expect(labelContextElement).to.not.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: does not add aria-invalid when showing warning message`, async () => {\n      const messageText = 'message description';\n      const { container, getByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component\n            messages={[{ detail: messageText, severity: 'warning', summary: messageText }]}\n          />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const ariaInvalid = inputElement?.getAttribute('aria-invalid');\n      const uaContainer = container.querySelector(`#${ariaDescribedby}`);\n      const messageElement = getByText(messageText);\n\n      expect(ariaInvalid).to.be.null;\n      expect(uaContainer?.contains(messageElement)).to.be.true;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: does not add aria-invalid when showing confirmation message`, async () => {\n      const messageText = 'message description';\n      const { container, getByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component\n            messages={[{ detail: messageText, severity: 'confirmation', summary: messageText }]}\n          />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const ariaInvalid = inputElement?.getAttribute('aria-invalid');\n      const uaContainer = container.querySelector(`#${ariaDescribedby}`);\n      const messageElement = getByText(messageText);\n\n      expect(ariaInvalid).to.be.null;\n      expect(uaContainer?.contains(messageElement)).to.be.true;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: does not add aria-invalid when showing info message`, async () => {\n      const messageText = 'message description';\n      const { container, getByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component\n            messages={[{ detail: messageText, severity: 'info', summary: messageText }]}\n          />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      const ariaInvalid = inputElement?.getAttribute('aria-invalid');\n      const uaContainer = container.querySelector(`#${ariaDescribedby}`);\n      const messageElement = getByText(messageText);\n\n      expect(ariaInvalid).to.be.null;\n      expect(uaContainer?.contains(messageElement)).to.be.true;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: does not add aria-invalid when showing no message`, async () => {\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component messages={[]} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      const ariaInvalid = inputElement?.getAttribute('aria-invalid');\n      expect(ariaInvalid).to.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: adds aria-describedby from ariaDescribedBy prop along with the UA id when enabled`, async () => {\n      const assistiveText = 'test ua content';\n      const { container, getByText } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component ariaDescribedBy=\"testId\" assistiveText={assistiveText} />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n\n      // fireEvent.focus and userEvent.click does not seem to work here\n      act(() => {\n        inputElement?.focus();\n      });\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      // first id will be UA's and second will be the one from the prop\n      const [uaId, propId] = ariaDescribedby?.split(' ') ?? [];\n      const uaContainer = container.querySelector(`#${uaId}`);\n      const helpTextElement = getByText(assistiveText);\n\n      expect(uaContainer).not.to.be.null;\n      expect(uaContainer?.contains(helpTextElement)).to.be.true;\n\n      expect(propId).equals('testId');\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: adds aria-describedby from only prop when disabled`, async () => {\n      const assistiveText = 'test ua content';\n      const { container } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component\n            ariaDescribedBy=\"testId\"\n            assistiveText={assistiveText}\n            isDisabled={true}\n          />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement = container.querySelector(inputElementType);\n      expect(inputElement).not.to.be.null;\n      expect(inputElement?.disabled).to.be.true;\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      expect(ariaDescribedby).equals('testId');\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: adds aria-describedby from only prop when readonly`, async () => {\n      const assistiveText = 'test ua content';\n      const { container, queryByRole } = render(\n        <RootEnvironmentProvider environment={env}>\n          <compObj.component\n            ariaDescribedBy=\"testId\"\n            assistiveText={assistiveText}\n            isReadonly={true}\n          />\n        </RootEnvironmentProvider>\n      );\n\n      const inputElementType = compObj.name.startsWith('Text') ? 'textarea' : 'input';\n      const inputElement =\n        compObj.name === 'InputText' ||\n        compObj.name === 'SelectMultiple' ||\n        compObj.name === 'SelectSingle' ||\n        compObj.name === 'NumberInputText' ||\n        compObj.name === 'TextAreaAutosize'\n          ? queryByRole('textbox')\n          : container.querySelector(inputElementType);\n\n      const ariaDescribedby = inputElement?.getAttribute('aria-describedby');\n      expect(ariaDescribedby).equals('testId');\n    })\n  );\n\n  afterEach(cleanup);\n});\n"],"names":["useState","useCallback","_jsx","_Fragment","InputPassword","InputText","TextArea","TextAreaAutosize","SelectMultiple","SelectSingle","NumberInputText","matchTranslationBundle","render","RootEnvironmentProvider","expect","act","getByRole","getByText","cleanup"],"mappings":"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"}