{"version":3,"file":"FormControlPrefixSuffix.spec.js","sources":["../../../../src/__tests__/FormControls/FormControlPrefixSuffix.spec.tsx"],"sourcesContent":["import { act, cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { ComponentProps } from 'preact';\nimport { InputText } from '../../UNSAFE_InputText';\nimport { NumberInputText } from '../../UNSAFE_NumberInputText';\n\ntype DemoInputTextProps = Pick<\n  ComponentProps<typeof InputText>,\n  'isDisabled' | 'isReadonly' | 'label' | 'labelEdge' | 'prefix' | 'suffix' | 'value'\n>;\n\nconst noOp = () => {};\n\nfunction DemoInputText({\n  isDisabled,\n  isReadonly,\n  label,\n  labelEdge,\n  prefix,\n  suffix,\n  value\n}: DemoInputTextProps) {\n  return (\n    <>\n      <InputText\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        labelEdge={labelEdge}\n        onInput={noOp}\n        prefix={prefix}\n        suffix={suffix}\n        value={value}\n      />\n    </>\n  );\n}\n\ntype DemoNumberInputTextProps = Pick<\n  ComponentProps<typeof NumberInputText>,\n  'isDisabled' | 'isReadonly' | 'label' | 'labelEdge' | 'prefix' | 'suffix' | 'value'\n>;\n\nfunction DemoNumberInputText({\n  isDisabled,\n  isReadonly,\n  label,\n  labelEdge,\n  prefix,\n  suffix,\n  value\n}: DemoNumberInputTextProps) {\n  return (\n    <>\n      <NumberInputText\n        isDisabled={isDisabled}\n        isReadonly={isReadonly}\n        label={label}\n        labelEdge={labelEdge}\n        onInput={noOp}\n        prefix={prefix}\n        suffix={suffix}\n        value={value}\n      />\n    </>\n  );\n}\n\nconst componentList: { name: string; component: any }[] = [\n  { name: 'InputText', component: DemoInputText },\n  { name: 'NumberInputText', component: DemoNumberInputText }\n];\n\ndescribe('Form Controls - Prefix/Suffix', () => {\n  function testPrefixIsThere(inputElement: HTMLElement | null, queryTextLength: number) {\n    const element = inputElement?.previousElementSibling;\n    expect(element?.tagName.toUpperCase).not.equal('LABEL');\n    expect(queryTextLength).to.equal(1);\n  }\n\n  function testPrefixIsNotThere(inputElement: HTMLElement | null, queryTextLength: number) {\n    const element = inputElement?.previousElementSibling;\n    expect(element?.tagName.toUpperCase()).equal('LABEL');\n    expect(queryTextLength).to.equal(0);\n  }\n\n  function testSuffixIsThere(inputElement: HTMLElement | null, queryTextLength: number) {\n    const element = inputElement?.nextElementSibling;\n    expect(element).to.be.not.null;\n    expect(queryTextLength).to.equal(1);\n  }\n\n  function testSuffixIsNotThere(inputElement: HTMLElement | null, queryTextLength: number) {\n    const element = inputElement?.nextElementSibling;\n    expect(element).to.be.null;\n    expect(queryTextLength).to.equal(0);\n  }\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: prefix is there with value`, () => {\n      const text = '+234';\n      const { container, queryAllByText } = render(\n        <compObj.component prefix={text} value=\"123412\" label=\"with prefix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is there* when there is a value and there is no focus.\n      testPrefixIsThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: prefix is not there no value and no focus`, () => {\n      const text = '+234';\n      const { container, queryAllByText } = render(\n        <compObj.component prefix={text} label=\"no prefix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is not there* when there is not a value and there is no focus.\n      testPrefixIsNotThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: prefix is there no value and focus`, () => {\n      const text = '+234';\n      const { container, queryAllByText } = render(\n        <compObj.component prefix={text} label=\"with prefix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n\n      // copied from previous test that says: fireEvent.focus and userEvent.click does not seem to work here\n      act(() => {\n        inputElement?.focus();\n      });\n\n      // prefix/suffix *is there* when there is focus\n      testPrefixIsThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: prefix empty string is not there with value`, () => {\n      const text = '';\n      const { container } = render(\n        <compObj.component prefix={text} value=\"123412\" label=\"no prefix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is not there* if it is ''.\n      // test when there is a value and there is no focus since that is when it would normally be there.\n      const element = inputElement?.previousElementSibling;\n      expect(element?.tagName.toUpperCase()).equal('LABEL');\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: suffix is there with value`, () => {\n      const text = 'lbs';\n      const { container, queryAllByText } = render(\n        <compObj.component suffix={text} value=\"123412\" label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is there* when there is a value and there is no focus.\n      testSuffixIsThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: suffix is not there no value and no focus`, () => {\n      const text = 'lbs';\n      const { container, queryAllByText } = render(\n        <compObj.component suffix={text} label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is not there* when there is not a value and there is no focus.\n      testSuffixIsNotThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: suffix is there no value and focus`, () => {\n      const text = 'lbs';\n      const { container, queryAllByText } = render(\n        <compObj.component suffix={text} label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n\n      // copied from previous test that says: fireEvent.focus and userEvent.click does not seem to work here\n      act(() => {\n        inputElement?.focus();\n      });\n\n      // prefix/suffix *is there* when there is focus\n      testSuffixIsThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: suffix empty string is not there with value`, () => {\n      const text = '';\n      const { container } = render(\n        <compObj.component suffix={text} value=\"lbs\" label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is not there* if it is ''.\n      // test when there is a value and there is no focus since that is when a prefix/suffix\n      // that isn't the empty string would be there.\n      const element = inputElement?.nextElementSibling;\n      expect(element).to.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: disabled, prefix is not there no value`, () => {\n      const text = '+234';\n      const { container, queryAllByText } = render(\n        <compObj.component prefix={text} isDisabled={true} label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is not there* when there is not a value and there is no focus.\n      testPrefixIsNotThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    // disabled has no suffix dom.\n    it(`${compObj.name}: disabled with value (disabled is text-only)`, () => {\n      const text = 'lbs';\n      const { container, queryAllByText } = render(\n        <compObj.component suffix={text} value=\"123412\" isDisabled={true} label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      testSuffixIsNotThere(inputElement, queryAllByText(text).length);\n      expect(inputElement?.value).to.equal(`123412 lbs`);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: disabled, suffix is not there no value and no focus`, () => {\n      const text = 'lbs';\n      const { container, queryAllByText } = render(\n        <compObj.component suffix={text} isDisabled={true} label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).not.to.be.null;\n      // prefix/suffix *is not there* when there is not a value and there is no focus.\n      testSuffixIsNotThere(inputElement, queryAllByText(text).length);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: readonly suffix text`, () => {\n      const text = 'lbs';\n      const value = '123412';\n      const expectedReadonlytext = `${value} ${text}`;\n      const { container, queryByText } = render(\n        <compObj.component suffix={text} value={value} isReadonly={true} label=\"with suffix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).to.be.null;\n\n      // test style\n      const foundReadonlyText = queryByText(expectedReadonlytext);\n      expect(foundReadonlyText).not.to.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: readonly prefix text`, () => {\n      const text = '+234';\n      const value = '123412';\n      const expectedReadonlytext = `${text} ${value}`;\n      const { container, queryByText } = render(\n        <compObj.component prefix={text} value={value} isReadonly={true} label=\"with prefix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).to.be.null;\n\n      // test style\n      const foundReadonlyText = queryByText(expectedReadonlytext);\n      expect(foundReadonlyText).not.to.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: readonly prefix text no value`, () => {\n      const text = '+234';\n      const unexpectedReadonlytext = text;\n      const { container, queryByText } = render(\n        <compObj.component prefix={text} isReadonly={true} label=\"with prefix\" />\n      );\n\n      const inputElement = container.querySelector('input');\n      expect(inputElement).to.be.null;\n\n      // shouldn't have any text. make sure we do not accidentally render prefix\n      const foundReadonlyText = queryByText(unexpectedReadonlytext);\n      expect(foundReadonlyText).to.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: prefix aria-labelledby, no label`, () => {\n      const text = '+234';\n      const { container, queryByText } = render(\n        <compObj.component prefix={text} value=\"123412\" labelEdge=\"none\" label=\"with prefix\" />\n      );\n      const inputElement = container.querySelector('input');\n      // prefix/suffix *is there* when there is a value and there is no focus.\n      // get the prefix dom and get the id from it.\n      // test prefixId is there on expected dom\n      const prefixDom = queryByText(text);\n      expect(prefixDom).not.to.be.null;\n      const prefixId = prefixDom?.parentElement?.id;\n      expect(prefixId?.endsWith('prefix'), `prefixId ends with 'prefix'`).to.be.true;\n\n      // test input's aria-labelledby includes the prefixId\n      const ariaLB = inputElement?.getAttribute('aria-labelledby');\n      expect(ariaLB).not.to.be.null;\n      expect(ariaLB?.includes(prefixId as string)).to.be.true;\n      // should be the only one since there is no label.\n      expect(ariaLB).to.equal(prefixId);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: suffix aria-labelledby, no label`, () => {\n      const text = 'lbs';\n      const { container, queryByText } = render(\n        <compObj.component suffix={text} value=\"123412\" labelEdge=\"none\" label=\"with suffix\" />\n      );\n      const inputElement = container.querySelector('input');\n      // prefix/suffix *is there* when there is a value and there is no focus.\n      const suffixDom = queryByText(text);\n      expect(suffixDom).not.to.be.null;\n      const suffixId = suffixDom?.parentElement?.id;\n      expect(suffixId?.endsWith('suffix'), `suffixId ends with 'suffix'`).to.be.true;\n\n      const ariaLB = inputElement?.getAttribute('aria-labelledby');\n      expect(ariaLB).not.to.be.null;\n      // get suffix dom. get id. get aria-labelledby off of input and see if suffix id is there.\n      expect(ariaLB?.includes(suffixId as string)).to.be.true;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    it(`${compObj.name}: suffix aria-labelledby, has label`, () => {\n      const text = 'lbs';\n      const { container, queryByText } = render(\n        <compObj.component suffix={text} value=\"123412\" label=\"Weight\" />\n      );\n      const inputElement = container.querySelector('input');\n\n      const suffixDom = queryByText(text);\n      // id is on the div, not the span around the text.\n      const suffixId = suffixDom?.parentElement?.id;\n      const ariaLB = inputElement?.getAttribute('aria-labelledby');\n\n      // get aria-labelledby off of input and see if suffix id is there, but not first.\n      const suffixIndex = (ariaLB as string).indexOf(suffixId as string);\n      expect(suffixIndex).to.not.equal(0);\n      expect(suffixIndex).to.not.equal(-1);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    // we render both labelId and suffixId in aria-labelledby on input so that the screenreader will read both.\n    it(`${compObj.name}: suffix aria-labelledby, has labelid`, () => {\n      const text = 'lbs';\n      const { container, queryByText } = render(\n        <compObj.component suffix={text} value=\"123412\" label=\"Weight\" />\n      );\n      const inputElement = container.querySelector('input');\n\n      const labelDom = queryByText('Weight');\n      expect(labelDom?.tagName.toUpperCase()).equals('LABEL');\n      const labelId = labelDom?.id;\n      expect(labelId).to.not.be.undefined;\n      expect(labelId).to.not.equal('');\n\n      const ariaLB = inputElement?.getAttribute('aria-labelledby');\n      // get suffix dom. get id. get aria-labelledby off of input and see if suffix id is there.\n      // see if label id is there too.\n      const labelIdIndex = (ariaLB as string).indexOf(labelId as string);\n      expect(labelIdIndex).to.equal(0);\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    // we do not render aria-labelledby on the input if there is no prefix or suffix.\n    // even if there is a label. the label's for/id combox is enough in that case.\n    it(`${compObj.name}: no prefix/suffix, no aria-labelledby, has label`, () => {\n      const { container, queryByText } = render(\n        <compObj.component value=\"123412\" label=\"Weight\" />\n      );\n      const inputElement = container.querySelector('input');\n\n      const labelDom = queryByText('Weight');\n      expect(labelDom?.tagName.toUpperCase()).equals('LABEL');\n      const labelId = labelDom?.id;\n      expect(labelId).to.not.be.undefined;\n      expect(labelId).to.not.equal('');\n\n      const ariaLB = inputElement?.getAttribute('aria-labelledby');\n      expect(ariaLB).to.be.null;\n    })\n  );\n\n  componentList.forEach((compObj) =>\n    // we do not render aria-labelledby on the input if there is no prefix or suffix.\n    // even if there is a label. the label's for/id combox is enough in that case.\n    it(`${compObj.name}: prefix and suffix, aria-labelledby, no label`, () => {\n      const { container, queryByText } = render(\n        <compObj.component\n          prefix=\"+++\"\n          suffix=\"lbs\"\n          value=\"123412\"\n          labelEdge=\"none\"\n          label=\"with prefix suffix\"\n        />\n      );\n      const inputElement = container.querySelector('input');\n      const suffixDom = queryByText('lbs');\n      // id is on the div, not the span around the text.\n      const suffixId = suffixDom?.parentElement?.id;\n      const prefixDom = queryByText('+++');\n      // id is on the div, not the span around the text.\n      const prefixId = prefixDom?.parentElement?.id;\n\n      // get aria-labelledby off of input and see if prefix id is there and suffix id is there,\n      // and that there are only two.\n      const ariaLB = inputElement?.getAttribute('aria-labelledby');\n      const hasSuffixId = (ariaLB as string).includes(suffixId as string);\n      expect(hasSuffixId).to.be.true;\n\n      const hasPrefixId = (ariaLB as string).includes(prefixId as string);\n      expect(hasPrefixId).to.be.true;\n\n      // splice the string and make sure there are only two.\n      const numIds = ariaLB?.trim().split(/\\s+/).length;\n      expect(numIds).to.equal(2);\n    })\n  );\n\n  afterEach(cleanup);\n});\n\n// skip the color tests in jest, only run it in karma mocha\nif (typeof jest === 'undefined') {\n  describe('Form Controls - Prefix/Suffix Color', () => {\n    componentList.forEach((compObj) =>\n      it(`${compObj.name}: prefix color is same as input text`, () => {\n        const text = '+234';\n        const { container, queryByText } = render(\n          <compObj.component prefix={text} value=\"123412\" label=\"with prefix\" />\n        );\n\n        const inputElement = container.querySelector('input');\n        // test style\n        const textColor = window\n          .getComputedStyle(queryByText(text) as Element)\n          .getPropertyValue('color');\n        const inputColor = window\n          .getComputedStyle(inputElement as Element)\n          .getPropertyValue('color');\n        expect(textColor).equals(inputColor);\n      })\n    );\n\n    componentList.forEach((compObj) =>\n      it(`${compObj.name}: suffix color is same as input text`, () => {\n        const text = 'lbs';\n        const { container, queryByText } = render(\n          <compObj.component suffix={text} value=\"123412\" label=\"with suffix\" />\n        );\n\n        const inputElement = container.querySelector('input');\n        // test style\n        const textColor = window\n          .getComputedStyle(queryByText(text) as Element)\n          .getPropertyValue('color');\n        const inputColor = window\n          .getComputedStyle(inputElement as Element)\n          .getPropertyValue('color');\n        expect(textColor).equals(inputColor);\n      })\n    );\n\n    componentList.forEach((compObj) =>\n      it(`${compObj.name}: prefix color is not the same as input text when focused`, () => {\n        const text = '+234';\n        const { container, queryByText } = render(\n          <compObj.component prefix={text} value=\"123412\" label=\"with prefix\" />\n        );\n\n        const inputElement = container.querySelector('input');\n        act(() => {\n          inputElement?.focus();\n        });\n        // test style\n        const textColor = window\n          .getComputedStyle(queryByText(text) as Element)\n          .getPropertyValue('color');\n        const inputColor = window\n          .getComputedStyle(inputElement as Element)\n          .getPropertyValue('color');\n        expect(textColor).equals(inputColor);\n      })\n    );\n\n    componentList.forEach((compObj) =>\n      it(`${compObj.name}: suffix color is not the same as input text when focused`, () => {\n        const text = 'lbs';\n        const { container, queryByText } = render(\n          <compObj.component suffix={text} value=\"123412\" label=\"with suffix\" />\n        );\n\n        const inputElement = container.querySelector('input');\n        act(() => {\n          inputElement?.focus();\n        });\n        // test style\n        const textColor = window\n          .getComputedStyle(queryByText(text) as Element)\n          .getPropertyValue('color');\n        const inputColor = window\n          .getComputedStyle(inputElement as Element)\n          .getPropertyValue('color');\n        expect(textColor).equals(inputColor);\n      })\n    );\n\n    afterEach(cleanup);\n  });\n}\n"],"names":["_jsx","_Fragment","InputText","NumberInputText","expect","render","act","cleanup"],"mappings":"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"}