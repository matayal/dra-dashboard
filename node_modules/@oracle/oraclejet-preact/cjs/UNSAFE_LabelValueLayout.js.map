{"version":3,"file":"UNSAFE_LabelValueLayout.js","sources":["../../src/UNSAFE_LabelValueLayout/LabelValueLayout.tsx","../../src/UNSAFE_LabelValueLayout/index.ts"],"sourcesContent":["import { classNames } from '../utils/UNSAFE_classNames';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { ComponentChildren, JSX } from 'preact';\nimport { Flex } from '../UNSAFE_Flex';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { sizeToCSS, Size } from '../utils/UNSAFE_size';\n\nconst labelSlotStyles = {\n  base: cssProps`${{\n    display: 'block',\n    flexGrow: '0',\n    flexShrink: '1',\n    boxSizing: 'border-box'\n  }}`,\n  start: cssProps`${{\n    paddingInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-form-layout-start-edge-label-to-value-padding)'\n  }}`,\n\n  top: cssProps`${{\n    flexBasis: '100%',\n    width: '100%',\n    maxWidth: '100%',\n    paddingBlockEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-form-layout-top-edge-label-to-value-padding)'\n  }}`,\n\n  topPureReadonly: cssProps`${{\n    paddingBlockEnd: 0\n  }}`\n};\n\nconst labelInnerStyles = {\n  // base is labelEdge 'top'\n  base: cssProps`${{\n    display: 'block',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-label-color)',\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-label-font-size)',\n    lineHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-label-line-height)',\n    width: '100%'\n  }}`,\n  start: cssProps`${{\n    display: 'inline-flex',\n    alignItems: 'center'\n  }}`,\n  startNotPureReadonly: cssProps`${{\n    minHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-height)'\n  }}`,\n  // TODO: Use Text Component instead of CSS\n  noWrap: cssProps`${{\n    whiteSpace: 'nowrap',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    textOverflow: 'ellipsis'\n  }}`\n};\n\nconst valueSlotStyles = cssProps`${{\n  flex: '1 1 100%',\n  width: '100%',\n  maxWidth: '100%'\n}}`;\n\ntype Props = {\n  /**\n   * Label content of the layout\n   */\n  label?: ComponentChildren;\n  /**\n   * Defines how the label is going to be positioned\n   */\n  labelEdge?: 'start' | 'top';\n  /**\n   * Defines the label width for labelEdge 'start' ('top' is always 100%)\n   */\n  labelStartWidth?: Size;\n  /**\n   * Value content of the layout\n   */\n  children: ComponentChildren;\n};\n\nexport const LabelValueLayout = ({\n  label,\n  labelEdge,\n  children,\n  labelStartWidth = '33%'\n}: Props) => {\n  const width = sizeToCSS(labelStartWidth);\n  const valueWidth = `calc(100% - ${width})`;\n  const labelStyles: JSX.CSSProperties =\n    labelEdge === 'start' ? { flexBasis: width, width: width, maxWidth: width } : {};\n  const valueStyles: JSX.CSSProperties =\n    labelEdge === 'start' ? { flexBasis: valueWidth, width: valueWidth, maxWidth: valueWidth } : {};\n\n  const { isFormLayout, isReadonly: isFormReadonly, labelWrapping } = useFormContext();\n  const { isReadonly } = useFormFieldContext();\n  const isPureReadonly = (isFormLayout && isFormReadonly) || (!isFormLayout && isReadonly);\n  const labelStyleClasses = classNames([\n    labelSlotStyles.base,\n    labelEdge === 'start' && labelSlotStyles.start,\n    // labelEdge === 'start' && isPureReadonly && labelSlotStyles.startReadonly,\n    // labelEdge === 'start' && !isPureReadonly && labelSlotStyles.startNotPureReadonly,\n    labelEdge === 'top' && labelSlotStyles.top,\n    labelEdge === 'top' && isPureReadonly && labelSlotStyles.topPureReadonly\n  ]);\n  const labelInnerClasses = classNames([\n    labelInnerStyles.base,\n    labelEdge === 'start' && labelInnerStyles.start,\n    labelEdge === 'start' && !isPureReadonly && labelInnerStyles.startNotPureReadonly,\n    labelWrapping === 'truncate' && labelInnerStyles.noWrap\n  ]);\n\n  return (\n    <Flex wrap=\"wrap\" align=\"start\">\n      <div class={labelStyleClasses} style={labelStyles}>\n        <div class={labelInnerClasses}>{label}</div>\n      </div>\n      <div class={valueSlotStyles} style={valueStyles}>\n        {children}\n      </div>\n    </Flex>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { LabelValueLayout } from './LabelValueLayout';\n"],"names":["labelSlotStyles","labelInnerStyles","valueSlotStyles","LabelValueLayout","label","labelEdge","children","labelStartWidth","width","sizeToCSS","valueWidth","isFormLayout","isReadonly","isFormReadonly","labelWrapping","useFormContext","useFormFieldContext","isPureReadonly","base","start","top","topPureReadonly","noWrap","_jsxs","Flex","Object","assign","wrap","align","_jsx","class","labelStyleClasses","style","labelStyles","labelInnerClasses","valueStyles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAAA,eAAA,GAAA;QAAA,QAAA;SAAA,QAAA;OAAA,QAAA;;AAAA,CAAA,CAAA;AAuBA,MAAAC,gBAAA,GAAA;;QAAA,QAAA;SAAA,QAAA;wBAAA,SAAA;;;AAAA,CAAA,CAAA;AAyBA,MAAAC,eAAA,GAAA,QAAA,CAAA;AAyBA,MAAAC,gBAAA,GAAA,CAAA;EAAAC,KAAA;EAAAC,SAAA;EAAAC,QAAA;AAAAC,EAAAA,eAAA,GAAA,KAAA;AAAA,CAAA,KAAA;AAME,EAAA,MAAAC,KAAA,GAAAC,2BAAA,CAAAF,eAAA,CAAA,CAAA;AACA,EAAA,MAAAG,UAAA,GAAA,CAAAF,YAAAA,EAAAA,KAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;EAMA,MAAA;IAAAG,YAAA;AAAAC,IAAAA,UAAA,EAAAC,cAAA;AAAAC,IAAAA,aAAAA;AAAA,GAAA,GAAAC,0CAAA,EAAA,CAAA;EACA,MAAA;AAAAH,IAAAA,UAAAA;AAAA,GAAA,GAAAI,oDAAA,EAAA,CAAA;EACA,MAAAC,cAAA,GAAAN,YAAA,IAAAE,cAAA,IAAA,CAAAF,YAAA,IAAAC,UAAA,CAAA;mDAEEZ,eAAA,CAAAkB,MACAb,SAAA,KAAA,OAAA,IAAAL,eAAA,CAAAmB;;AAGAd,EAAAA,SAAA,KAAA,KAAA,IAAAL,eAAA,CAAAoB,KACAf,SAAA,KAAA,KAAA,IAAAY,cAAA,IAAAjB,eAAA,CAAAqB;mDAGApB,gBAAA,CAAAiB,MACAb,SAAA,KAAA,OAAA,IAAAJ,gBAAA,CAAAkB,0FAEAL,aAAA,KAAA,UAAA,IAAAb,gBAAA,CAAAqB;AAGF,EAAA,OAAAC,eAAA,CAAAC,SAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,IAAAA,IAAA,EAAA,MAAA;AAAAC,IAAAA,KAAA,EAAA,OAAA;AAAA,GAAA,EAAA;IAAAtB,QAAA,EAAA,CAAAuB,cAAA,CAAA,KAAA,EAAAJ,MAAA,CAAAC,MAAA,CAAA;AAAAI,MAAAA,KAAA,EAAAC,iBAAA;AAAAC,MAAAA,KAAA,EAAAC,WAAAA;AAAA,KAAA,EAAA;MAAA3B,QAAA,EAAAuB,cAAA,CAAA,KAAA,EAAAJ,MAAA,CAAAC,MAAA,CAAA;AAAAI,QAAAA,KAAA,EAAAI,iBAAAA;AAAA,OAAA,EAAA;AAAA5B,QAAAA,QAAA,EAAAF,KAAAA;AAAA,OAAA,CAAA,CAAA;KAAA,CAAA,CAAA,EAAAyB,cAAA,CAAA,KAAA,EAAAJ,MAAA,CAAAC,MAAA,CAAA;AAAAI,MAAAA,KAAA,EAAA5B,eAAA;AAAA8B,MAAAA,KAAA,EAAAG,WAAAA;AAAA,KAAA,EAAA;AAAA7B,MAAAA,QAAA,EAAAA,QAAAA;AAAA,KAAA,CAAA,CAAA,CAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAUF;;AC1HA;;;;;;AAMG;;;;;;;"}