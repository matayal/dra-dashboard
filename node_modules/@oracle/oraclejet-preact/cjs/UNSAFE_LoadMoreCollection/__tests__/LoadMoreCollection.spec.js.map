{"version":3,"file":"LoadMoreCollection.spec.js","sources":["../../../../src/UNSAFE_LoadMoreCollection/__tests__/LoadMoreCollection.spec.tsx"],"sourcesContent":["import { useRef, useState } from 'preact/hooks';\nimport { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { DataState, ItemContext, Range, Metadata } from '../../UNSAFE_Collection';\nimport { LoadMoreCollection } from '../LoadMoreCollection';\n\ntype Employee = {\n  id: string;\n  name: string;\n};\n\ntype Props = {\n  data: { data: Employee; metadata: Metadata<string> }[];\n};\nfunction TestComponent({ data }: Props) {\n  const rootRef = useRef(null);\n  const [dataState, setDataState] = useState<DataState<string, Employee>>({\n    offset: 0,\n    data: data.slice(0, 25),\n    totalSize: data.length,\n    sizePrecision: 'exact'\n  });\n\n  const loadRange = (range: Range) => {\n    const startIndex = range.offset;\n    const endIndex = startIndex + range.count;\n    const newDataState = {\n      ...dataState,\n      offset: startIndex,\n      data: data.slice(startIndex, endIndex)\n    };\n    setDataState(newDataState);\n  };\n\n  const getConfig = () => {\n    return {\n      scroller: () => {\n        return rootRef.current;\n      }\n    };\n  };\n\n  return (\n    <div style=\"height: 200px;overflow: auto\" ref={rootRef}>\n      <LoadMoreCollection data={dataState} viewportConfig={getConfig()} onLoadRange={loadRange}>\n        {(context: ItemContext<{ data: Employee; metadata: Metadata<string> }>) => (\n          <div\n            key={context.data.metadata.key}\n            className=\"item\"\n            style={{ height: '20px', padding: '0.75rem' }}>\n            {context.data.data.name}\n          </div>\n        )}\n      </LoadMoreCollection>\n    </div>\n  );\n}\n\nfunction populateData(count: number): Employee[] {\n  const data: Employee[] = [];\n  for (let i = 0; i < count; i++) {\n    data.push({ id: 'i' + i, name: 'Employee ' + i });\n  }\n  return data;\n}\n\ndescribe('Test VirtualizedCollection component', () => {\n  beforeEach(() => {\n    if (!window.IntersectionObserver) {\n      // IntersectionObserver isn't available in test environment\n      const MockIntersectionObserver = jest.fn();\n      MockIntersectionObserver.mockReturnValue({\n        observe: () => null,\n        unobserve: () => null,\n        disconnect: () => null\n      });\n\n      Object.defineProperty(global, 'IntersectionObserver', {\n        writable: true,\n        configurable: true,\n        value: MockIntersectionObserver\n      });\n    }\n  });\n\n  it('initial render', async function () {\n    const data = populateData(100);\n    const dataMetadata: { data: Employee; metadata: Metadata<string> }[] = data.map((data) => {\n      return { data: data, metadata: { key: data.id } };\n    });\n    const content = render(<TestComponent data={dataMetadata}></TestComponent>);\n    const emps = await content.queryAllByText('Employee', { exact: false });\n    expect(emps.length).eq(25);\n  });\n});\n"],"names":["useRef","useState","_jsx","LoadMoreCollection","render","expect"],"mappings":"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"}