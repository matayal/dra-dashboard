{"version":3,"file":"Menu-4b48a08e.js","sources":["../../src/UNSAFE_Menu/useMenuCurrentKey.ts","../../src/UNSAFE_Menu/menuUtils.ts","../../src/UNSAFE_Menu/MenuContainer.tsx","../../src/UNSAFE_Menu/DropdownMenu.tsx","../../src/UNSAFE_Menu/useMenuSwipe.ts","../../src/UNSAFE_Menu/SheetMenu.tsx","../../src/UNSAFE_Menu/Menu.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useCallback } from 'preact/hooks';\n\nimport { CurrentKeyDetail } from '../UNSAFE_Collection';\n\n/**\n * Hook for handling current key update due to user interaction including keyboard navigation.\n *\n * @param keyExtractor function to extract the key based on the provided element\n * @param getPrevKey function to get the previous key based on the current key\n * @param getNextKey function to get the next key based on the current key\n * @param getFirstVisibleKey function to get the key of the first available item\n * @param getLastVisibleKey function to get the key of the last available item\n * @param currentKey the current key\n * @param onChange function to invoke if the current key has changed\n * @returns\n */\nexport function useMenuCurrentKey(\n  keyExtractor: (element: HTMLElement) => string | null,\n  getPrevKey: () => string | null,\n  getNextKey: () => string | null,\n  getFirstVisibleKey: () => string | null,\n  getLastVisibleKey: () => string | null,\n  currentKey?: string,\n  onChange?: (detail: CurrentKeyDetail<string>) => void\n) {\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (onChange) {\n        // TODO: support horizontal layout on icon menu (left/right arrow key)\n        if (event.key === 'ArrowDown' && !event.shiftKey) {\n          const nextKey = getNextKey();\n          if (nextKey && currentKey != nextKey) {\n            onChange({ value: nextKey });\n          }\n          event.preventDefault();\n        } else if (event.key === 'ArrowUp' && !event.shiftKey) {\n          const prevKey = getPrevKey();\n          if (prevKey && currentKey != prevKey) {\n            onChange({ value: prevKey });\n          }\n          event.preventDefault();\n        } else if (event.key === 'Home') {\n          const firstKey = getFirstVisibleKey();\n          if (firstKey && currentKey != firstKey) {\n            onChange({ value: firstKey });\n          }\n          event.preventDefault();\n        } else if (event.key === 'End') {\n          const lastKey = getLastVisibleKey();\n          if (lastKey && currentKey != lastKey) {\n            onChange({ value: lastKey });\n          }\n          event.preventDefault();\n        }\n      }\n    },\n    [currentKey, getNextKey, getPrevKey, onChange, getFirstVisibleKey, getLastVisibleKey]\n  );\n  //Capture needed since usePress stop propagation, what produces not triggering this event.\n  //We can't stop propagation here, because if we do that, usePress onClick will not be triggered.\n  const onClickCapture = useCallback(\n    (event: MouseEvent) => {\n      if (onChange && !event.shiftKey) {\n        const nextKey = keyExtractor(event.target as HTMLElement);\n        if (nextKey && currentKey != nextKey) {\n          onChange({ value: nextKey });\n        }\n      }\n    },\n    [currentKey, keyExtractor, onChange]\n  );\n\n  const currentKeyProps = onChange == null ? {} : { onClickCapture, onKeyDown };\n  return { currentKeyProps };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\n\nimport { Menu } from './Menu';\n\n/**\n * Returns the key from the item element\n */\nconst getKey = (item: HTMLElement) => {\n  // Key is set on data-oj-menu-item-key on each menuItem. To get this key from the\n  // the actual menuItem we need to do a kebab to camel-case conversion.\n  return item.dataset['ojMenuItemKey'];\n};\n\n/**\n * A helper function that return the key of the first available item.\n */\nexport const getFirstVisibleKey = (root: HTMLElement | null) => {\n  if (root) {\n    const firstItem = root.querySelector('[data-oj-menu-item-key]');\n    if (firstItem) {\n      const key = getKey(firstItem as HTMLElement);\n      if (key) {\n        return key;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * A helper function that return the key of the last available item.\n */\nexport const getLastVisibleKey = (root: HTMLElement | null) => {\n  if (root) {\n    const items = root.querySelectorAll('[data-oj-menu-item-key]');\n    const lastItem = items[items.length - 1];\n    if (lastItem) {\n      const key = getKey(lastItem as HTMLElement);\n      if (key) {\n        return key;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * A helper function that returns the key of the previous or the next item\n * given the specified current key\n */\nexport const getPrevNextKey = (root: HTMLElement | null, isPrev: boolean, currentKey?: string) => {\n  return (): string | null => {\n    if (root) {\n      const items = Array.from(root.querySelectorAll('[data-oj-menu-item-key]')) as HTMLElement[];\n      const currentKeyIndex = items.findIndex((item) => getKey(item) === currentKey);\n      let nextIndex = currentKeyIndex + (isPrev ? -1 : 1);\n      const itemsLastIndex = items.length - 1;\n      if (nextIndex < 0) {\n        nextIndex = itemsLastIndex;\n      }\n      if (nextIndex > itemsLastIndex) {\n        nextIndex = 0;\n      }\n      return getKey(items[nextIndex]) || null;\n    }\n    return null;\n  };\n};\n\n/**\n * A helper function to get the key from an element\n */\nexport const keyExtractor = (element: HTMLElement): string | null => {\n  const item = element.closest('[data-oj-menu-item-key]');\n  if (item) {\n    const key = getKey(item as HTMLElement);\n    return key === undefined ? null : key;\n  }\n  return null;\n};\n\n/**\n * Function to get the corresponding keyboard behavior to close the menu.\n */\nexport const getKeyboardCloseProps = (onClose: ComponentProps<typeof Menu>['onClose']) => {\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      onClose?.({ reason: 'dismissed' });\n      event.preventDefault(); //TODO: Revisit this since we should let focus be at its natural flow, quick solution for now to focus correct item in main use case\n    } else if (event.key === 'Escape') {\n      onClose?.({ reason: 'dismissed' });\n    }\n  };\n  return { onKeyDown };\n};\n\n/**\n * Function to get the corresponding specific behavior for clicking/touching down menuContainer\n */\nexport const getMenuPointerDown = () => {\n  const onPointerDown = (event: PointerEvent) => {\n    //We just want to prevent default when element that was\n    //pressed down was not a menu item. Using this flag removes issues\n    //related to focus visibilty on \"long press\"\n    const nextKey = keyExtractor(event.target as HTMLElement);\n    if (!nextKey) {\n      event.preventDefault();\n    }\n  };\n  return { onPointerDown };\n};\n\nexport type MenuValueUpdateDetail<T> = {\n  previousValue?: T;\n  value: T;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\n\nimport { CurrentKeyDetail } from '../UNSAFE_Collection';\n\nimport { useCollectionFocusRing } from '../hooks/PRIVATE_useCollectionFocusRing';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\nimport { Menu } from './Menu';\nimport { MenuContext } from './MenuContext';\nimport { useMenuCurrentKey } from './useMenuCurrentKey';\nimport {\n  getPrevNextKey,\n  getFirstVisibleKey,\n  keyExtractor,\n  getLastVisibleKey,\n  getKeyboardCloseProps,\n  getMenuPointerDown\n} from './menuUtils';\n\ntype MenuProps = ComponentProps<typeof Menu>;\n\ntype MenuContainerProps = Omit<MenuProps, 'isOpen' | 'anchorRef'> & {\n  display: 'sheet' | 'dropdown';\n};\n\nconst styles = {\n  menuContainer: cssProps`${{\n    outlineStyle: 'none'\n  }}`,\n  dropdownMenuContainer: cssProps`${{\n    paddingTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    paddingBottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)'\n  }}`,\n  sheetMenuContainer: cssProps`${{\n    paddingTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-5x)',\n    paddingBottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)'\n  }}`\n};\n\nexport const MenuContainer = ({\n  children,\n  onClose,\n  accessibleLabel,\n  initialFocus = 'menu',\n  display\n}: MenuContainerProps) => {\n  const menuContainerRef = useRef<HTMLDivElement | null>(null);\n  const initialFocusRef = useRef(initialFocus);\n\n  const [currentKey, setCurrentKey] = useState<string | undefined>();\n\n  const [possibleFocus, setPossibleFocus] = useState<'pending' | 'menu' | 'firstItem'>('pending');\n\n  const changeKey = useCallback((detail: CurrentKeyDetail<string>) => {\n    setCurrentKey(detail.value);\n    setPossibleFocus('firstItem');\n  }, []);\n\n  const [showFocusRing, focusRingProps] = useCollectionFocusRing(\n    (elem: Element | null) => {\n      return !!menuContainerRef.current?.contains(elem);\n    },\n    ['ArrowUp', 'ArrowDown'],\n    (elem: Element) => {\n      const nextKey = keyExtractor(elem as HTMLElement);\n      return !!nextKey;\n    }\n  );\n\n  const { currentKeyProps } = useMenuCurrentKey(\n    (element) => keyExtractor(element),\n    getPrevNextKey(menuContainerRef.current, true, currentKey),\n    getPrevNextKey(menuContainerRef.current, false, currentKey),\n    () => getFirstVisibleKey(menuContainerRef.current),\n    () => getLastVisibleKey(menuContainerRef.current),\n    currentKey,\n    changeKey\n  );\n\n  useEffect(() => {\n    const menuContainer = menuContainerRef.current;\n\n    if (menuContainer) {\n      if (initialFocusRef.current === 'menu') {\n        // At this point floating has visibility set as hidden, so also menuContainer. Settimeout added so menuContainer\n        // is visible at that point and can be focused\n        setTimeout(() => {\n          menuContainer.focus();\n        }, 0);\n        setPossibleFocus('menu');\n      } else {\n        const firstItemKey = getFirstVisibleKey(menuContainerRef.current);\n        if (firstItemKey) {\n          changeKey({ value: firstItemKey });\n        } else {\n          setPossibleFocus('menu');\n        }\n      }\n    }\n  }, [initialFocusRef, changeKey]);\n\n  // TODO - Reuse a dropdown component instead of creating floating by ourselves.\n  return (\n    <div\n      ref={menuContainerRef}\n      tabIndex={possibleFocus === 'firstItem' ? -1 : 0}\n      role=\"menu\"\n      aria-label={accessibleLabel}\n      class={classNames([styles.menuContainer, styles[`${display}MenuContainer`]])}\n      {...mergeProps(\n        focusRingProps,\n        currentKeyProps,\n        getMenuPointerDown(),\n        getKeyboardCloseProps(onClose)\n      )}>\n      <MenuContext.Provider\n        value={{\n          onClose,\n          currentKey,\n          showFocusRing\n        }}>\n        {children}\n      </MenuContext.Provider>\n    </div>\n  );\n};\n","import { ComponentProps, useCallback, useRef } from 'preact/compat';\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { Floating } from '../UNSAFE_Floating';\n\nimport { MenuContainer } from './MenuContainer';\nimport { Menu } from './Menu';\nimport { useOutsideClick } from '../hooks/UNSAFE_useOutsideClick';\n\nconst styles = {\n  // TODO: Handle vertical and horizontal overflow. Get rid of maxWidth on a next drop so horizontal and also vertical flow is handled correctly.\n  // It's hard to relay just in css, we might need to relay on some kind of observer. Maybe should be handled on Floating/Dropdown component.\n  base: cssProps`${{\n    maxWidth: '90vw',\n    width: 'max-content',\n    borderRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-border-radius-lg)',\n    boxShadow: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-dropdown-box-shadow)',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-content)'\n  }}`\n};\n\nexport const DropdownMenu = ({\n  anchorRef,\n  onClose,\n  ...dropdownMenuProps\n}: ComponentProps<typeof Menu>) => {\n  const floatingRef = useRef<HTMLElement | null>(null);\n\n  const useOutsideClickHandler = useCallback(\n    (e: MouseEvent) => {\n      onClose?.({ reason: 'outsideClick', target: e.target as Element });\n    },\n    [onClose]\n  );\n\n  useOutsideClick({\n    ref: [floatingRef],\n    handler: useOutsideClickHandler\n  });\n\n  return (\n    <Floating\n      class={styles.base}\n      ref={floatingRef}\n      anchorRef={anchorRef}\n      placement=\"bottom-start\"\n      offsetValue={{\n        mainAxis: 4, //TODO: stable does not have a 4px gap, so we'll need to figure out how to make this themable.\n        crossAxis: 0\n      }}>\n      <div\n        style={{\n          minWidth: `${\n            anchorRef.current && anchorRef.current.offsetWidth > MENU_MIN_WIDTH\n              ? anchorRef.current.offsetWidth\n              : MENU_MIN_WIDTH\n          }px`\n        }}>\n        <MenuContainer {...{ onClose, ...dropdownMenuProps }} display=\"dropdown\" />\n      </div>\n    </Floating>\n  );\n};\n\nconst MENU_MIN_WIDTH = 200;\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useRef, useCallback } from 'preact/hooks';\n\n/*\n  threshold: Minimal threshold required before recognizing\n  tolerance: A tolerance value which allows the user to move their finger about a length measured in pixels.\n  This allows the swipe gesture to be triggered more easily since a User might not move their finger\n  in a straight line.\n*/\ntype SwipeOptions = {\n  threshold?: number;\n  maximumTime?: number;\n  tolerance?: number;\n  isDisabled?: boolean;\n};\n\ntype SwipeInfo = {\n  direction: 'down';\n};\n\ntype SwipeState = {\n  pointerDownId: number | null;\n  startTime: number | null;\n  prevpageX: number;\n  prevpageY: number;\n  elementScrollTop: number;\n};\n/*This \"private\" hook will live until we end up stating a final decision on useSwipe hook.\nFor that hook to work, element that use it has to set touch-action:none;, since pointer events\nare canceled once a touch action is going to be handled by the browser. This works for most\nof the components that don't scroll. But if the component scroll, there is a need for the browser to \nhandle scroll which is imposible with a hook just using pointer events.\n*/\nexport function useMenuSwipe(\n  onSwipe: (e: SwipeInfo) => void,\n  { threshold = 10, maximumTime = 300, tolerance = 50, isDisabled = false }: SwipeOptions = {\n    threshold: 10,\n    maximumTime: 300,\n    tolerance: 50,\n    isDisabled: false\n  }\n): { swipeProps: Record<string, any> } {\n  const ref = useRef<SwipeState>({\n    pointerDownId: 0,\n    startTime: null,\n    prevpageX: 0,\n    prevpageY: 0,\n    elementScrollTop: 0\n  });\n\n  const clearSwipe = useCallback(() => {\n    ref.current = {\n      pointerDownId: null,\n      startTime: 0,\n      prevpageX: 0,\n      prevpageY: 0,\n      elementScrollTop: 0\n    };\n  }, []);\n\n  const onTouchStart = useCallback(\n    (e: TouchEvent) => {\n      const touchobj = e.changedTouches[0];\n      if (!ref.current.pointerDownId) {\n        ref.current = {\n          pointerDownId: touchobj.identifier,\n          startTime: e.timeStamp,\n          prevpageX: touchobj.pageX,\n          prevpageY: touchobj.pageY,\n          elementScrollTop: (e.currentTarget as HTMLElement).scrollTop\n        };\n      } else {\n        clearSwipe();\n      }\n    },\n    [clearSwipe]\n  );\n\n  const onTouchEnd = useCallback(\n    (ev: TouchEvent) => {\n      const touchobj = ev.changedTouches[0];\n      if (touchobj.identifier === ref.current.pointerDownId) {\n        if (ref.current.startTime && ev.timeStamp - ref.current.startTime < maximumTime) {\n          if (\n            touchobj.pageY - ref.current.prevpageY > threshold &&\n            Math.abs(touchobj.pageX - ref.current.prevpageX) <= tolerance &&\n            ref.current.elementScrollTop === 0\n          ) {\n            onSwipe?.({ direction: 'down' });\n          }\n        }\n      }\n      // state would be reset to its original state whether swipe is completed or cancelled\n      clearSwipe();\n    },\n    [threshold, onSwipe, clearSwipe, maximumTime, tolerance]\n  );\n\n  const swipeProps = isDisabled\n    ? {}\n    : {\n        /** event handlers to spread on the target element. */\n        onTouchStart,\n        onTouchEnd,\n        ontouchcancel: clearSwipe\n      };\n\n  return {\n    swipeProps\n  };\n}\n","import { ComponentProps } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport { useCallback, useEffect } from 'preact/hooks';\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useMenuSwipe } from './useMenuSwipe';\nimport useModal from '../UNSAFE_Modal/hooks/useModal';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\nimport { Menu } from './Menu';\nimport { MenuContainer } from './MenuContainer';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children'>;\n\nconst styles = {\n  modalWrapper: cssProps`${{\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-z-index-popup)'\n  }}`,\n  modalContainer: cssProps`${{\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }}`,\n  sheetMenuContainerWrapper: cssProps`${{\n    borderRadius: '16px 16px 0 0',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-content)',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    maxHeight: 'calc(100% - 96px)',\n    overflowY: 'auto',\n    overscrollBehaviorY: 'contain',\n    touchAction: 'pan-y',\n    userSelect: 'none'\n  }}`,\n  modalBackdrop: cssProps`${{\n    position: 'absolute',\n    top: '0',\n    right: '0',\n    bottom: '0',\n    left: '0',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-scrim-color)'\n  }}`\n};\n\nconst ModalWrapper = ({ children }: IntrinsicProps) => (\n  <div class={styles.modalWrapper}>{children}</div>\n);\nconst ModalContainer = forwardRef<HTMLDivElement, IntrinsicProps>(({ children }, ref) => (\n  <div class={styles.modalContainer} ref={ref}>\n    {children}\n  </div>\n));\n//ModalBackdrop on modal folder not setting the style on oj-c enviroment\n//Creating it here so we don't see that issue\nconst ModalBackdrop = () => <div class={styles.modalBackdrop} />;\n\nexport const SheetMenu = ({\n  onClose,\n  ...menuProps\n}: Omit<ComponentProps<typeof Menu>, 'anchorRef'>) => {\n  useEffect(() => {\n    // We set the overflow body as hidden when mounted and revert to original overflow value when is\n    // unmounted. This is done to don't allow backgound being scrolled\n    // This will be handled by modal/popup when ready\n    const initialOverflow = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.body.style.overflow = initialOverflow;\n    };\n  }, []);\n\n  const dismissHandler = useCallback(() => {\n    onClose?.({ reason: 'dismissed' });\n  }, [onClose]);\n\n  const { modalRef } = useModal({ isOpen: true, onBackdropClick: dismissHandler });\n  //TODO: Use useSwipe when it works on components that could scroll.\n  const { swipeProps } = useMenuSwipe(dismissHandler);\n\n  // TODO: For now we are mimicking current modal but using a \"different position setting\" (using absolute positioning instead of flex).\n  // Have to use modal/popup component directly instead doing this composition when that component could satisfy our requirments.\n  return (\n    <ModalWrapper>\n      <ModalBackdrop></ModalBackdrop>\n      <ModalContainer ref={modalRef}>\n        <div class={styles.sheetMenuContainerWrapper} {...swipeProps}>\n          <MenuContainer {...{ ...menuProps, onClose }} display=\"sheet\"></MenuContainer>\n        </div>\n      </ModalContainer>\n    </ModalWrapper>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { RefObject, ComponentChildren } from 'preact';\n\nimport { Layer } from '../UNSAFE_Layer';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\n\nimport { DropdownMenu } from './DropdownMenu';\nimport { SheetMenu } from './SheetMenu';\n\ntype MenuProps = {\n  /**\n   * Trigger element reference\n   */\n  anchorRef: RefObject<HTMLElement>;\n  /**\n   * Set of menu groups or menu items that menu will hold.Even though you could pass other type of children,\n   * is strongly recommended to use MenuItem, menu groups or components that return this type of components\n   * since passing other type of components children produces not desirable behaviors.\n   */\n  children: ComponentChildren;\n  /**\n   * Specifies if menu is opened.\n   */\n  isOpen?: boolean;\n  /**\n   * Property that triggers a callback when menu is supposed to be closed.\n   */\n  onClose?: (detail: CloseDetail) => void;\n  /**\n   * Specifies some screen reader text. Set it to create an accesible menu.\n   */\n  accessibleLabel?: string;\n  /**\n   *  Determines focus behavior when the menu is opened.\n   */\n  initialFocus?: 'menu' | 'firstItem';\n};\n\ntype CloseDetail =\n  | {\n      //dismissed represents dismissing the menu using esc,tap and on mobile swiping and taping backdrop\n      reason: 'dismissed' | 'itemAction';\n    }\n  | {\n      reason: 'outsideClick';\n      target: Element;\n    };\n\nconst { deviceType } = getClientHints();\nconst isMobile = deviceType === 'phone';\nexport const Menu = ({ isOpen, anchorRef, ...menuProps }: MenuProps) => {\n  // TODO - Reuse a dropdown component instead of creating floating by ourselves.\n  return !isOpen ? null : (\n    <Layer logicalParentRef={anchorRef}>\n      {isMobile ? <SheetMenu {...menuProps} /> : <DropdownMenu {...{ anchorRef, ...menuProps }} />}\n    </Layer>\n  );\n};\n"],"names":["useCallback","styles","MenuContainer","children","onClose","accessibleLabel","initialFocus","display","menuContainerRef","useRef","initialFocusRef","changeKey","detail","setCurrentKey","value","_a","current","contains","elem","nextKey","keyExtractor","currentKeyProps","useMenuCurrentKey","element","getPrevNextKey","currentKey","getFirstVisibleKey","getLastVisibleKey","menuContainer","firstItemKey","_jsx","Object","assign","ref","tabIndex","possibleFocus","role","class","classNames","mergeProps","focusRingProps","getMenuPointerDown","getKeyboardCloseProps","MenuContext","Provider","DropdownMenu","floatingRef","useOutsideClickHandler","e","reason","target","useOutsideClick","handler","mainAxis","crossAxis","minWidth","anchorRef","offsetWidth","MENU_MIN_WIDTH","dropdownMenuProps","ModalWrapper","modalWrapper","ModalContainer","forwardRef","modalContainer","ModalBackdrop","modalBackdrop","SheetMenu","menuProps","__rest","dismissHandler","modalRef","useModal","isOpen","onBackdropClick","_jsxs","sheetMenuContainerWrapper","swipeProps","getClientHints","Layer"],"mappings":"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"}