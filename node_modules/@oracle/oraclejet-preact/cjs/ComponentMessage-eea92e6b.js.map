{"version":3,"file":"ComponentMessage-eea92e6b.js","sources":["../../src/UNSAFE_ComponentMessage/ComponentMessage.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport {\n  isSeverityIconNeeded,\n  MessageStartIcon,\n  MessageSummary,\n  severityBasedStyleClass\n} from '../PRIVATE_Message';\nimport { BundleType } from '../resources/nls/bundle';\nimport { HiddenAccessible } from '../UNSAFE_HiddenAccessible';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\nconst baseStyles = cssProps`${{\n  boxSizing: 'border-box',\n  // TODO: Use Flex Component instead of CSS\n  display: 'flex',\n  flexWrap: 'wrap'\n}}`;\n\n/**\n * A type for a single component message\n */\nexport type ComponentMessageItem = {\n  summary?: string;\n  detail?: string;\n  severity?: 'confirmation' | 'error' | 'info' | 'warning';\n};\n\n/**\n * Props for the Message Component\n */\ntype Props = {\n  /**\n   * The error detail text for the component message\n   */\n  detail?: ComponentMessageItem['detail'];\n\n  /**\n   * The label of the field which is showing this error\n   */\n  fieldLabel?: string;\n\n  /**\n   * The severity of the component message\n   */\n  severity?: ComponentMessageItem['severity'];\n};\n\n/**\n * The component that renders an individual message for inline component messaging.\n */\nexport function ComponentMessage({ detail, fieldLabel, severity = 'error' }: Props) {\n  const classes = classNames([baseStyles, severityBasedStyleClass(severity, 'inline')]);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const severityTranslations = {\n    confirmation: translations.confirmation(),\n    error: translations.error(),\n    info: translations.info(),\n    warning: translations.warn()\n  };\n\n  return (\n    <div class={classes} role=\"alert\" aria-atomic=\"true\">\n      {fieldLabel && <HiddenAccessible>{fieldLabel}</HiddenAccessible>}\n      {isSeverityIconNeeded(severity) && (\n        <MessageStartIcon\n          variant=\"inline\"\n          severity={severity}\n          translations={severityTranslations}\n        />\n      )}\n      {/* We will be using the MessageSummary component, as this aligns with the style required */}\n      <MessageSummary variant=\"inline\" text={detail} />\n    </div>\n  );\n}\n"],"names":["baseStyles","ComponentMessage","detail","fieldLabel","severity","classes","classNames","severityBasedStyleClass","translations","useTranslationBundle","severityTranslations","confirmation","error","info","warning","warn"],"mappings":";;;;;;;;;;;;;;;AAmBA,MAAAA,UAAA,GAAA,UAAA,CAAA;AAoCA;;AAEG;;AACH,SAAAC,gBAAA,CAAA;EAAAC,MAAA;EAAAC,UAAA;AAAAC,EAAAA,QAAA,GAAA,OAAA;AAAA,CAAA,EAAA;AACE,EAAA,MAAAC,OAAA,GAAAC,qBAAA,CAAA,CAAAN,UAAA,EAAAO,oCAAA,CAAAH,QAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,MAAAI,YAAA,GAAAC,sDAAA,CAAA,0BAAA,CAAA,CAAA;AACA,EAAA,MAAAC,oBAAA,GAAA;AACEC,IAAAA,YAAA,EAAAH,YAAA,CAAAG,YAAA,EADF;AAEEC,IAAAA,KAAA,EAAAJ,YAAA,CAAAI,KAAA,EAFF;AAGEC,IAAAA,IAAA,EAAAL,YAAA,CAAAK,IAAA,EAHF;IAIEC,OAAA,EAAAN,YAAA,CAAAO,IAAA,EAAA;GAJF,CAAA;;;;;;;;;;;;;;;;;AAqBF;;;;;;;"}