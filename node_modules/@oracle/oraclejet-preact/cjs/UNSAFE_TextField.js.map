{"version":3,"file":"UNSAFE_TextField.js","sources":["../../src/UNSAFE_TextField/ReadonlyTextField.tsx","../../src/UNSAFE_TextField/TextFieldContent.tsx","../../src/UNSAFE_TextField/StyledTextField.tsx","../../src/UNSAFE_TextField/TextField.tsx","../../src/UNSAFE_TextField/MaxLengthLiveRegion.tsx","../../src/UNSAFE_TextField/index.ts"],"sourcesContent":["import { ComponentChildren } from 'preact';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { getFormControlClasses } from './FormControlUtils';\nimport { getReadonlyClasses, getTextFieldClasses, loadingStyles } from './TextFieldUtils';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Size } from '../utils/UNSAFE_size';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\ntype DivProps = HTMLAttributesSignalExcluded<HTMLDivElement>;\ntype UAProps = {\n  inlineUserAssistance?: ComponentChildren;\n};\ntype InnerOuterClassNamesProps = {\n  outerClassNames?: string;\n  innerClassNames?: string;\n};\n\ntype StartTopLabelReadonlyTextFieldProps = Omit<DivProps, 'label'> &\n  UAProps &\n  InnerOuterClassNamesProps & {\n    label?: ComponentChildren;\n    labelEdge?: 'start' | 'top';\n    labelStartWidth?: Size;\n  };\n\nconst StartTopLabelReadonlyTextField = ({\n  outerClassNames,\n  innerClassNames,\n  label,\n  labelEdge,\n  labelStartWidth,\n  inlineUserAssistance,\n  children,\n  ...props\n}: StartTopLabelReadonlyTextFieldProps) => {\n  return (\n    <div {...props} class={outerClassNames}>\n      <LabelValueLayout label={label} labelEdge={labelEdge} labelStartWidth={labelStartWidth}>\n        <div class={innerClassNames}>{children}</div>\n      </LabelValueLayout>\n      {inlineUserAssistance}\n    </div>\n  );\n};\n\ntype InsideLabelReadonlyTextFieldProps = DivProps & UAProps & InnerOuterClassNamesProps;\nconst InsideLabelReadonlyTextField = ({\n  outerClassNames,\n  innerClassNames,\n  inlineUserAssistance,\n  children,\n  ...props\n}: InsideLabelReadonlyTextFieldProps) => {\n  return (\n    <div {...props} class={outerClassNames}>\n      <div class={innerClassNames}>{children}</div>\n      {inlineUserAssistance}\n    </div>\n  );\n};\n\nexport type StyleProps = UAProps & {\n  label?: ComponentChildren;\n  labelEdge?: 'inside' | 'start' | 'top';\n  variant?: 'textarea';\n};\n\ntype Props = StyledComponentProps<'div', StyleProps>;\n\nexport const ReadonlyTextField = ({ label, labelEdge, children, variant, ...props }: Props) => {\n  const { isFormLayout, isReadonly: isReadonlyForm } = useFormContext();\n  const { isLoading } = useFormFieldContext();\n  const hasInsideLabel = label !== undefined && labelEdge === 'inside';\n\n  // TODO: We need to re-evaluate how we use CSS multi-classing to our VDOM components\n  const formControlClassNames = getFormControlClasses(hasInsideLabel);\n  const textFieldClassNames = getTextFieldClasses(true);\n  const readonlyClassNames = getReadonlyClasses(\n    isFormLayout && !isReadonlyForm,\n    hasInsideLabel,\n    variant\n  );\n  const outerClassNames = classNames([formControlClassNames, textFieldClassNames]);\n  const innerClassNames = classNames([readonlyClassNames, isLoading && loadingStyles]);\n\n  if (label !== undefined && (labelEdge === 'start' || labelEdge === 'top')) {\n    return (\n      <StartTopLabelReadonlyTextField\n        outerClassNames={outerClassNames}\n        innerClassNames={innerClassNames}\n        label={label}\n        labelEdge={labelEdge}\n        {...props}>\n        {children}\n      </StartTopLabelReadonlyTextField>\n    );\n  }\n\n  return (\n    <InsideLabelReadonlyTextField\n      outerClassNames={outerClassNames}\n      innerClassNames={innerClassNames}\n      {...props}>\n      {label}\n      {children}\n    </InsideLabelReadonlyTextField>\n  );\n};\n","import { cssProps } from '@oracle/oraclejet-cssprops';\nimport { ComponentChildren, Ref } from 'preact';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Flex } from '../UNSAFE_Flex';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { loadingStyles } from './TextFieldUtils';\n\ntype VariantProps = {\n  contentVariant?: 'input' | 'textarea';\n  statusVariant?: 'error' | 'none' | 'warning';\n  styleVariant?: 'default' | 'embedded';\n};\n\ntype Props = VariantProps & {\n  mainContent?: ComponentChildren;\n  insideLabel?: ComponentChildren;\n  startContent?: ComponentChildren;\n  endContent?: ComponentChildren;\n  resize?: 'horizontal' | 'vertical' | 'both';\n  rootRef?: Ref<HTMLDivElement>;\n};\n\n// TODO: replace this with var(--oj-button-height) once it is available\nconst ojButtonHeight = '2.75rem';\n// TODO: replace this with var(--oj-button-sm-height) once it is available\nconst ojButtonSmHeight = '2.25rem';\n// TODO: replace this with var(--oj-button-icon-size) once it is available\nconst ojButtonIconSize = 'var(--oj-c-PRIVATE-DO-NOT-USE-core-icon-size-lg)';\n// TODO: replace this with var(--oj-button-sm-icon-size) once it is available\nconst ojButtonSmIconSize = '1.25rem';\n\nconst textFieldContainerStyles = {\n  base: cssProps`${{\n    position: 'relative',\n    boxSizing: 'border-box',\n    // TODO: Use Flex component instead of CSS\n    display: 'flex',\n    alignItems: 'center',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    transitionProperty: 'border-color',\n    transitionDuration: '.1s',\n    transitionTimingFunction: 'linear'\n  }}`,\n  defaultStyles: cssProps`${{\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-bg-color)',\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-color)',\n    borderRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-radius)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-height)'\n  }}`,\n  embeddedStyles: cssProps`${{\n    backgroundColor: 'inherit',\n    height: '100%',\n    width: '100%'\n  }}`,\n  showBorder: cssProps`${{\n    borderStyle: 'solid',\n    borderWidth: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-width)'\n  }}`,\n  textarea: cssProps`${{\n    height: 'auto'\n  }}`,\n  labelInside: cssProps`${{\n    minHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-inside-edge-height)'\n  }}`,\n  focused: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-color-focus)',\n    boxShadow: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-box-shadow-focus)'\n  }}`,\n  resize: {\n    both: cssProps`${{\n      resize: 'both'\n    }}`,\n    horizontal: cssProps`${{\n      resize: 'horizontal'\n    }}`,\n    vertical: cssProps`${{\n      resize: 'vertical'\n    }}`\n  },\n  disabled: cssProps`${{\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-bg-color-disabled)',\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-border-color-disabled)'\n  }}`,\n  error: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-danger-3)'\n  }}`,\n  warning: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-warning-3)'\n  }}`\n};\n\nconst textFieldStartContentStyles = {\n  base: cssProps`${{\n    marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-text-field-icon-to-edge-padding)',\n    fontSize: ojButtonSmIconSize\n  }}`,\n  labelInside: cssProps`${{\n    fontSize: ojButtonIconSize\n  }}`,\n  disabled: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`\n};\n\nconst textFieldMiddleStyles = {\n  base: cssProps`${{\n    position: 'relative',\n    // TODO: Use Flex component instead of CSS\n    display: 'inline-flex',\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box'\n  }}`,\n  textarea: cssProps`${{\n    // The 1px is needed to make sure that the textarea element's scrollbar doesn't overlap the focus drop shadow\n    paddingInlineEnd: '1px',\n    // flexDirection 'column' is used to layout out the remaining counter below the textarea.\n    flexDirection: 'column'\n  }}`\n};\n\nconst textFieldEndContentStyles = {\n  base: cssProps`${{\n    paddingInlineEnd: `calc((var(--oj-c-PRIVATE-DO-NOT-USE-text-field-height) - ${ojButtonSmHeight} - 2px) / 2)`\n  }}`,\n  labelInside: cssProps`${{\n    paddingInlineEnd: `calc((var(--oj-c-PRIVATE-DO-NOT-USE-text-field-inside-edge-height) - ${ojButtonHeight} - 2px) / 2)`\n  }}`\n};\n\n// Renders the oj-text-field-container dom which includes the\n// start, middle (where the inside label and inputElem goes),\n// and end pieces of the form component.\n// This does not include user assistance because that is rendered outside the\n// oj-text-field-container; that is rendered in the TextField component.\nexport const TextFieldContent = ({\n  contentVariant = 'input',\n  insideLabel,\n  mainContent,\n  startContent,\n  statusVariant = 'none',\n  styleVariant = 'default',\n  endContent,\n  resize,\n  rootRef\n}: Props) => {\n  const { isDisabled, isFocused, isLoading } = useFormFieldContext();\n\n  const rootStyles = classNames([\n    textFieldContainerStyles.base,\n    styleVariant === 'embedded'\n      ? classNames([\n          textFieldContainerStyles.embeddedStyles,\n          statusVariant !== 'none' && textFieldContainerStyles.showBorder\n        ])\n      : classNames([\n          textFieldContainerStyles.defaultStyles,\n          textFieldContainerStyles.showBorder,\n          insideLabel !== undefined && textFieldContainerStyles.labelInside,\n          isFocused && textFieldContainerStyles.focused,\n          contentVariant === 'textarea' && textFieldContainerStyles.textarea\n        ]),\n    resize && textFieldContainerStyles.resize[resize],\n    isDisabled\n      ? textFieldContainerStyles.disabled\n      : classNames([\n          statusVariant === 'error' && textFieldContainerStyles.error,\n          statusVariant === 'warning' && textFieldContainerStyles.warning,\n          // TODO: don't use class names: https://jira.oraclecorp.com/jira/browse/JET-50572\n          statusVariant !== 'none' && `oj-c-text-field-${statusVariant}`\n        ]),\n    isLoading && loadingStyles\n  ]);\n  const startContentStyles = classNames([\n    textFieldStartContentStyles.base,\n    insideLabel != undefined && textFieldStartContentStyles.labelInside,\n    isDisabled && textFieldStartContentStyles.disabled\n  ]);\n  const middleStyles = classNames([\n    textFieldMiddleStyles.base,\n    contentVariant === 'textarea' && textFieldMiddleStyles.textarea\n    // getMiddleContentVariantStyles(variant)\n  ]);\n  const endContentStyles = classNames([\n    textFieldEndContentStyles.base,\n    insideLabel != undefined && textFieldEndContentStyles.labelInside\n  ]);\n\n  return (\n    <div role=\"presentation\" class={rootStyles} ref={rootRef}>\n      {startContent && (\n        <span class={startContentStyles}>\n          <Flex justify=\"center\" align=\"center\" hasZeroMargins={true}>\n            {startContent}\n          </Flex>\n        </span>\n      )}\n      <div class={middleStyles}>\n        {insideLabel}\n        {mainContent}\n      </div>\n      {endContent && (\n        <span class={endContentStyles}>\n          <Flex justify=\"center\" align=\"center\" hasZeroMargins={true}>\n            {endContent}\n          </Flex>\n        </span>\n      )}\n    </div>\n  );\n};\n","import { classNames } from '../utils/UNSAFE_classNames';\nimport { StyledComponentProps } from '../utils/UNSAFE_typeUtils';\nimport { getFormControlClasses } from './FormControlUtils';\nimport { getTextFieldClasses } from './TextFieldUtils';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\n\nexport type StyleProps = {\n  hasInsideLabel?: boolean;\n  variant?: 'default' | 'embedded';\n};\ntype Props = StyledComponentProps<'div', StyleProps>;\n\nexport const StyledTextField = ({\n  hasInsideLabel = false,\n  variant = 'default',\n  ...props\n}: Props) => {\n  const { isReadonly } = useFormFieldContext();\n\n  // TODO: We need to re-evaluate how we use CSS multi-classing to our VDOM components\n  const formControlClassNames = getFormControlClasses(hasInsideLabel);\n  const textFieldClassNames = getTextFieldClasses(isReadonly, variant);\n  const cssClassNames = classNames([formControlClassNames, textFieldClassNames]);\n  return <div {...props} class={cssClassNames} />;\n};\n","import { ComponentChildren, ComponentProps, Fragment, Ref } from 'preact';\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { TextFieldContent } from './TextFieldContent';\nimport { StyledTextField } from './StyledTextField';\nimport { Size } from '../utils/UNSAFE_size';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\n// TextField takes the inputElem and userAssistanceContainer\n// and renders the form component's root dom, along with the\n// TextFieldContent, and the user assistance container.\n\n// The PickedProps are the ones we pass through to the the TextFieldContent\ntype PickedPropsFromTextFieldContent = Pick<\n  ComponentProps<typeof TextFieldContent>,\n  | 'contentVariant'\n  | 'startContent'\n  | 'statusVariant'\n  | 'styleVariant'\n  | 'mainContent'\n  | 'endContent'\n  | 'resize'\n>;\ntype PickedPropsFromHTMLElement = Pick<HTMLAttributesSignalExcluded<HTMLElement>, 'id'>;\n// TODO: How should a parent component listen to events for the text field?  The recommendation\n// was to remove event listeners from TextField itself and instead configure the TextFieldInput\n// with them, for example, thus keeping TextField a more pure layout component.  The\n// TextFieldInput renders the focusable input element, and may be a more natural place for\n// listeners.  We would potentially have to add similar listeners for the ReadonlyTextField, but\n// that component renders the focusable element itself;  there is no TextFieldInput or analogous\n// component passed in.  (from review on 3/8/22)\ntype FocusEvents = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onFocus' | 'onBlur'>;\ntype KeyEvents = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onKeyDown'>;\ntype MouseEvents = Pick<\n  HTMLAttributesSignalExcluded<HTMLDivElement>,\n  'onMouseDown' | 'onMouseEnter' | 'onMouseLeave'\n>;\ntype LabelProps = {\n  label?: ComponentChildren;\n  labelEdge?: 'inside' | 'start' | 'top';\n  labelStartWidth?: Size;\n};\ntype Props = PickedPropsFromTextFieldContent &\n  PickedPropsFromHTMLElement &\n  FocusEvents &\n  KeyEvents &\n  MouseEvents &\n  LabelProps & {\n    inlineUserAssistance?: ComponentChildren;\n    mainFieldRef?: Ref<HTMLDivElement>;\n  };\n\n// TODO: Do we need named props for start/endContent, or could they just be children that get\n// wrapped in a flex layout?  (from review on 3/8/22)\n\n// TODO: Instead of passing the inputElem, label, and userAssistance as named props here, should we\n// have a separate layout component that lays them out, which could just be passed as a child\n// to the TextField?  (from review on 3/8/22)\n\nexport const TextField = ({\n  contentVariant,\n  id,\n  endContent,\n  mainContent,\n  startContent,\n  inlineUserAssistance,\n  label,\n  labelEdge,\n  labelStartWidth,\n  mainFieldRef,\n  resize,\n  statusVariant,\n  styleVariant,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onMouseDown,\n  onMouseEnter,\n  onMouseLeave\n}: Props) => {\n  // TODO: What are the implications for interoperability between new preact-based form components\n  // and the existing JET oj-form-layout?  The preact form components create their own start/top\n  // labels, while oj-form-layout expects to create those itself and wire them to the existing form\n  // components through attributes like labelled-by.  (from review on 3/8/22)\n\n  // TODO: How should a parent form component render component-specific content within TextField,\n  // for example an aria live region?  Instead of a children prop on TextField, could the parent\n  // component pass comp-specific content through other props, like inputElem?   The parent could\n  // have its own component that composes inputElem with additional DOM.  (from review on 3/8/22)\n\n  const styledTextFieldChildren =\n    label !== undefined && (labelEdge === 'start' || labelEdge === 'top') ? (\n      <LabelValueLayout label={label} labelEdge={labelEdge} labelStartWidth={labelStartWidth}>\n        <Fragment>\n          <TextFieldContent\n            contentVariant={contentVariant}\n            endContent={endContent}\n            mainContent={mainContent}\n            resize={resize}\n            rootRef={mainFieldRef}\n            startContent={startContent}\n            statusVariant={statusVariant}\n            styleVariant={styleVariant}\n          />\n          {inlineUserAssistance}\n        </Fragment>\n      </LabelValueLayout>\n    ) : (\n      <Fragment>\n        <TextFieldContent\n          contentVariant={contentVariant}\n          endContent={endContent}\n          insideLabel={label}\n          mainContent={mainContent}\n          resize={resize}\n          rootRef={mainFieldRef}\n          startContent={startContent}\n          statusVariant={statusVariant}\n          styleVariant={styleVariant}\n        />\n        {inlineUserAssistance}\n      </Fragment>\n    );\n  return (\n    <StyledTextField\n      id={id}\n      hasInsideLabel={label !== undefined && labelEdge === 'inside'}\n      onfocusin={onFocus}\n      onfocusout={onBlur}\n      onKeyDown={onKeyDown}\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      variant={styleVariant}>\n      {styledTextFieldChildren}\n    </StyledTextField>\n  );\n};\n","import { Fragment } from 'preact';\nimport { useDebounce } from '../hooks/UNSAFE_useDebounce';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { LiveRegion } from '../UNSAFE_LiveRegion';\n\ntype Props = {\n  isMaxLengthExceeded?: boolean;\n  maxLength: number;\n  valueLength?: number;\n};\n\nconst MAX_LENGTH_UPDATE_DELAY = 500;\n\nexport function MaxLengthLiveRegion({ isMaxLengthExceeded, maxLength, valueLength = 0 }: Props) {\n  // Comment copied from InputBase.js in Big JET:\n  // Only update the aria-live div when the user has paused for more than\n  // 500 milliseconds. That way, we avoid queued up aria-live messages which\n  // would be annoying and not helpful. The 500ms was agreed upon in the\n  // accessibility review meeting.\n  const debouncedRemainingChars = useDebounce(maxLength - valueLength, MAX_LENGTH_UPDATE_DELAY);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const maxLengthExceededTranslatedString = translations.formControl_maxLengthExceeded({\n    MAX_LENGTH: `${maxLength}`\n  });\n  const remainingCharsTranslatedString = translations.formControl_maxLengthRemaining({\n    CHARACTER_COUNT: `${debouncedRemainingChars}`\n  });\n\n  return (\n    <Fragment>\n      <LiveRegion>{remainingCharsTranslatedString}</LiveRegion>\n      {isMaxLengthExceeded && (\n        <LiveRegion type=\"assertive\">{maxLengthExceededTranslatedString}</LiveRegion>\n      )}\n    </Fragment>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { ReadonlyTextFieldInput } from './ReadonlyTextFieldInput';\nexport { ReadonlyTextField } from './ReadonlyTextField';\nexport { TextField } from './TextField';\nexport { TextFieldInput } from './TextFieldInput';\nexport { getInputId } from './TextFieldUtils';\nexport { MaxLengthLiveRegion } from './MaxLengthLiveRegion';\n"],"names":["__rest","_jsxs","_jsx","LabelValueLayout","useFormContext","useFormFieldContext","getFormControlClasses","getTextFieldClasses","getReadonlyClasses","classNames","loadingStyles","ojButtonHeight","ojButtonSmHeight","ojButtonIconSize","ojButtonSmIconSize","textFieldContainerStyles","resize","textFieldStartContentStyles","textFieldMiddleStyles","textFieldEndContentStyles","TextFieldContent","contentVariant","insideLabel","mainContent","startContent","statusVariant","styleVariant","endContent","rootRef","base","embeddedStyles","showBorder","defaultStyles","undefined","labelInside","textarea","error","warning","isLoading","Object","assign","role","class","rootStyles","ref","children","startContentStyles","Flex","justify","align","hasZeroMargins","middleStyles","endContentStyles","Fragment","useDebounce","useTranslationBundle","LiveRegion"],"mappings":"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"}