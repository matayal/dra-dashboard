{"version":3,"file":"InlineHelpSource.spec.js","sources":["../../../../src/UNSAFE_UserAssistance/__tests__/InlineHelpSource.spec.tsx"],"sourcesContent":["import { cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { InlineHelpSource } from '../InlineHelpSource';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment/EnvironmentProvider';\nimport type { RootEnvironment } from '../../UNSAFE_Environment/EnvironmentContext';\n\ndescribe('InlineHelpSource - TabbableModeContext', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n\n  it('as input, TabbableModeContext not provided', async () => {\n    const value = 'Help source';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <InlineHelpSource source=\"http://www.oracle.com\">{value}</InlineHelpSource>\n      </RootEnvironmentProvider>\n    );\n\n    const anchorElement = await content.findByText(value);\n    expect(anchorElement).not.to.be.null;\n\n    const tabindex = anchorElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=true', async () => {\n    const value = 'Help source';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: true }}>\n          <InlineHelpSource source=\"http://www.oracle.com\">{value}</InlineHelpSource>\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const anchorElement = await content.findByText(value);\n    expect(anchorElement).not.to.be.null;\n\n    const tabindex = anchorElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=false', async () => {\n    const value = 'Help source';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: false }}>\n          <InlineHelpSource source=\"http://www.oracle.com\">{value}</InlineHelpSource>\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const anchorElement = await content.findByText(value);\n    expect(anchorElement).not.to.be.null;\n\n    const tabindex = anchorElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n\n  afterEach(cleanup);\n});\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n"],"names":["render","_jsx","RootEnvironmentProvider","InlineHelpSource","expect","TabbableModeContext","cleanup","matchTranslationBundle"],"mappings":"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"}