{"version":3,"file":"MessageStartIcon-5cdb8fbe.js","sources":["../../src/PRIVATE_Message/MessageStartIcon.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { MessageSeverity, MessageVariant } from './Message.types';\nimport {\n  MessageConfirmationIcon,\n  MessageErrorIcon,\n  MessageInfoIcon,\n  MessageWarningIcon\n} from '../UNSAFE_ThemedIcons';\nimport { Flex } from '../UNSAFE_Flex';\n\nconst messageStartIconStyles = cssProps`${{\n  marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n  display: 'flex',\n  alignSelf: 'flex-start'\n}}`;\n\nconst severityIconStyles = {\n  banner: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-start-icon-color)',\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-start-icon-size)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-summary-line-height)'\n  }}`,\n  inline: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-inline-start-icon-color)',\n    fontSize: '1rem'\n  }}`,\n  toast: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-toast-start-icon-color)',\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-toast-start-icon-size)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-toast-start-icon-size)',\n    width: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-toast-start-icon-size)'\n  }}`\n};\n\nconst severityIcons = {\n  confirmation: MessageConfirmationIcon,\n  error: MessageErrorIcon,\n  info: MessageInfoIcon,\n  warning: MessageWarningIcon\n};\n\nconst containerStyles = cssProps`${{\n  height: '100%'\n}}`;\n\n/**\n * Props for the StartIcon component\n */\ntype Props = {\n  /**\n   * The icon severity\n   */\n  severity: Exclude<MessageSeverity, 'none'>;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n\n  /**\n   * Translations resources\n   * TODO: Replace with preact translations when it is available\n   */\n  translations?: {\n    /**\n     * Text for 'error' severity level\n     */\n    error?: string;\n\n    /**\n     * Text for 'warning' severity level\n     */\n    warning?: string;\n\n    /**\n     * Text for 'info' severity level\n     */\n    info?: string;\n\n    /**\n     * Text for 'confirmation' severity level\n     */\n    confirmation?: string;\n  };\n};\n\n/**\n * StartIcon Component for rendering the severity based icon in Message\n */\nfunction MessageStartIcon({ severity, variant = 'banner', translations }: Props) {\n  const IconComponent = severityIcons[severity];\n  // TODO: JET-50793\n  const iconContent =\n    variant !== 'inline' ? (\n      <Flex align=\"center\" height=\"100%\">\n        <span class={containerStyles} role=\"img\" title={translations?.[severity]}>\n          <IconComponent />\n        </span>\n      </Flex>\n    ) : (\n      <span class={containerStyles} role=\"img\" title={translations?.[severity]}>\n        <IconComponent />\n      </span>\n    );\n  // If detail content is rendered, then wrap it in a div with specified style classes\n  // TODO: JET-48715 - remove marker classes\n  // Right now, oj-message-banner component uses this for unit tests and has no alternate way for\n  // testing. This will need to be removed as we work on oj-c-message-banner.\n  const markerClassForTests = 'oj-c-messagebanner-start-icon';\n  return (\n    <div\n      class={classNames([\n        variant === 'banner' && markerClassForTests,\n        messageStartIconStyles,\n        severityIconStyles[variant]\n      ])}\n      role=\"presentation\">\n      {iconContent}\n    </div>\n  );\n}\n\nexport { MessageStartIcon };\n"],"names":["messageStartIconStyles","severityIconStyles","severityIcons","confirmation","MessageConfirmationIcon","error","MessageErrorIcon","info","MessageInfoIcon","warning","MessageWarningIcon","containerStyles","MessageStartIcon","severity","variant","translations","IconComponent","iconContent","_jsx","Flex","Object","assign","align","height","children","class","role","title","classNames"],"mappings":";;;;;;;;;;;;AAmBA,MAAAA,sBAAA,GAAA,OAAA,CAAA;AAMA,MAAAC,kBAAA,GAAA;UAAA,UAAA;UAAA,UAAA;;AAAA,CAAA,CAAA;AAkBA,MAAAC,aAAA,GAAA;AACEC,EAAAA,YAAA,EAAAC,2BADF;AAEEC,EAAAA,KAAA,EAAAC,yBAFF;AAGEC,EAAAA,IAAA,EAAAC,+BAHF;AAIEC,EAAAA,OAAA,EAAAC,2BAAAA;AAJF,CAAA,CAAA;AAOA,MAAAC,eAAA,GAAA,SAAA,CAAA;AA6CA;;AAEG;;AACH,SAAAC,gBAAA,CAAA;EAAAC,QAAA;AAAAC,EAAAA,OAAA,GAAA,QAAA;AAAAC,EAAAA,YAAAA;AAAA,CAAA,EAAA;AACE,EAAA,MAAAC,aAAA,GAAAd,aAAA,CAAAW,QAAA,CAAA,CADF;;AAGE,EAAA,MAAAI,WAAA,GAAAH,OAAA,KAAA,QAAA,GAAAI,cAAA,CAAAC,SAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,IAAAA,KAAA,EAAA,QAAA;AAAAC,IAAAA,MAAA,EAAA,MAAA;AAAA,GAAA,EAAA;IAAAC,QAAA,EAAAN,cAAA,CAAA,MAAA,EAAAE,MAAA,CAAAC,MAAA,CAAA;AAAAI,MAAAA,KAAA,EAAAd,eAAA;AAAAe,MAAAA,IAAA,EAAA,KAAA;AAAAC,MAAAA,KAAA,EAAAZ,YAAA,KAAA,IAAA,IAAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,YAAA,CAAAF,QAAA,CAAA;AAAA,KAAA,EAAA;AAAAW,MAAAA,QAAA,EAAAN,cAAA,CAAAF,aAAA,EAAA,EAAA,CAAA;AAAA,KAAA,CAAA,CAAA;GAAA,CAAA,CAAA,GAAAE,cAAA,CAAA,MAAA,EAAAE,MAAA,CAAAC,MAAA,CAAA;AAAAI,IAAAA,KAAA,EAAAd,eAAA;AAAAe,IAAAA,IAAA,EAAA,KAAA;AAAAC,IAAAA,KAAA,EAAAZ,YAAA,KAAA,IAAA,IAAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,YAAA,CAAAF,QAAA,CAAA;AAAA,GAAA,EAAA;AAAAW,IAAAA,QAAA,EAAAN,cAAA,CAAAF,aAAA,EAAA,EAAA,CAAA;GAAA,CAAA,CAAA,CAHF;;;;;;AAoBE,EAAA,OAAAE,cAAA,CAAA,KAAA,EAAAE,MAAA,CAAAC,MAAA,CAAA;AAAAI,IAAAA,KAAA,EAAAG,qBAAA,CAAA,4CAAA,wBAAA,6BAAA,CAAA,CAAA;;AAAA,GAAA;;GAAA,CAAA,CAAA,CAAA;AAWF;;;;;;;"}