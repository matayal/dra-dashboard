/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

/**
 * Utility function that mocks the `IntersectionObserver` API. Necessary for components that rely
 * on it, otherwise the tests will crash.
 *
 * Recommended to execute inside `beforeEach`.
 */
const setupIntersectionObserverMock = () => {
    // IntersectionObserver isn't available in test environment
    const MockIntersectionObserver = jest.fn();
    MockIntersectionObserver.mockReturnValue({
        observe: () => null,
        unobserve: () => null,
        disconnect: () => null
    });
    Object.defineProperty(global, 'IntersectionObserver', {
        writable: true,
        configurable: true,
        value: MockIntersectionObserver
    });
};

/**
 * Employees data fixtures shared by all ListView tests
 */
function populateData(count, isNumberKey) {
    const data = [];
    for (let i = 0; i < count; i++) {
        if (isNumberKey) {
            data.push({ id: i, name: 'Employee ' + i });
        }
        else {
            data.push({ id: 'i' + i, name: 'Employee ' + i });
        }
    }
    return isNumberKey ? data : data;
}

exports.populateData = populateData;
exports.setupIntersectionObserverMock = setupIntersectionObserverMock;
/*  */
//# sourceMappingURL=listViewTestFixtures-eb39b1f7.js.map
