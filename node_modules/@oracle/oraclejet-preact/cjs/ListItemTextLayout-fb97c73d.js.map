{"version":3,"file":"ListItemTextLayout-fb97c73d.js","sources":["../../src/UNSAFE_ListItemLayout/ListItemLayout.tsx","../../src/UNSAFE_ListItemLayout/ListItemText.tsx","../../src/UNSAFE_ListItemLayout/ListItemTextLayout.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, JSX } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { Grid } from '../UNSAFE_Grid';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Props = {\n  children?: ComponentChildren;\n  /**\n   * The centermost element that should display more important data.\n   */\n  primary?: ComponentChildren;\n  /**\n   * Render Selector component in the leftmost column of the grid.\n   */\n  selector?: ComponentChildren;\n  /**\n   * Visual element to the left of the primary section.\n   * Supports image, avatar, badge, initials, or icon.\n   */\n  leading?: ComponentChildren;\n  /**\n   * A section that is rendered above the primary line.\n   */\n  overline?: ComponentChildren;\n  /**\n   * A section below the primary line.\n   */\n  secondary?: ComponentChildren;\n  /**\n   * Another section below secondary.\n   */\n  tertiary?: ComponentChildren;\n  /**\n   * Provides information about other data.\n   * Some examples of basic metadata are author, date created, date modified, file size, abbreviations, etc.\n   */\n  metadata?: ComponentChildren;\n  /**\n   * Visual element to the right of the primary section and metadata.\n   * Example components are image, avatar, badge, initials, or icon.\n   */\n  trailing?: ComponentChildren;\n  /**\n   * The action prop displays either one primary action or one or more secondary actions.\n   * A common example is using Toolbar.\n   */\n  action?: ComponentChildren;\n  /**\n   * Additional section separated with a space between itself and tertiary.\n   */\n  quaternary?: ComponentChildren;\n  /**\n   * Navigation should normally be used for linking away from the layout.\n   */\n  navigation?: ComponentChildren;\n} & IntrinsicProps;\n\nconst childrenStyles = cssProps`${{\n  /* @ts-ignore */\n  '& > *': {\n    marginTop: '0 !important',\n    marginBottom: '0 !important',\n    marginLeft: '0 !important',\n    marginRight: '0 !important'\n  }\n}}`;\n\n// TODO: revisit idea of negative margin when selector has a proper API for handling spacing\n// Jira: JET-54543\n// negative margin added to selector\nconst selectorStyles = cssProps`${{\n  alignSelf: 'center',\n  margin: '-0.875rem -0.875rem'\n}}`;\n\n// most content will be vertically centered\nconst centerVerticalStyles = cssProps`${{\n  alignSelf: 'center',\n  minWidth: 0\n}}`;\n\n// extra spacing is needed between meta, trailing, and action components\nconst leftPaddingStyles = cssProps`${{\n  paddingInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x)'\n}}`;\n\n// the central text area displays overline, primary, secondary, and tertiary in a column\nconst flexColumnStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'column'\n}}`;\n\n// \"extra\" components in row 1 and the link in row 2 are justified on the righthand side of the list item layout\nconst flexRowStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'right',\n  alignSelf: 'center'\n}}`;\n\nconst rightJustifyStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'right'\n}}`;\n\nconst rowAlignStyles = cssProps`${{\n  alignSelf: 'end'\n}}`;\n\nexport function ListItemLayout({\n  children,\n  selector,\n  leading,\n  primary,\n  secondary,\n  tertiary,\n  overline,\n  metadata,\n  trailing,\n  action,\n  quaternary,\n  navigation\n}: Props) {\n  // generate grid skeleton, adding cells based on which props are defined\n  const { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow } = getColumnsTemplate(\n    selector,\n    leading,\n    metadata,\n    trailing,\n    action,\n    quaternary,\n    navigation\n  );\n\n  // if ListItemLayout component has a child (ListItemTextLayout) then render that instead of individual props\n  const textArea = children ? (\n    <div className={childrenStyles}>{children}</div>\n  ) : (\n    <div className={flexColumnStyles}>\n      <div>{overline}</div>\n      <div>{primary}</div>\n      <div>{secondary}</div>\n      <div>{tertiary}</div>\n    </div>\n  );\n\n  // a second row is needed when quaternary or navigation are defined\n  const secondRow = hasSecondRow\n    ? [\n        firstCell && <span> </span>,\n        secondCell && <span> </span>,\n        <div className={rowAlignStyles}>{quaternary}</div>,\n        lastCell && <div className={rightJustifyStyles}>{navigation}</div>\n      ]\n    : null;\n\n  return (\n    <Grid gap=\"4x\" gridTemplateColumns={columnsTemplate}>\n      {firstCell}\n      {secondCell}\n      <div className={centerVerticalStyles}>{textArea}</div>\n      {lastCell}\n      {secondRow}\n    </Grid>\n  );\n}\n\nfunction getColumnsTemplate(\n  selector: ComponentChildren,\n  leading: ComponentChildren,\n  metadata: ComponentChildren,\n  trailing: ComponentChildren,\n  action: ComponentChildren,\n  quaternary: ComponentChildren,\n  navigation: ComponentChildren\n) {\n  const columnsTemplateBuilder = [];\n\n  let firstCell = null;\n  if (selector) {\n    columnsTemplateBuilder.push('auto');\n    firstCell = <div className={selectorStyles}>{selector}</div>;\n  }\n\n  let secondCell = null;\n  if (leading) {\n    columnsTemplateBuilder.push('auto');\n    secondCell = <div className={centerVerticalStyles}>{leading}</div>;\n  }\n\n  columnsTemplateBuilder.push('1fr'); // Text area always gets 1 full fraction of allotted space\n\n  let lastCell = null;\n  if (metadata || trailing || action || navigation) {\n    columnsTemplateBuilder.push('auto');\n    lastCell = (\n      <div className={flexRowStyles}>\n        <div className={classNames([centerVerticalStyles, metadata ? leftPaddingStyles : ''])}>\n          {metadata}\n        </div>\n        <div className={classNames([centerVerticalStyles, trailing ? leftPaddingStyles : ''])}>\n          {trailing}\n        </div>\n        <div className={classNames([centerVerticalStyles, action ? leftPaddingStyles : ''])}>\n          {action}\n        </div>\n      </div>\n    );\n  }\n\n  const columnsTemplate = columnsTemplateBuilder.join(' ');\n  const hasSecondRow = quaternary || navigation ? true : false;\n\n  return { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX, ComponentProps } from 'preact';\nimport { Text } from '../UNSAFE_Text';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Props = {\n  children?: string;\n  /**\n   * Name of the text slot which determines styling\n   */\n  variant: 'primary' | 'secondary' | 'tertiary' | 'quaternary' | 'overline' | 'metadata';\n} & IntrinsicProps;\n\nconst textVariants: Record<Props['variant'], ComponentProps<typeof Text>['variant']> = {\n  primary: 'primary',\n  secondary: 'primary',\n  tertiary: 'secondary',\n  quaternary: 'secondary',\n  overline: 'secondary',\n  metadata: 'secondary'\n};\n\nconst textSizes: Record<Props['variant'], ComponentProps<typeof Text>['size']> = {\n  primary: 'md',\n  secondary: 'sm',\n  tertiary: 'xs',\n  quaternary: 'sm',\n  overline: 'xs',\n  metadata: 'sm'\n};\n\nconst textLineClamps: Record<Props['variant'], ComponentProps<typeof Text>['lineClamp']> = {\n  primary: undefined,\n  secondary: 2,\n  tertiary: 2,\n  quaternary: 2,\n  overline: 1,\n  metadata: 1\n};\n\nexport function ListItemText({ children, variant }: Props) {\n  const { isTabbable } = useTabbableMode();\n\n  const textContent = (\n    <Text\n      variant={textVariants[variant]}\n      size={textSizes[variant]}\n      lineClamp={textLineClamps[variant]}>\n      {children}\n    </Text>\n  );\n\n  return isTabbable ? <div tabIndex={0}>{textContent}</div> : textContent;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { ListItemText } from './ListItemText';\n\ntype IntrinsicProps = JSX.HTMLAttributes<HTMLDivElement>;\ntype Props = {\n  /**\n   * The primary prop takes a simple string that will be formatted and placed in the center of the text area.\n   */\n  primary?: string;\n  /**\n   * The secondary prop takes a simple string that will be formatted and placed below the primary text.\n   */\n  secondary?: string;\n  /**\n   * The tertiary prop takes a simple string that will be formatted and placed below the secondary text.\n   */\n  tertiary?: string;\n  /**\n   * The overline prop takes a simple string that will be formatted and placed above the primary text.\n   */\n  overline?: string;\n} & IntrinsicProps;\n\nconst flexColumnStyles = cssProps`${{\n  display: 'flex',\n  flexDirection: 'column'\n}}`;\n\nexport function ListItemTextLayout({ primary, secondary, tertiary, overline }: Props) {\n  return (\n    <div className={flexColumnStyles}>\n      <ListItemText variant=\"overline\">{overline}</ListItemText>\n      <ListItemText variant=\"primary\">{primary}</ListItemText>\n      <ListItemText variant=\"secondary\">{secondary}</ListItemText>\n      <ListItemText variant=\"tertiary\">{tertiary}</ListItemText>\n    </div>\n  );\n}\n"],"names":["childrenStyles","selectorStyles","centerVerticalStyles","leftPaddingStyles","flexColumnStyles","flexRowStyles","rightJustifyStyles","rowAlignStyles","ListItemLayout","children","selector","leading","primary","secondary","tertiary","overline","metadata","trailing","action","quaternary","navigation","columnsTemplate","firstCell","secondCell","lastCell","hasSecondRow","getColumnsTemplate","textArea","_jsx","Object","assign","className","_jsxs","Grid","gap","gridTemplateColumns","secondRow","columnsTemplateBuilder","push","classNames","useTabbableMode","Text","ListItemTextLayout"],"mappings":"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"}