{"version":3,"file":"MessageDetail.spec.js","sources":["../../../../src/PRIVATE_Message/__tests__/MessageDetail.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { MessageRendererDataItem } from '../Message.types';\nimport { MessageDetail } from '../MessageDetail';\n\nconst MessageRendererDataItem = {\n  data: {\n    detail: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.'\n  },\n  index: 0,\n  key: 'ConfirmationMessage',\n  metadata: { key: 'ConfirmationMessage' }\n};\n\ndescribe('Test MessageDetail component', () => {\n  it('default renderer', async function () {\n    const content = render(<MessageDetail item={MessageRendererDataItem} />);\n\n    const detail = await content.findByText(\n      'Lorem Ipsum is simply dummy text of the printing and typesetting industry.'\n    );\n    expect(detail).not.null;\n  });\n\n  it('custom renderer', async function () {\n    type DataType = {\n      detail: string;\n    };\n    const detailRenderer = ({\n      data,\n      index,\n      key,\n      metadata\n    }: MessageRendererDataItem<string, DataType>) => (\n      <div\n        style=\"border: 1px solid gray; padding: 5px; background-color: orange;\"\n        data-testid=\"customWrapper\">\n        <div>index: {index}</div>\n        <div>key: {key}</div>\n        <div>detail: {data.detail}</div>\n        <div>metadata key: {metadata?.key}</div>\n      </div>\n    );\n\n    const content = render(\n      <MessageDetail item={MessageRendererDataItem} renderer={detailRenderer} />\n    );\n\n    const customWrapper = await content.findByTestId('customWrapper');\n    expect(customWrapper).not.null;\n    expect(customWrapper?.style.backgroundColor).to.equal('orange');\n\n    const index = await content.findByText('index: 0');\n    expect(index).not.null;\n\n    const key = await content.findByText('key: ConfirmationMessage');\n    expect(key).not.null;\n\n    const detail = await content.findByText(\n      'detail: Lorem Ipsum is simply dummy text of the printing and typesetting industry.'\n    );\n    expect(detail).not.null;\n\n    const metadataKey = await content.findByText('metadata key: ConfirmationMessage');\n    expect(metadataKey).not.null;\n  });\n});\n"],"names":["render","_jsx","MessageDetail","expect","_jsxs"],"mappings":";;;;;;;;;;;;;;;;;;AAKA,MAAM,uBAAuB,GAAG;AAC9B,IAAA,IAAI,EAAE;AACJ,QAAA,MAAM,EAAE,4EAA4E;AACrF,KAAA;AACD,IAAA,KAAK,EAAE,CAAC;AACR,IAAA,GAAG,EAAE,qBAAqB;AAC1B,IAAA,QAAQ,EAAE,EAAE,GAAG,EAAE,qBAAqB,EAAE;CACzC,CAAC;AAEF,QAAQ,CAAC,8BAA8B,EAAE,MAAK;IAC5C,EAAE,CAAC,kBAAkB,EAAE,kBAAK;AAC1B,QAAA,MAAM,OAAO,GAAGA,aAAM,CAACC,cAAC,CAAAC,2BAAa,EAAC,EAAA,IAAI,EAAE,uBAAuB,EAAI,CAAA,CAAC,CAAC;QAEzE,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CACrC,4EAA4E,CAC7E,CAAC;AACF,QAAAC,WAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC1B,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,kBAAK;QAIzB,MAAM,cAAc,GAAG,CAAC,EACtB,IAAI,EACJ,KAAK,EACL,GAAG,EACH,QAAQ,EACkC,MAC1CC,eAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EACE,KAAK,EAAC,iEAAiE,EAC3D,aAAA,EAAA,eAAe,EAC3B,EAAA,EAAA,QAAA,EAAA,CAAAA,eAAA,CAAA,KAAA,EAAA,EAAA,QAAA,EAAA,CAAA,SAAA,EAAa,KAAK,CAAO,EAAA,CAAA,EACzBA,6CAAW,GAAG,CAAA,EAAA,CAAO,EACrBA,eAAc,CAAA,KAAA,EAAA,EAAA,QAAA,EAAA,CAAA,UAAA,EAAA,IAAI,CAAC,MAAM,CAAO,EAAA,CAAA,EAChCA,sDAAoB,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,GAAG,CAAA,EAAA,CAAO,CACpC,EAAA,CAAA,CAAA,CACP,CAAC;AAEF,QAAA,MAAM,OAAO,GAAGJ,aAAM,CACpBC,cAAA,CAACC,2BAAa,EAAC,EAAA,IAAI,EAAE,uBAAuB,EAAE,QAAQ,EAAE,cAAc,EAAA,CAAI,CAC3E,CAAC;QAEF,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;AAClE,QAAAC,WAAM,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/B,QAAAA,WAAM,CAAC,aAAa,KAAA,IAAA,IAAb,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEhE,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACnD,QAAAA,WAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;QAEvB,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;AACjE,QAAAA,WAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;QAErB,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CACrC,oFAAoF,CACrF,CAAC;AACF,QAAAA,WAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;QAExB,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,mCAAmC,CAAC,CAAC;AAClF,QAAAA,WAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/B,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;"}