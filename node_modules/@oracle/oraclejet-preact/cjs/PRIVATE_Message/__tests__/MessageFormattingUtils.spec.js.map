{"version":3,"file":"MessageFormattingUtils.spec.js","sources":["../../../../src/PRIVATE_Message/__tests__/MessageFormattingUtils.spec.ts"],"sourcesContent":["import { expect } from 'chai';\nimport { isValidValueForProp, formatTimestamp } from '../MessageFormattingUtils';\nimport { severities } from '../Message.types';\n\ndescribe('Test MessageFormattingUtils', () => {\n  it('isValidValueForProp', function () {\n    // severity prop:\n    // valid severities\n    severities.forEach((severity) => {\n      expect(isValidValueForProp(severity, 'severity')).to.be.true;\n    });\n    // invalid severity\n    expect(isValidValueForProp('foo', 'severity')).to.be.false;\n\n    // timestamp prop:\n    // valid ISO string\n    expect(isValidValueForProp(new Date().toISOString(), 'timestamp')).to.be.true;\n    // invalid ISO string\n    expect(isValidValueForProp('foo', 'timestamp')).to.be.false;\n\n    // string prop:\n    // valid string\n    expect(isValidValueForProp('foo', 'string')).to.be.true;\n    // invalid strings\n    expect(isValidValueForProp('', 'string')).to.be.false;\n    expect(isValidValueForProp(null, 'string')).to.be.false;\n    expect(isValidValueForProp(undefined, 'string')).to.be.false;\n  });\n\n  it('formatTimestamp', function () {\n    const validTimestamp = formatTimestamp(new Date().toISOString());\n    expect(isValidValueForProp(validTimestamp, 'string')).to.be.true;\n\n    // formatting an invalid timestamp should throw an error, but if not, verify that it's\n    // not a valid string prop\n    try {\n      const invalidTimestamp = formatTimestamp('foo');\n      expect(isValidValueForProp(invalidTimestamp, 'timestamp')).to.be.false;\n    } catch (e) {\n      expect(e).not.null;\n    }\n  });\n});\n"],"names":["severities","expect","isValidValueForProp","formatTimestamp"],"mappings":";;;;;;;;;;;AAIA,QAAQ,CAAC,6BAA6B,EAAE,MAAK;IAC3C,EAAE,CAAC,qBAAqB,EAAE,YAAA;;;AAGxB,QAAAA,wBAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;AAC9B,YAAAC,WAAM,CAACC,0CAAmB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;AAC/D,SAAC,CAAC,CAAC;;AAEH,QAAAD,WAAM,CAACC,0CAAmB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;;;AAI3D,QAAAD,WAAM,CAACC,0CAAmB,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAE9E,QAAAD,WAAM,CAACC,0CAAmB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;;;AAI5D,QAAAD,WAAM,CAACC,0CAAmB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;AAExD,QAAAD,WAAM,CAACC,0CAAmB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;AACtD,QAAAD,WAAM,CAACC,0CAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;AACxD,QAAAD,WAAM,CAACC,0CAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;AAC/D,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,YAAA;QACpB,MAAM,cAAc,GAAGC,sCAAe,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;AACjE,QAAAF,WAAM,CAACC,0CAAmB,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;;;QAIjE,IAAI;AACF,YAAA,MAAM,gBAAgB,GAAGC,sCAAe,CAAC,KAAK,CAAC,CAAC;AAChD,YAAAF,WAAM,CAACC,0CAAmB,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;AACxE,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;AACV,YAAAD,WAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AACpB,SAAA;AACH,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;"}