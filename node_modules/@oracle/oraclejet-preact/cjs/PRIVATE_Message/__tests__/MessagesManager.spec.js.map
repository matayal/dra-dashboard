{"version":3,"file":"MessagesManager.spec.js","sources":["../../../../src/PRIVATE_Message/__tests__/MessagesManager.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { MessagesManager } from '../MessagesManager';\n\nconst DATA = [\n  {\n    key: 'ErrorMessage',\n    data: {\n      severity: 'error',\n      summary: 'Primary Text',\n      detail:\n        'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n      closeAffordance: 'on',\n      timestamp: new Date().toISOString()\n    }\n  },\n  {\n    key: 'WarningMessage',\n    data: {\n      severity: 'warning',\n      summary: 'Primary Text',\n      detail:\n        'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n      closeAffordance: 'on',\n      timestamp: new Date().toISOString()\n    }\n  },\n  {\n    key: 'ConfirmationMessage',\n    data: {\n      severity: 'confirmation',\n      summary: 'Primary Text',\n      detail:\n        'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n      closeAffordance: 'on',\n      timestamp: new Date().toISOString()\n    }\n  },\n  {\n    key: 'InfoMessage',\n    data: {\n      severity: 'info',\n      summary: 'Primary Text',\n      detail:\n        'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n      closeAffordance: 'on',\n      timestamp: new Date().toISOString()\n    }\n  }\n];\n\ndescribe('Test MessagesManager component', () => {\n  it('child renderer', async function () {\n    const content = render(\n      <MessagesManager data={DATA}>\n        {({ index, item }) => (\n          <div\n            style=\"border: 1px solid gray; padding: 5px; background-color: orange;\"\n            data-testid={item.key}>\n            <div>index: {index}</div>\n            <div>key: {item.key}</div>\n            <div>severity: {item.data.severity}</div>\n            <div>summary: {item.data.summary}</div>\n            <div>detail: {item.data.detail}</div>\n            <div>timestamp: {item.data.timestamp}</div>\n          </div>\n        )}\n      </MessagesManager>\n    );\n\n    // since the function we're passing to Array.map is async, we need to wait on all\n    // those return promises before continuing, hence the \"await Promise.all()\"\n    await Promise.all(\n      DATA.map(async (item) => {\n        const message = await content.findByTestId(item.key);\n        expect(message).not.null;\n        expect(message.style.backgroundColor).to.equal('orange');\n\n        // just look for a single field as an example, no need to find every field\n        const sevElem = await content.findByText(`severity: ${item.data.severity}`);\n        expect(sevElem).not.null;\n      })\n    );\n  });\n});\n"],"names":["render","_jsx","MessagesManager","_jsxs","expect"],"mappings":"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"}