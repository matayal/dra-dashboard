{"version":3,"file":"MessageTimestamp.spec.js","sources":["../../../../src/PRIVATE_Message/__tests__/MessageTimestamp.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { MessageTimestamp } from '../MessageTimestamp';\nimport { formatTimestamp } from '../MessageFormattingUtils';\n\nconst todaysDate = new Date();\nconst pastDate = new Date(todaysDate);\npastDate.setUTCFullYear(2020);\nconst NNBC = /\\u202f/g;\nconst SPACE = ' ';\n// On Edge v110 there is a non-breaking whitespace between the time and the 'AM'/'PM'.\n// Even though the test and the the MessageTimestamp use the same formatter, findByText\n// cannot find the text on Edge v110. This is a fix we have used in other tests that\n// test date/time code.\nconst normalizeString = function (actual: string) {\n  return actual.replace(NNBC, SPACE);\n};\n\ndescribe('Test MessageTimestamp component', () => {\n  it(\"today's date\", async function () {\n    const isoString = todaysDate.toISOString();\n    const content = render(<MessageTimestamp value={isoString} />);\n\n    const text = normalizeString(formatTimestamp(isoString));\n    const timestamp = await content.findByText(text);\n    expect(timestamp).not.null;\n  });\n\n  it('past date', async function () {\n    const isoString = pastDate.toISOString();\n    const content = render(<MessageTimestamp value={isoString} />);\n\n    const text = normalizeString(formatTimestamp(isoString));\n    const timestamp = await content.findByText(text);\n    expect(timestamp).not.null;\n  });\n});\n"],"names":["render","_jsx","MessageTimestamp","formatTimestamp","expect"],"mappings":";;;;;;;;;;;;;;;;;AAKA,MAAM,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;AAC9B,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;AACtC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC9B,MAAM,IAAI,GAAG,SAAS,CAAC;AACvB,MAAM,KAAK,GAAG,GAAG,CAAC;AAClB;AACA;AACA;AACA;AACA,MAAM,eAAe,GAAG,UAAU,MAAc,EAAA;IAC9C,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,QAAQ,CAAC,iCAAiC,EAAE,MAAK;IAC/C,EAAE,CAAC,cAAc,EAAE,kBAAK;AACtB,QAAA,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;AAC3C,QAAA,MAAM,OAAO,GAAGA,aAAM,CAACC,cAAC,CAAAC,iCAAgB,EAAC,EAAA,KAAK,EAAE,SAAS,EAAI,CAAA,CAAC,CAAC;QAE/D,MAAM,IAAI,GAAG,eAAe,CAACC,sCAAe,CAAC,SAAS,CAAC,CAAC,CAAC;QACzD,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACjD,QAAAC,WAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC7B,KAAC,CAAC,CAAC;IAEH,EAAE,CAAC,WAAW,EAAE,kBAAK;AACnB,QAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;AACzC,QAAA,MAAM,OAAO,GAAGJ,aAAM,CAACC,cAAC,CAAAC,iCAAgB,EAAC,EAAA,KAAK,EAAE,SAAS,EAAI,CAAA,CAAC,CAAC;QAE/D,MAAM,IAAI,GAAG,eAAe,CAACC,sCAAe,CAAC,SAAS,CAAC,CAAC,CAAC;QACzD,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACjD,QAAAC,WAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AAC7B,KAAC,CAAC,CAAC;AACL,CAAC,CAAC;;;;;"}