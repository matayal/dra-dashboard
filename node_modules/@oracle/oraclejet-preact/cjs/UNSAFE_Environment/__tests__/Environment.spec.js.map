{"version":3,"file":"Environment.spec.js","sources":["../../../../src/UNSAFE_Environment/__tests__/Environment.spec.tsx"],"sourcesContent":["import { RootEnvironmentProvider, EnvironmentProvider } from '../EnvironmentProvider';\nimport type { RootEnvironment, Environment } from '../EnvironmentContext';\nimport { render } from '@testing-library/preact';\nimport { expect } from 'chai';\n\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { useUser } from '../../hooks/UNSAFE_useUser';\nimport { useTheme } from '../../hooks/UNSAFE_useTheme';\nimport { useScale } from '../../hooks/UNSAFE_useScale';\nimport { useColorScheme } from '../../hooks/UNSAFE_useColorScheme';\nimport { useTranslationBundle } from '../../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../../resources/nls/bundle';\n\nfunction TestConsumer() {\n  const { locale, direction, forcedColors } = useUser();\n  const { name } = useTheme();\n  const scale = useScale();\n  const colorScheme = useColorScheme();\n  return (\n    <div>\n      <ul>\n        <li>\n          {locale},{direction},{forcedColors}\n        </li>\n        <li>\n          {name},{scale},{colorScheme}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nfunction TestEnvironmentOverwrite() {\n  const customisedEnv: Environment = { scale: 'md' };\n  return (\n    <EnvironmentProvider environment={customisedEnv}>\n      <div id=\"testModifiedEnv\">\n        <TestConsumer />\n      </div>\n    </EnvironmentProvider>\n  );\n}\n\nfunction TestTranslationBundle() {\n  const bundle = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  return (\n    <ul>\n      <li>{bundle.info()}</li>\n      <li>{bundle.confirmation()}</li>\n    </ul>\n  );\n}\n\ndescribe('Test initial rendering', () => {\n  it('Test default values from RootEnvironmentProvider', () => {\n    const content = render(\n      <RootEnvironmentProvider>\n        <TestConsumer />\n      </RootEnvironmentProvider>\n    );\n    const listItems = content.container.querySelectorAll('li');\n    expect(listItems.length).equals(2);\n    expect(listItems[0].textContent).equals('en,ltr,none');\n    expect(listItems[1].textContent).equals('redwood,lg,light');\n  });\n\n  it('Initial values from RootEnvironmentProvider', () => {\n    const env: Partial<RootEnvironment> = {\n      user: { locale: 'es' },\n      colorScheme: 'dark'\n    };\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TestConsumer />\n      </RootEnvironmentProvider>\n    );\n\n    const listItems = content.container.querySelectorAll('li');\n    expect(listItems.length).equals(2);\n    expect(listItems[0].textContent).equals('es,ltr,none');\n    expect(listItems[1].textContent).equals('redwood,lg,dark');\n  });\n\n  it('Replacing theme value with EnvironmentProvider', () => {\n    const env: Partial<RootEnvironment> = {\n      user: { locale: 'es' },\n      colorScheme: 'dark'\n    };\n\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TestConsumer />\n        <TestEnvironmentOverwrite />\n      </RootEnvironmentProvider>\n    );\n\n    const listItems = content.container.querySelectorAll('li');\n    expect(listItems.length).equals(4);\n    expect(listItems[0].textContent).equals('es,ltr,none');\n    expect(listItems[1].textContent).equals('redwood,lg,dark');\n    expect(listItems[2].textContent).equals('es,ltr,none');\n    expect(listItems[3].textContent).equals('redwood,md,dark');\n  });\n\n  it('Using translation bundle from RootEnvironmentProvider', async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    const env: Partial<RootEnvironment> = {\n      user: { locale: 'es' },\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TestTranslationBundle />\n      </RootEnvironmentProvider>\n    );\n\n    const listItems = content.container.querySelectorAll('li');\n    expect(listItems.length).equals(2);\n    expect(listItems[0].textContent).equals('Info');\n    expect(listItems[1].textContent).equals('Confirmation');\n  });\n\n  it('Overwrite translation bundle value for the subtree', async () => {\n    const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n    const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n    const rootEnv: Partial<RootEnvironment> = {\n      user: { locale: 'es' },\n      translations: { '@oracle/oraclejet-preact': translations }\n    };\n    const env: Partial<Environment> = {\n      translations: { '@oracle/oraclejet-preact': { info: () => 'updatedInfo' } }\n    };\n    const content = render(\n      <RootEnvironmentProvider environment={rootEnv}>\n        <TestTranslationBundle />\n        <EnvironmentProvider environment={env}>\n          <TestTranslationBundle />\n        </EnvironmentProvider>\n      </RootEnvironmentProvider>\n    );\n\n    const listItems = content.container.querySelectorAll('li');\n    expect(listItems.length).equals(4);\n    expect(listItems[0].textContent).equals('Info');\n    expect(listItems[1].textContent).equals('Confirmation');\n    expect(listItems[2].textContent).equals('updatedInfo');\n    expect(listItems[3].textContent).equals('Confirmation');\n  });\n});\n"],"names":["useUser","useTheme","useScale","useColorScheme","_jsx","_jsxs","EnvironmentProvider","useTranslationBundle","render","RootEnvironmentProvider","expect","matchTranslationBundle"],"mappings":"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"}