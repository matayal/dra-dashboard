/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

var flexbox = require('../../../flexbox-6deddb70.js');
var chai = require('chai');
require("identity-obj-proxy");
require('../../../keys-326d80d5.js');
require('../../../_curry1-f1ebd742.js');
require('../../../_has-2eedb7e0.js');

const { direction } = flexbox.flexboxInterpolations;
describe('flexbox direction', () => {
    const table = [
        [{}, {}],
        [{ foo: 'bar' }, {}]
        // [{ direction: 'row' }, css`${{ flexDirection: "row", }}`],
        // [{ direction: 'column' }, css`${{ flexDirection: "column", }}`],
        // [{ foo: "bar", height: 20 }, css`${{ flexDirection: "column", }}`],
    ];
    table.forEach((testParams) => {
        const [input, expected] = testParams;
        it(`when ${input} returns ${expected}`, async function () {
            const actual = direction(input);
            chai.expect(actual).to.deep.equal(expected);
        });
    });
    // test.each(table)("when %o returns %o", (input, expected) => {
    //   const actual = direction(input);
    //   expect(actual).toEqual(expected);
    // });
});
// describe("flexbox direction", () => {
//   const table: [any, any][] = [
//     [{}, {}],
//     [{ foo: "bar" }, {}],
//     [{ align: "baseline"}, css`${{ alignItems: "baseline"}}`],
//     [{ align: "center"}, css`${{ alignItems: "center"}}`],
//     [{ align: "start"}, css`${{ alignItems: "flex-start"}}`],
//     [{ align: "end"}, css`${{ alignItems: "flex-end"}}`],
//     [{ align: "inherit"}, css`${{ alignItems: "inherit"}}`],
//     [{ align: "initial"}, css`${{ alignItems: "initial"}}`],
//     [{ align: "stretch"}, css`${{ alignItems: "stretch"}}`],
//     [{ justify: "center"}, css`${{ justifyContent: "center"}}`],
//     [{ justify: "end"}, css`${{ justifyContent: "flex-end"}}`],
//     [{ justify: "start"}, css`${{ justifyContent: "flex-start"}}`],
//     [{ justify: "inherit"}, css`${{ justifyContent: "inherit"}}`],
//     [{ justify: "initial"}, css`${{ justifyContent: "initial"}}`],
//     [{ justify: "around"}, css`${{ justifyContent: "space-around"}}`],
//     [{ justify: "between"}, css`${{ justifyContent: "space-between"}}`],
//     [{ justify: "evenly"}, css`${{ justifyContent: "space-evenly"}}`],
//     [{ wrap: "nowrap"}, css`${{ flexWrap: "nowrap"}}`],
//     [{ wrap: "wrap"}, css`${{ flexWrap: "wrap"}}`],
//     [{ wrap: "reverse"}, css`${{ flexWrap: "wrap-reverse"}}`],
//     [{ wrap: "inherit"}, css`${{ flexWrap: "inherit"}}`],
//     [{ wrap: "initial"}, css`${{ flexWrap: "initial"}}`],
//   ];
//   test.each(table)("when %o returns %o", (input, expected) => {
//     const actual = direction(input);
//     expect(actual).toEqual(expected);
//   });
// });
/*  */
//# sourceMappingURL=flexbox.spec.js.map
