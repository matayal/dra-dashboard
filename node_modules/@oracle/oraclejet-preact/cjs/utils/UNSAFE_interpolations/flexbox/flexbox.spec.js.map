{"version":3,"file":"flexbox.spec.js","sources":["../../../../../src/utils/UNSAFE_interpolations/flexbox/flexbox.spec.ts"],"sourcesContent":["import { flexboxInterpolations } from './flexbox';\n//import { cssProps } from \"@oracle/oraclejet-cssprops\";\nimport { expect } from 'chai';\n\nconst { direction } = flexboxInterpolations;\ntype Obj = Record<string, unknown>;\n\ndescribe('flexbox direction', () => {\n  const table: [Obj, Obj][] = [\n    [{}, {}],\n    [{ foo: 'bar' }, {}]\n    // [{ direction: 'row' }, cssProps`${{ flexDirection: \"row\", }}`],\n    // [{ direction: 'column' }, cssProps`${{ flexDirection: \"column\", }}`],\n    // [{ foo: \"bar\", height: 20 }, cssProps`${{ flexDirection: \"column\", }}`],\n  ];\n  table.forEach((testParams) => {\n    const [input, expected] = testParams;\n    it(`when ${input} returns ${expected}`, async function () {\n      const actual = direction(input);\n      expect(actual).to.deep.equal(expected);\n    });\n  });\n  // test.each(table)(\"when %o returns %o\", (input, expected) => {\n  //   const actual = direction(input);\n  //   expect(actual).toEqual(expected);\n  // });\n});\n// describe(\"flexbox direction\", () => {\n//   const table: [any, any][] = [\n//     [{}, {}],\n//     [{ foo: \"bar\" }, {}],\n//     [{ align: \"baseline\"}, cssProps`${{ alignItems: \"baseline\"}}`],\n//     [{ align: \"center\"}, cssProps`${{ alignItems: \"center\"}}`],\n//     [{ align: \"start\"}, cssProps`${{ alignItems: \"flex-start\"}}`],\n//     [{ align: \"end\"}, cssProps`${{ alignItems: \"flex-end\"}}`],\n//     [{ align: \"inherit\"}, cssProps`${{ alignItems: \"inherit\"}}`],\n//     [{ align: \"initial\"}, cssProps`${{ alignItems: \"initial\"}}`],\n//     [{ align: \"stretch\"}, cssProps`${{ alignItems: \"stretch\"}}`],\n//     [{ justify: \"center\"}, cssProps`${{ justifyContent: \"center\"}}`],\n//     [{ justify: \"end\"}, cssProps`${{ justifyContent: \"flex-end\"}}`],\n//     [{ justify: \"start\"}, cssProps`${{ justifyContent: \"flex-start\"}}`],\n//     [{ justify: \"inherit\"}, cssProps`${{ justifyContent: \"inherit\"}}`],\n//     [{ justify: \"initial\"}, cssProps`${{ justifyContent: \"initial\"}}`],\n//     [{ justify: \"around\"}, cssProps`${{ justifyContent: \"space-around\"}}`],\n//     [{ justify: \"between\"}, cssProps`${{ justifyContent: \"space-between\"}}`],\n//     [{ justify: \"evenly\"}, cssProps`${{ justifyContent: \"space-evenly\"}}`],\n//     [{ wrap: \"nowrap\"}, cssProps`${{ flexWrap: \"nowrap\"}}`],\n//     [{ wrap: \"wrap\"}, cssProps`${{ flexWrap: \"wrap\"}}`],\n//     [{ wrap: \"reverse\"}, cssProps`${{ flexWrap: \"wrap-reverse\"}}`],\n//     [{ wrap: \"inherit\"}, cssProps`${{ flexWrap: \"inherit\"}}`],\n//     [{ wrap: \"initial\"}, cssProps`${{ flexWrap: \"initial\"}}`],\n//   ];\n//   test.each(table)(\"when %o returns %o\", (input, expected) => {\n//     const actual = direction(input);\n//     expect(actual).toEqual(expected);\n//   });\n// });\n"],"names":["flexboxInterpolations","expect"],"mappings":";;;;;;;;;;AAIA,MAAA,EAAA,SAAA,EAAA,GAAAA,6BAAA,CAAA;AAGA,QAAA,CAAA,mBAAA,EAAA,MAAA;AACE,IAAA,MAAA,KAAA,GAAA;;AAEE,QAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;;;;;AAKF,IAAA,KAAA,CAAA,OAAA,CAAA,CAAA,UAAA,KAAA;AACE,QAAA,MAAA,CAAA,KAAA,EAAA,QAAA,CAAA,GAAA,UAAA,CAAA;AACA,QAAA,EAAA,CAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,QAAA,CAAA,CAAA,EAAA,kBAAA;AACE,YAAA,MAAA,MAAA,GAAA,SAAA,CAAA,KAAA,CAAA,CAAA;AACA,YAAAC,WAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AACF,SAAA,CAAA,CAAA;AACF,KAAA,CAAA,CAAA;;;;;AAKF,CAAA,CAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;"}