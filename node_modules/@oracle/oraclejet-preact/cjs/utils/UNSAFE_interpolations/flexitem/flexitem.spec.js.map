{"version":3,"file":"flexitem.spec.js","sources":["../../../../../src/utils/UNSAFE_interpolations/flexitem/flexitem.spec.ts"],"sourcesContent":["import { flexitemInterpolations } from './flexitem';\n//import { cssProps } from \"@oracle/oraclejet-cssprops\";\nimport { expect } from 'chai';\n\nconst { alignSelf } = flexitemInterpolations;\ntype Obj = Record<string, unknown>;\n\n// TODO: Is this test actually useful?  What kind of testing should be done on interpolations?\ndescribe('flexitem alignSelf', () => {\n  const table: [Obj, Obj][] = [\n    [{}, {}],\n    [{ foo: 'bar' }, {}]\n    // [{ alignSelf: 'end' }, cssProps`${{ alignSelf: \"end\", }}`],\n  ];\n  table.forEach((testParams) => {\n    const [input, expected] = testParams;\n    it(`when ${input} returns ${expected}`, async function () {\n      const actual = alignSelf(input);\n      expect(actual).to.deep.equal(expected);\n    });\n  });\n});\n"],"names":["flexitemInterpolations","expect"],"mappings":";;;;;;;;;;AAIA,MAAA,EAAA,SAAA,EAAA,GAAAA,+BAAA,CAAA;AAGA;AACA,QAAA,CAAA,oBAAA,EAAA,MAAA;AACE,IAAA,MAAA,KAAA,GAAA;;AAEE,QAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA;;;AAGF,IAAA,KAAA,CAAA,OAAA,CAAA,CAAA,UAAA,KAAA;AACE,QAAA,MAAA,CAAA,KAAA,EAAA,QAAA,CAAA,GAAA,UAAA,CAAA;AACA,QAAA,EAAA,CAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,QAAA,CAAA,CAAA,EAAA,kBAAA;AACE,YAAA,MAAA,MAAA,GAAA,SAAA,CAAA,KAAA,CAAA,CAAA;AACA,YAAAC,WAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AACF,SAAA,CAAA,CAAA;AACF,KAAA,CAAA,CAAA;AACF,CAAA,CAAA;;;;;"}