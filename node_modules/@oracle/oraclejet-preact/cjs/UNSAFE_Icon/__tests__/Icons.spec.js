/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');
var preact = require('@testing-library/preact');
var chai = require('chai');
var UNSAFE_Icons = require('../../index-d5067e50.js');
var UNSAFE_ThemedIcons = require('../../index-3651c0e7.js');
require('../../UNSAFE_Icon.js');
require('../../Icon-c44e10c9.js');
require('../../tslib.es6-6f60dd09.js');
require('preact');
require("identity-obj-proxy");
require('../../utils/UNSAFE_size.js');
require('../../hooks/UNSAFE_useTooltip.js');
require('preact/hooks');
require('../../hooks/UNSAFE_useId.js');
require('../../UNSAFE_Floating.js');
require('../../Floating-48167355.js');
require('preact/compat');
require('../../index-55dfe40c.js');
require('../../hooks/UNSAFE_useUser.js');
require('../../UNSAFE_Environment.js');
require('../../UNSAFE_Layer.js');
require('../../utils/PRIVATE_floatingUtils.js');
require('../../utils/PRIVATE_refUtils.js');
require('../../hooks/UNSAFE_useOutsideClick.js');
require('../../utils/UNSAFE_arrayUtils.js');
require('../../hooks/UNSAFE_useHover.js');
require('../../hooks/UNSAFE_useToggle.js');
require('../../hooks/UNSAFE_useFocus.js');
require('../../hooks/UNSAFE_useTouch.js');
require('../../utils/UNSAFE_mergeProps.js');
require('../../hooks/UNSAFE_useAnimation.js');
require('../../useAnimation-576ef8bc.js');
require('../../utils/UNSAFE_classNames.js');
require('../../classNames-55bceee6.js');
require('../../hooks/UNSAFE_useTheme.js');

describe('Test Generated Icon components', () => {
    Object.entries(UNSAFE_Icons.icons)
        .concat(Object.entries(UNSAFE_ThemedIcons.iconsThemed))
        .forEach(([iconName, Icon]) => {
        it(`render ${iconName}`, async function () {
            const content = preact.render(jsxRuntime.jsx(Icon, {}));
            const svg = content.container.querySelector('svg');
            chai.expect(svg).not.null;
        });
        it('icon size', async function () {
            const content = preact.render(jsxRuntime.jsx(Icon, { size: "8x" }));
            const firstElement = content.container.firstElementChild;
            // @ts-ignore
            const classList = firstElement.classList;
            chai.expect(classList.length).equals(1);
        });
        it('icon color', async function () {
            const content = preact.render(jsxRuntime.jsx(Icon, { color: "danger" }));
            const firstElement = content.container.firstElementChild;
            // @ts-ignore
            const classList = firstElement.classList;
            chai.expect(classList.length).equals(1);
        });
    });
});
/*  */
//# sourceMappingURL=Icons.spec.js.map
