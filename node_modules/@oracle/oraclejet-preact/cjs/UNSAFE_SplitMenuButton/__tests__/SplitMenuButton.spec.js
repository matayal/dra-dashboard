/* @oracle/oraclejet-preact: 14.1.0 */
'use strict';

var jsxRuntime = require('preact/jsx-runtime');
var preact = require('@testing-library/preact');
var chai = require('chai');
var SplitMenuButton = require('../../SplitMenuButton-cf3b7b0f.js');
require('../../UNSAFE_Menu.js');
var MenuItem = require('../../MenuItem-0c819d68.js');
require('../../tslib.es6-6f60dd09.js');
require('../../UNSAFE_Button.js');
require('../../Button-07d97191.js');
require('../../UNSAFE_BaseButton.js');
require('../../BaseButton-9bfe304e.js');
require('../../hooks/UNSAFE_usePress.js');
require('preact/hooks');
require('../../hooks/UNSAFE_useHover.js');
require('../../hooks/UNSAFE_useToggle.js');
require('../../hooks/UNSAFE_useActive.js');
require('../../utils/UNSAFE_classNames.js');
require('../../classNames-55bceee6.js');
require('preact/compat');
require("identity-obj-proxy");
require('../../utils/UNSAFE_interpolations/dimensions.js');
require('../../utils/UNSAFE_arrayUtils.js');
require('../../utils/UNSAFE_size.js');
require('../../_curry1-f1ebd742.js');
require('../../utils/UNSAFE_mergeInterpolations.js');
require('../../_curry3-bc6e6a86.js');
require('../../_curry2-588f7ddc.js');
require('../../_has-2eedb7e0.js');
require('../../utils/PRIVATE_clientHints.js');
require('../../clientHints-e821b5ee.js');
require('../../hooks/UNSAFE_useTabbableMode.js');
require('preact');
require('../../utils/UNSAFE_mergeProps.js');
require('../../index-3651c0e7.js');
require('../../index-d5067e50.js');
require('../../UNSAFE_Icon.js');
require('../../Icon-c44e10c9.js');
require('../../hooks/UNSAFE_useTooltip.js');
require('../../hooks/UNSAFE_useId.js');
require('../../UNSAFE_Floating.js');
require('../../Floating-48167355.js');
require('../../index-55dfe40c.js');
require('../../hooks/UNSAFE_useUser.js');
require('../../UNSAFE_Environment.js');
require('../../UNSAFE_Layer.js');
require('../../utils/PRIVATE_floatingUtils.js');
require('../../utils/PRIVATE_refUtils.js');
require('../../hooks/UNSAFE_useOutsideClick.js');
require('../../hooks/UNSAFE_useFocus.js');
require('../../hooks/UNSAFE_useTouch.js');
require('../../hooks/UNSAFE_useAnimation.js');
require('../../useAnimation-576ef8bc.js');
require('../../hooks/UNSAFE_useTheme.js');
require('../../Menu-4b48a08e.js');
require('../../hooks/PRIVATE_useCollectionFocusRing.js');
require('../../useModal-0b4e4a2d.js');
require('../../MenuDivider-856fcdeb.js');
require('../../UNSAFE_Divider.js');
require('../../Divider-333e69aa.js');
require('../../UNSAFE_Text.js');
require('../../Text-cdd6f2fd.js');

afterEach(preact.cleanup);
describe('Test SplitMenuButton component', () => {
    it('render', async function () {
        const content = preact.render(jsxRuntime.jsx(SplitMenuButton.SplitMenuButton, { label: "Press Me", onAction: () => null }));
        const label = await content.findByText('Press Me');
        chai.expect(label).not.null;
    });
    it('display text', async () => {
        const content = preact.render(jsxRuntime.jsx(SplitMenuButton.SplitMenuButton, { label: "SplitMenuButton", onAction: () => null }));
        const label = await content.findByText('SplitMenuButton');
        const endIcon = content.container.querySelector('.oj-c-button-layout-embedded-md');
        chai.expect(label).not.null;
        chai.expect(endIcon).not.null;
    });
});
it('click', async function () {
    let count = 0;
    const increment = () => {
        count++;
    };
    const content = preact.render(jsxRuntime.jsx("div", { children: jsxRuntime.jsx(SplitMenuButton.SplitMenuButton, { label: "Press Me", onAction: increment }) }));
    const button = await content.findByText('Press Me');
    chai.expect(button).not.null;
    preact.fireEvent.click(button);
    chai.expect(count).to.equal(1);
});
it('ENTER', async function () {
    let count = 0;
    const increment = () => {
        count++;
    };
    const content = preact.render(jsxRuntime.jsx(SplitMenuButton.SplitMenuButton, { label: "Press Me", onAction: increment }));
    const button = await content.container.firstElementChild;
    chai.expect(button).not.null;
    if (button) {
        preact.fireEvent.keyDown(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });
        preact.fireEvent.keyUp(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });
    }
    chai.expect(count).to.equal(1);
});
it('Space', async function () {
    let count = 0;
    const increment = () => {
        count++;
    };
    const content = preact.render(jsxRuntime.jsxs("div", { children: [jsxRuntime.jsx(SplitMenuButton.SplitMenuButton, { label: "Press Me", onAction: increment }), jsxRuntime.jsx("span", { children: count })] }));
    const button = await content.findByText('Press Me');
    chai.expect(button).not.null;
    preact.fireEvent.keyDown(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });
    preact.fireEvent.keyUp(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });
    chai.expect(count).to.equal(1);
});
it('Menu', async function () {
    var _a, _b;
    const increment = () => {
        console.log('increment');
    };
    const content = preact.render(jsxRuntime.jsx(SplitMenuButton.SplitMenuButton, Object.assign({ label: "Press Me", onAction: increment }, { children: jsxRuntime.jsx(MenuItem.MenuItem, { label: "MenuItem1", onAction: increment }) })));
    const button = await ((_a = content.container.firstElementChild) === null || _a === void 0 ? void 0 : _a.firstElementChild);
    const iconButton = await ((_b = button === null || button === void 0 ? void 0 : button.lastElementChild) === null || _b === void 0 ? void 0 : _b.firstElementChild);
    chai.expect(iconButton).not.null;
    if (iconButton) {
        preact.fireEvent.click(iconButton);
    }
});
/*  */
//# sourceMappingURL=SplitMenuButton.spec.js.map
