{"version":3,"file":"List.spec.js","sources":["../../../../src/PRIVATE_List/__tests__/List.spec.tsx"],"sourcesContent":["/**\n * General List tests\n */\nimport { ComponentChildren } from 'preact';\nimport { useRef, useState } from 'preact/hooks';\nimport { render } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\nimport { getContents, getItems, getRoot } from './shared/testHelpers';\n\nimport { CurrentKeyDetail, DataState, ListItemContext, Metadata } from '../../UNSAFE_Collection';\nimport { useTabbableMode } from '../../hooks/UNSAFE_useTabbableMode';\nimport { List } from '../List';\nimport { Roles } from '../../UNSAFE_ListView';\nimport { Flex } from '../../UNSAFE_Flex';\nimport { HTMLAttributesSignalExcluded } from '../../utils/UNSAFE_attributeUtils';\n\n/**\n * Tests props solely exposed by List.tsx generic, used by external components (e.g. SelectMultiple),\n * the rest of the coverage for List.tsx comes from List.spec.tsx\n */\n\ndescribe('Test List component', () => {\n  beforeEach(() => {\n    if (!window.IntersectionObserver) {\n      // IntersectionObserver isn't available in test environment\n      const MockIntersectionObserver = jest.fn();\n      MockIntersectionObserver.mockReturnValue({\n        observe: () => null,\n        unobserve: () => null,\n        disconnect: () => null\n      });\n\n      Object.defineProperty(global, 'IntersectionObserver', {\n        writable: true,\n        configurable: true,\n        value: MockIntersectionObserver\n      });\n    }\n  });\n\n  /**\n   * custom loader test-cases\n   */\n\n  it('renders with custom loader', () => {\n    const loadingComponent = <div data-testid=\"load-more-component\">Loading</div>;\n\n    const { getAllByTestId, queryByTestId, rerender } = render(\n      <TestComponent data={null}></TestComponent>\n    );\n    expect(queryByTestId('load-more-component')).to.be.null;\n    rerender(<TestComponent data={null} loadingIndicator={loadingComponent}></TestComponent>);\n    expect(getAllByTestId('load-more-component').length).eq(1);\n  });\n\n  /**\n   * custom aria role test-cases\n   */\n\n  it('renders with default roles', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const list = render(<TestComponent data={dataMetadata}></TestComponent>);\n    const grid = await getRoot(list);\n    expect(grid.getAttribute('aria-rowcount')).eq('100');\n    const items = await getItems(list);\n    expect(items.length).eq(25);\n    const cells = await getContents(list);\n    expect(cells.length).eq(25);\n  });\n\n  it('renders with listbox rows', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const list = render(<TestComponent data={dataMetadata} role=\"listbox\"></TestComponent>);\n    const grid = await getRoot(list, 'listbox');\n    expect(grid.getAttribute('aria-rowcount')).eq('100');\n    const items = await getItems(list, 'presentation');\n    expect(items.length).eq(25);\n    const cells = await getContents(list, 'option');\n    expect(cells.length).eq(25);\n  });\n\n  it('renders with treegrid rows', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n    const list = render(<TestComponent data={dataMetadata} role=\"treegrid\"></TestComponent>);\n    const grid = await getRoot(list, 'treegrid');\n    expect(grid.getAttribute('aria-rowcount')).eq('100');\n    const items = await getItems(list, 'row');\n    expect(items.length).eq(25);\n    const cells = await getContents(list, 'gridcell');\n    expect(cells.length).eq(25);\n  });\n\n  it('allows toggling off F2 mode', async () => {\n    const data = populateData(100) as Employee<string>[];\n    const dataMetadata: { data: Employee<string>; metadata: Metadata<string> }[] = data.map(\n      (data) => {\n        return { data: data, metadata: { key: data.id } };\n      }\n    );\n\n    const { getByTestId, rerender } = render(<TestComponent data={dataMetadata}></TestComponent>);\n\n    // validate tabbable mode is working first\n    const firstRowInput = getByTestId('input-i0');\n    expect(firstRowInput.getAttribute('tabindex')).equals('-1');\n    userEvent.click(firstRowInput);\n    rerender(<TestComponent data={dataMetadata}></TestComponent>);\n    expect(firstRowInput.getAttribute('tabindex')).equals('0');\n\n    // now toggle off the mode and see click does not set the mode on\n    rerender(<TestComponent allowTabbableMode={false} data={dataMetadata}></TestComponent>);\n    userEvent.click(firstRowInput);\n    expect(firstRowInput.getAttribute('tabindex')).equals('-1');\n  });\n});\n\ntype Employee<K> = {\n  id: K;\n  name: string;\n};\n\ntype Data<K> = { data: Employee<K>; metadata: Metadata<K> }[] | null;\n\ntype Props<K> = {\n  allowTabbableMode?: boolean;\n  data: Data<K>;\n  role?: Roles;\n  loadingIndicator?: ComponentChildren;\n};\nfunction TestComponent<K extends string | number>({\n  allowTabbableMode,\n  data,\n  loadingIndicator,\n  role\n}: Props<K>) {\n  const rootRef = useRef(null);\n  const [currentKey, setCurrentKey] = useState<K | undefined>(undefined);\n  const [dataState, _] = useState<DataState<K, Employee<K>> | null>(\n    data\n      ? {\n          offset: 0,\n          data: data.slice(0, 25),\n          totalSize: data.length,\n          sizePrecision: 'exact'\n        }\n      : null\n  );\n\n  const getConfig = () => {\n    return {\n      scroller: () => {\n        return rootRef.current;\n      }\n    };\n  };\n\n  return (\n    <div\n      style=\"height: calc(10 * var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-5x));overflow: auto\"\n      ref={rootRef}>\n      <List\n        accessibleSummary=\"Basic list\"\n        allowTabbableMode={allowTabbableMode}\n        currentKey={currentKey}\n        data={dataState}\n        loadingIndicator={loadingIndicator}\n        onCurrentKeyChange={(detail: CurrentKeyDetail<K>) => setCurrentKey(detail.value)}\n        onLoadRange={() => {}}\n        role={role}\n        viewportConfig={getConfig()}>\n        {(context: ListItemContext<K, Employee<K>>) => (\n          <Flex>\n            {context.selector && context.selector()}\n            <Input data-testid={'input-' + context.data.id} />\n            <div\n              className=\"item\"\n              style={{\n                height: 'calc(var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-5x))',\n                padding: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-3x)'\n              }}>\n              {context.data.name}\n            </div>\n          </Flex>\n        )}\n      </List>\n    </div>\n  );\n}\n\nfunction populateData(\n  count: number,\n  isNumberKey?: boolean\n): Employee<string>[] | Employee<number>[] {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    if (isNumberKey) {\n      data.push({ id: i, name: 'Employee ' + i });\n    } else {\n      data.push({ id: 'i' + i, name: 'Employee ' + i });\n    }\n  }\n  return isNumberKey ? (data as Employee<number>[]) : (data as Employee<string>[]);\n}\n\n/**\n * Declare a tabbableMode aware component\n */\nconst Input = (props: HTMLAttributesSignalExcluded<HTMLInputElement>) => {\n  const { tabbableModeProps } = useTabbableMode();\n  return <input tabIndex={tabbableModeProps.tabIndex} {...props} />;\n};\n"],"names":["_jsx","render","expect","getRoot","getItems","getContents","userEvent","useRef","useState","List","_jsxs","Flex","useTabbableMode"],"mappings":"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"}