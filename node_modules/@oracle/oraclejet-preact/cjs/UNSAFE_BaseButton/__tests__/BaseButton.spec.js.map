{"version":3,"file":"BaseButton.spec.js","sources":["../../../../src/UNSAFE_BaseButton/__tests__/BaseButton.spec.tsx"],"sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { BaseButton } from '../BaseButton';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\n\nafterEach(cleanup);\n\ndescribe('Test BaseButton component', () => {\n  it('render', async function () {\n    const content = render(<BaseButton>Press Me</BaseButton>);\n    const label = await content.findByText('Press Me');\n    expect(label).not.null;\n  });\n\n  it('click', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <BaseButton onAction={increment}>Press Me</BaseButton>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    fireEvent.click(button);\n    expect(count).to.equal(1);\n  });\n\n  it('ENTER', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <BaseButton onAction={increment}>Press Me</BaseButton>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    //    fireEvent.keyDown(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n    fireEvent.keyUp(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n    expect(count).to.equal(1);\n  });\n\n  it('Space', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <BaseButton onAction={increment}>Press Me</BaseButton>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    //   fireEvent.keyDown(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n    fireEvent.keyUp(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n    expect(count).to.equal(1);\n  });\n\n  it('variant borderless', async () => {\n    const content = render(<BaseButton variant=\"borderless\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-borderless');\n    expect(button, 'borderless button found').not.null;\n  });\n\n  it('variant callToAction', async () => {\n    const content = render(<BaseButton variant=\"callToAction\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-callToAction');\n    expect(button, 'callToAction button found').not.null;\n  });\n\n  it('variant danger', async () => {\n    const content = render(<BaseButton variant=\"danger\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-danger');\n    expect(button, 'danger button found').not.null;\n  });\n\n  it('variant outlined', async () => {\n    const content = render(<BaseButton variant=\"outlined\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-outlined');\n    expect(button, 'outlined button found').not.null;\n  });\n\n  it('variant solid', async () => {\n    const content = render(<BaseButton variant=\"solid\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-solid');\n    expect(button, 'solid button found').not.null;\n  });\n\n  it('variant ghost', async () => {\n    const content = render(<BaseButton variant=\"ghost\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-ghost');\n    expect(button, 'ghost button found').not.null;\n  });\n\n  it('tabindex default ', async () => {\n    const content = render(<BaseButton>button</BaseButton>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const tabindex = button.getAttribute('tabindex');\n      expect(tabindex).to.equal('0');\n    }\n  });\n\n  it('size default ', async () => {\n    const content = render(<BaseButton>button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-md');\n    expect(button, 'default size button found').not.null;\n  });\n\n  it('size sm ', async () => {\n    const content = render(<BaseButton size=\"sm\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-sm');\n    expect(button, 'sm size button found').not.null;\n  });\n\n  it('size md ', async () => {\n    const content = render(<BaseButton size=\"md\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-md');\n    expect(button, 'md size button found').not.null;\n  });\n\n  it('size lg ', async () => {\n    const content = render(<BaseButton size=\"lg\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-lg');\n    expect(button, 'lg size button found').not.null;\n  });\n\n  it('disabled default', async () => {\n    const content = render(<BaseButton>button</BaseButton>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const disabled = button.getAttribute('disabled');\n      expect(disabled).null;\n    }\n  });\n\n  it('disabled', async () => {\n    const content = render(<BaseButton isDisabled={true}>button</BaseButton>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const disabled = button.getAttribute('disabled');\n      const tabindex = button.getAttribute('tabindex');\n      expect(tabindex).to.equal('-1');\n      expect(disabled).not.null;\n    }\n  });\n\n  it('with TabbableModeContext isTabbable=true', async () => {\n    const content = render(\n      <TabbableModeContext.Provider value={{ isTabbable: true }}>\n        <BaseButton>button</BaseButton>\n      </TabbableModeContext.Provider>\n    );\n    const button = await content.findByText('button');\n    const tabindex = button.getAttribute('tabindex');\n    expect(tabindex).to.equal('0');\n  });\n\n  it('with TabbableModeContext isTabbable=false', async () => {\n    const content = render(\n      <TabbableModeContext.Provider value={{ isTabbable: false }}>\n        <BaseButton>button</BaseButton>\n      </TabbableModeContext.Provider>\n    );\n    const button = await content.findByText('button');\n    const tabindex = button.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n});\n"],"names":["cleanup","render","_jsx","BaseButton","expect","_jsxs","fireEvent","TabbableModeContext"],"mappings":"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"}