/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
import { ComponentChildren, ComponentProps } from 'preact';
import { BaseButton } from '../UNSAFE_BaseButton';
export declare type ButtonDisplay = 'icons' | 'label' | 'all';
export declare type Props = {
    /**
     *The default slot is the button's text label. The oj-c-button element accepts plain text or DOM nodes as children for the default slot."
     */
    children?: ComponentChildren;
    /**
     * The startIcon is the button's start icon.
     */
    startIcon?: ComponentChildren;
    /**
     * The endIcon is the button's end icon.
     */
    endIcon?: ComponentChildren;
    /**
     * Styling can be used for customizing icon layout by limiting padding ("embedded")
     */
    styling?: 'default' | 'embedded';
    /**
     * The size indicates how large the button is rendered.
     */
    size?: ComponentProps<typeof BaseButton>['size'];
    /**
     * Display indicates whether the label, the icons, or all elements should be rendered by the button.
     */
    display?: ButtonDisplay;
};
export declare const compStyles: {
    text: string;
    icon: string;
    startText: string;
    endText: string;
    startIcon: string;
    endIcon: string;
    label: string;
};
export declare function ButtonLayout({ size, display, styling, ...props }: Props): import("preact").JSX.Element;
