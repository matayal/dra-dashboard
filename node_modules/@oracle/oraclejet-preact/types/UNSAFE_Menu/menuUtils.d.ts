/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
import { ComponentProps } from 'preact';
import { Menu } from './Menu';
/**
 * A helper function that return the key of the first available item.
 */
export declare const getFirstVisibleKey: (root: HTMLElement | null) => string | null;
/**
 * A helper function that return the key of the last available item.
 */
export declare const getLastVisibleKey: (root: HTMLElement | null) => string | null;
/**
 * A helper function that returns the key of the previous or the next item
 * given the specified current key
 */
export declare const getPrevNextKey: (root: HTMLElement | null, isPrev: boolean, currentKey?: string) => () => string | null;
/**
 * A helper function to get the key from an element
 */
export declare const keyExtractor: (element: HTMLElement) => string | null;
/**
 * Function to get the corresponding keyboard behavior to close the menu.
 */
export declare const getKeyboardCloseProps: (onClose: ComponentProps<typeof Menu>['onClose']) => {
    onKeyDown: (event: KeyboardEvent) => void;
};
/**
 * Function to get the corresponding specific behavior for clicking/touching down menuContainer
 */
export declare const getMenuPointerDown: () => {
    onPointerDown: (event: PointerEvent) => void;
};
export declare type MenuValueUpdateDetail<T> = {
    previousValue?: T;
    value: T;
};
