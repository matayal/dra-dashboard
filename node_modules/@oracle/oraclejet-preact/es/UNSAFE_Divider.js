/* @oracle/oraclejet-preact: 14.1.0 */
import { jsx } from 'preact/jsx-runtime';
import "./UNSAFE_Divider.css";
import { mergeInterpolations } from './utils/UNSAFE_mergeInterpolations.js';
import './utils/UNSAFE_classNames.js';
import './_curry1-ab762f3c.js';
import './_curry3-77af75f1.js';
import './_curry2-9cf34233.js';
import './_has-e54ed87c.js';

const styles = {
  orientation: {
    horizontal: "_2gp91q"
  }
};
const interpolations = [({
  orientation = 'horizontal'
}) => ({
  class: styles.orientation[orientation]
})];
const styleInterpolations = mergeInterpolations(interpolations); // TODO - Support vertical orientation

function Divider() {
  const {
    class: cls
  } = styleInterpolations({
    orientation: 'horizontal'
  }); // TODO - Check  with archs if this should be a polymorphic component and if the answer is yes, implement it

  return jsx("span", {
    class: cls,
    role: "separator",
    "aria-orientation": "horizontal"
  });
}

export { Divider };
/*  */
//# sourceMappingURL=UNSAFE_Divider.js.map
