{"version":3,"file":"UNSAFE_Icon.js","sources":["../../src/UNSAFE_Icon/Icon.tsx","../../src/UNSAFE_Icon/withDirectionIcon.tsx","../../src/UNSAFE_Icon/withThemeIcon.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX, Fragment } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { Size, sizeToCSS } from '../utils/UNSAFE_size';\nimport { useTooltip } from '../hooks/UNSAFE_useTooltip';\n\ntype IntrinsicProps = JSX.SVGAttributes<SVGSVGElement>;\n\ntype Props = Pick<IntrinsicProps, 'viewBox' | 'children'> & {\n  /**\n   * The size of the component. Defaults to '1em', which means the font size of the parent is used.\n   */\n  size?: Size | '1em';\n  /**\n   * The color of the component. Defaults to 'currentColor', which behaves like the CSS 'currentColor' value.\n   */\n  color?: keyof typeof colorStyles;\n  /**\n   * A label to be used for accessibility purposes.\n   */\n  accessibleLabel?: string;\n};\n\nexport const Icon = ({\n  size = '1em',\n  color = 'currentColor',\n  accessibleLabel = '',\n  viewBox = 'none',\n  children\n}: Props) => (\n  <Svg\n    height=\"1em\"\n    width=\"1em\"\n    viewBox={viewBox}\n    accessibleLabel={accessibleLabel}\n    class={colorStyles[color]}\n    style={{ fontSize: size === '1em' ? size : `${sizeToCSS(size)}` }}>\n    {children}\n  </Svg>\n);\n\ntype BaseSvgProps = Pick<\n  IntrinsicProps,\n  'height' | 'width' | 'viewBox' | 'class' | 'children' | 'style'\n>;\ntype SvgProps = BaseSvgProps & {\n  accessibleLabel: string;\n};\n\nconst Svg = ({ accessibleLabel, ...otherProps }: SvgProps) =>\n  accessibleLabel ? (\n    <SemanticSvg accessibleLabel={accessibleLabel} {...otherProps} />\n  ) : (\n    <DecorativeSvg {...otherProps} />\n  );\n\nconst DecorativeSvg = (props: BaseSvgProps) => <svg {...props} />;\n\nconst SemanticSvg = ({ accessibleLabel, children, ...props }: SvgProps) => {\n  const { tooltipContent, tooltipProps } = useTooltip({\n    text: accessibleLabel,\n    anchor: {\n      x: 'element',\n      y: 'element'\n    },\n    position: 'bottom',\n    offset: {\n      mainAxis: 8, // redwood tooltip design spec\n      crossAxis: 0\n    }\n  });\n\n  return (\n    <Fragment>\n      <svg role=\"img\" {...props} {...tooltipProps} aria-label={accessibleLabel}>\n        {children}\n      </svg>\n      {tooltipContent}\n    </Fragment>\n  );\n};\n\nconst colorStyles = {\n  primary: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-primary)'\n  }}`,\n  secondary: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-secondary)'\n  }}`,\n  disabled: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`,\n  danger: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-danger-3)'\n  }}`,\n  warning: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-warning-3)'\n  }}`,\n  success: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-success-3)'\n  }}`,\n  info: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-3)'\n  }}`,\n  currentColor: cssProps`${{\n    color: 'currentColor'\n  }}`\n};\n","import { ComponentProps } from 'preact';\nimport { Icon } from './Icon';\nimport { useUser } from '../hooks/UNSAFE_useUser';\n\ntype Props = Omit<ComponentProps<typeof Icon>, 'viewBox'>;\n\n// Returns a component that renders one of the given icon components based on reading direction\nexport const withDirectionIcon = (LtrIcon: typeof Icon, RtlIcon: typeof Icon) => {\n  return (props: Props) => {\n    const { direction } = useUser();\n    return direction === 'ltr' ? <LtrIcon {...props} /> : <RtlIcon {...props} />;\n  };\n};\n","import { ComponentProps } from 'preact';\nimport { Icon } from './Icon';\nimport { useTheme } from '../hooks/UNSAFE_useTheme';\n\ntype Props = Omit<ComponentProps<typeof Icon>, 'viewBox'>;\n\ntype ThemeType = ReturnType<typeof useTheme>;\n\ntype ThemeIcons = Record<ThemeType['name'], typeof Icon>;\n\n// Returns a component that renders one of the given icon components based on theme\nexport const withThemeIcon = (themeIcons: ThemeIcons) => {\n  return (props: Props) => {\n    const { name } = useTheme();\n    const Component = themeIcons[name];\n    return <Component {...props} />;\n  };\n};\n"],"names":["Icon","size","color","accessibleLabel","viewBox","children","_jsx","Svg","Object","assign","height","width","class","colorStyles","style","fontSize","sizeToCSS","_a","otherProps","__rest","DecorativeSvg","props","SemanticSvg","tooltipContent","tooltipProps","useTooltip","text","anchor","x","y","position","offset","mainAxis","crossAxis"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,MAAAA,IAAA,GAAA,CAAA;AAAAC,EAAAA,IAAA,GAAA,KAAA;AAAAC,EAAAA,KAAA,GAAA,cAAA;AAAAC,EAAAA,eAAA,GAAA,EAAA;AAAAC,EAAAA,OAAA,GAAA,MAAA;AAAAC,EAAAA,QAAAA;AAAA,CAAA,KAAAC,GAAA,CAAAC,GAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,EAAAA,MAAA,EAAA,KAAA;AAAAC,EAAAA,KAAA,EAAA,KAAA;AAAAP,EAAAA,OAAA,EAAAA,OAAA;AAAAD,EAAAA,eAAA,EAAAA,eAAA;AAAAS,EAAAA,KAAA,EAAAC,WAAA,CAAAX,KAAA,CAAA;AAAAY,EAAAA,KAAA,EAAA;IAAAC,QAAA,EAAAd,IAAA,KAAA,KAAA,GAAAA,IAAA,GAAA,CAAAe,EAAAA,SAAA,CAAAf,IAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,CAAA,EAAA;AAAAI,EAAAA,QAAA,EAAAA,QAAAA;AAAA,CAAA,CAAA,EAAA;;AA0BA,MAAAE,GAAA,GAAAU,EAAA,IAAA;EAAa,IAAA;AAAAd,IAAAA,eAAAA;AAAA,GAAA,GAAAc,EAAA;MAAAC,UAAA,GAAAC,MAAA,CAAAF,EAAA,EAAA,CAAA,iBAAA,CAAA,CAAA,CAAA;;;;;CAAb,CAAA;;AAOA,MAAAG,aAAA,GAAAC,KAAA,IAAAf,GAAA,CAAA,KAAA,EAAAE,MAAA,CAAAC,MAAA,CAAA,EAAA,EAAAY,KAAA,CAAA,CAAA,CAAA;;AAEA,MAAAC,WAAA,GAAAL,EAAA,IAAA;;;;;;;EACE,MAAA;IAAAM,cAAA;AAAAC,IAAAA,YAAAA;AAAA,GAAA,GAAAC,UAAA,CAAA;AACEC,IAAAA,IAAA,EAAAvB,eADF;AAEEwB,IAAAA,MAAA,EAAA;AACEC,MAAAA,CAAA,EAAA,SADF;AAEEC,MAAAA,CAAA,EAAA,SAAA;KAJJ;AAMEC,IAAAA,QAAA,EAAA,QANF;AAOEC,IAAAA,MAAA,EAAA;AACEC,MAAAA,QAAA,EAAA,CADF;AAEEC,MAAAA,SAAA,EAAA,CAAA;AAFF,KAAA;AAPF,GAAA,CAAA,CAAA;;;;;;;;;;AAqBF,CAtBA,CAAA;;AAwBA,MAAApB,WAAA,GAAA;WAAA,UAAA;aAAA,UAAA;YAAA,SAAA;UAAA,UAAA;WAAA,UAAA;WAAA,UAAA;QAAA,SAAA;;AAAA,CAAA;;AClFA;MACa,iBAAiB,GAAG,CAAC,OAAoB,EAAE,OAAoB,KAAI;IAC9E,OAAO,CAAC,KAAY,KAAI;AACtB,QAAA,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,CAAC;AAChC,QAAA,OAAO,SAAS,KAAK,KAAK,GAAGP,IAAC,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAK,CAAI,CAAA,GAAGA,GAAA,CAAC,OAAO,EAAK,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,EAAI,CAAC;AAC/E,KAAC,CAAC;AACJ;;ACFA;AACa,MAAA,aAAa,GAAG,CAAC,UAAsB,KAAI;IACtD,OAAO,CAAC,KAAY,KAAI;AACtB,QAAA,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,EAAE,CAAC;AAC5B,QAAA,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACnC,QAAA,OAAOA,GAAC,CAAA,SAAS,EAAK,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,EAAI,CAAC;AAClC,KAAC,CAAC;AACJ;;;;;;;"}