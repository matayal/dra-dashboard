/* @oracle/oraclejet-preact: 14.1.0 */
import { useCallback } from 'preact/hooks';
import { keyExtractor } from '../utils/PRIVATE_collectionUtils.js';
import '../utils/UNSAFE_keys.js';

const useItemAction = (currentKey, dataState, onItemAction, itemSelector) => {
    if (!dataState || !onItemAction) {
        return {};
    }
    return {
        onClick: useCallback((event) => {
            const key = keyExtractor(event.target, itemSelector);
            if (handleItemAction(key, dataState, 'click', onItemAction)) {
                event.stopPropagation();
            }
        }, [dataState, onItemAction]),
        onKeyDown: useCallback((event) => {
            if (event.key === 'Enter') {
                handleItemAction(currentKey, dataState, 'enter', onItemAction);
            }
            else if (event.key === ' ') {
                handleItemAction(currentKey, dataState, 'spacebar', onItemAction);
                event.preventDefault();
            }
        }, [dataState, onItemAction, currentKey])
    };
};
const handleItemAction = (key, dataState, reason, onItemAction) => {
    if (key !== undefined) {
        const context = findItemContext(key, dataState);
        context && onItemAction({ context, reason });
        return context !== undefined;
    }
    return false;
};
// returns a ListItemContext based on key
const findItemContext = (key, dataState) => {
    var _a, _b;
    const index = (_b = (_a = dataState === null || dataState === void 0 ? void 0 : dataState.data) === null || _a === void 0 ? void 0 : _a.findIndex((d) => d.metadata.key === key)) !== null && _b !== void 0 ? _b : -1;
    if (index > -1) {
        const context = {
            index: index + ((dataState === null || dataState === void 0 ? void 0 : dataState.offset) || 0),
            data: dataState === null || dataState === void 0 ? void 0 : dataState.data[index].data,
            metadata: dataState === null || dataState === void 0 ? void 0 : dataState.data[index].metadata
        };
        return context;
    }
    return undefined;
};

/**
 * @license
 * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.
 * The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */

export { useItemAction };
/*  */
//# sourceMappingURL=PRIVATE_useItemAction.js.map
