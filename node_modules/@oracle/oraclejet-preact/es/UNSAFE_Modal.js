/* @oracle/oraclejet-preact: 14.1.0 */
import { jsx, jsxs } from 'preact/jsx-runtime';
import { u as useModal } from './useModal-beb96266.js';
import { FocusTrap } from './UNSAFE_FocusTrap.js';
import { Layer } from './UNSAFE_Layer.js';
import "./UNSAFE_Modal.css";
import { forwardRef } from 'preact/compat';
import 'preact';
import './utils/UNSAFE_classNames.js';
import './utils/PRIVATE_tabbableUtils.js';
import './_curry1-ab762f3c.js';
import './_curry2-9cf34233.js';
import './_curry3-77af75f1.js';

const styles$2 = {
  base: "_52tt52"
};

const ModalBackdrop = () => jsx("div", {
  class: styles$2.base
});

const styles$1 = {
  base: "_1mf5n7"
};
const ModalContainer = forwardRef(({
  children
}, ref) => jsx("div", Object.assign({
  class: styles$1.base,
  ref: ref
}, {
  children: children
})));
ModalContainer.displayName = 'Forwarded<ModalContainer>';

const styles = {
  base: "zb31o6"
};

const ModalWrapper = ({
  children
}) => jsx("div", Object.assign({
  class: styles.base
}, {
  children: children
}));

const Modal = ({
  autoFocusRef,
  children,
  isOpen,
  onBackdropClick,
  restoreFocusRef
}) => {
  const {
    modalRef
  } = useModal({
    isOpen,
    onBackdropClick
  });
  return isOpen ? jsx(Layer, {
    children: jsxs(ModalWrapper, {
      children: [jsx(ModalBackdrop, {}), jsx(ModalContainer, Object.assign({
        ref: modalRef
      }, {
        children: jsx(FocusTrap, Object.assign({
          autoFocusRef: autoFocusRef,
          restoreFocusRef: restoreFocusRef
        }, {
          children: children
        }))
      }))]
    })
  }) : null;
};

export { Modal };
/*  */
//# sourceMappingURL=UNSAFE_Modal.js.map
