{"version":3,"file":"UNSAFE_ProgressCircle.js","sources":["../../src/UNSAFE_ProgressCircle/ProgressCircle.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentProps } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { CircleWrapper, CircleInner } from '../PRIVATE_Meter';\nimport { getClipPath } from '../utils/PRIVATE_meterUtils';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\ntype ariaPropsType = ComponentProps<typeof CircleWrapper>['ariaProps'];\ntype IntrinsicProps = Pick<\n  HTMLAttributesSignalExcluded<HTMLDivElement>,\n  'id' | 'class' | 'children'\n>;\n\ntype Props = IntrinsicProps & {\n  /**\n   * Specifies the id of the progress circle.  If the progress circle is being used to describe the loading process of a particular region\n   * of the page, then the aria-describedby attribute of the region must point to the id of the ProgressCircle\n   */\n  id?: IntrinsicProps['id'];\n  /**\n   * The value of the progress circle.  If the value is 'indeterminate', an indeterminate progress circle will be shown.\n   */\n  value?: 'indeterminate' | number;\n\n  /**\n   * The maximum value of the progress circle.\n   */\n  max?: number;\n  /**\n   * The size of the progress circle.\n   */\n  size?: 'sm' | 'md' | 'lg';\n\n  /**\n   * A label to be used for accessibility purposes when value is set to 'indeterminate'.\n   */\n  accessibleLabel?: string;\n};\n/**\n * A progress circle allows the user to visualize the progression of an extended computer operation.\n */\nexport function ProgressCircle({ value, max, ...otherProps }: Props) {\n  return value === 'indeterminate' ? (\n    <IndeterminateProgressCircle {...otherProps}></IndeterminateProgressCircle>\n  ) : (\n    <DeterminateProgressCircle value={value} max={max} {...otherProps}></DeterminateProgressCircle>\n  );\n}\n\ntype IndeterminateProps = Omit<Props, 'value' | 'max'>;\n\nconst IndeterminateProgressCircle = ({ accessibleLabel, id, size = 'md' }: IndeterminateProps) => {\n  const baseClasses = classNames([\n    styles.base,\n    `oj-c-progress-circle-${size}`,\n    styles.indeterminateOuter\n  ]);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const ariaProps: ariaPropsType = {\n    'aria-valuetext': accessibleLabel || translations.progressIndeterminate(),\n    role: 'progressbar'\n  };\n  return (\n    <CircleWrapper id={id} ariaProps={ariaProps} class={baseClasses}>\n      <CircleInner class={styles.indeterminateInner} />\n    </CircleWrapper>\n  );\n};\n\ntype DeterminateProps = Omit<Props, 'accessibleLabel'> & {\n  value?: number;\n};\n\nconst DeterminateProgressCircle = ({ value = 0, max = 100, id, size = 'md' }: DeterminateProps) => {\n  const percentage = Math.min(Math.max(0, value / max), 1);\n  const baseClasses = classNames([styles.base, `oj-c-progress-circle-${size}`]);\n  const clipPath = getClipPath(90, percentage * 360, false, 'full');\n\n  const ariaProps: ariaPropsType = {};\n  ariaProps['aria-valuemin'] = value != null ? '0' : undefined;\n  ariaProps['aria-valuemax'] = value != null ? `${max}` : undefined;\n  ariaProps['aria-valuenow'] = value != null ? `${value}` : undefined;\n  ariaProps['role'] = 'progressbar';\n  return (\n    <CircleWrapper id={id} ariaProps={ariaProps} class={baseClasses}>\n      <CircleInner class={classNames([styles.determinateInner, styles.track])} />\n      <CircleInner\n        class={classNames([styles.determinateInner, styles.value])}\n        clipPath={clipPath}\n      />\n    </CircleWrapper>\n  );\n};\n\nconst styles = {\n  base: cssProps`${{\n    position: 'relative',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    display: 'inline-block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    width: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-circle-size)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-circle-size)'\n  }}`,\n  indeterminateOuter: cssProps`${{\n    animationName: 'var(--oj-c-PRIVATE-DO-NOT-USE-private-progress-circle-rotation-animation)',\n    animationDuration: '1s',\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  }}`,\n  indeterminateInner: cssProps`${{\n    borderWidth: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-circle-track-width)',\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-meter-value-bg-color)',\n    borderStyle: 'solid',\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box',\n    borderRadius: '50%',\n    animationName: 'var(--oj-c-PRIVATE-DO-NOT-USE-private-progress-circle-length-animation)',\n    animationDuration: '1.5s',\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite',\n    animationDirection: 'alternate',\n    position: 'absolute'\n  }}`,\n  determinateInner: cssProps`${{\n    borderWidth: 'var(--oj-c-PRIVATE-DO-NOT-USE-progress-circle-track-width)',\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box',\n    borderRadius: '50%',\n    position: 'absolute',\n    borderStyle: 'solid'\n  }}`,\n  track: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-meter-track-bg-color)'\n  }}`,\n  value: cssProps`${{\n    borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-meter-value-bg-color)'\n  }}`\n};\n"],"names":["ProgressCircle","_a","value","_jsx","IndeterminateProgressCircle","Object","assign","otherProps","DeterminateProgressCircle","max","accessibleLabel","id","size","styles","base","indeterminateOuter","translations","useTranslationBundle","ariaProps","progressIndeterminate","role","percentage","Math","min","baseClasses","classNames","clipPath","getClipPath","undefined"],"mappings":";;;;;;;;;;;;;;;AA+CA;;AAEG;;AACH,SAAAA,cAAA,CAAAC,EAAA,EAAA;;;;;;;EACE,OAAAC,KAAA,KAAA,eAAA,GAAAC,GAAA,CAAAC,2BAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA,EAAA,EAAAC,UAAA,CAAA,CAAA,GAAAJ,GAAA,CAAAK,yBAAA,EAAAH,MAAA,CAAAC,MAAA,CAAA;AAAAJ,IAAAA,KAAA,EAAAA,KAAA;AAAAO,IAAAA,GAAA,EAAAA,GAAAA;GAAA,EAAAF,UAAA,CAAA,CAAA,CAAA;AAKF,CAAA;;AAIA,MAAAH,2BAAA,GAAA,CAAA;EAAAM,eAAA;EAAAC,EAAA;AAAAC,EAAAA,IAAA,GAAA,IAAA;AAAA,CAAA,KAAA;kCAEIC,MAAA,CAAAC,MACA,CAAA,qBAAA,EAAAF,IAAA,IACAC,MAAA,CAAAE;AAEF,EAAA,MAAAC,YAAA,GAAAC,oBAAA,CAAA,0BAAA,CAAA,CAAA;AACA,EAAA,MAAAC,SAAA,GAAA;AACE,IAAA,gBAAA,EAAAR,eAAA,IAAAM,YAAA,CAAAG,qBAAA,EADF;AAEEC,IAAAA,IAAA,EAAA,aAAA;GAFF,CAAA;;;;;;;;;;AASF,CAhBA,CAAA;;AAsBA,MAAAZ,yBAAA,GAAA,CAAA;AAAAN,EAAAA,KAAA,GAAA,CAAA;AAAAO,EAAAA,GAAA,GAAA,GAAA;EAAAE,EAAA;AAAAC,EAAAA,IAAA,GAAA,IAAA;AAAA,CAAA,KAAA;AACE,EAAA,MAAAS,UAAA,GAAAC,IAAA,CAAAC,GAAA,CAAAD,IAAA,CAAAb,GAAA,CAAA,CAAA,EAAAP,KAAA,GAAAO,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,EAAA,MAAAe,WAAA,GAAAC,UAAA,CAAA,CAAAZ,MAAA,CAAAC,IAAA,EAAA,CAAA,qBAAA,EAAAF,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,MAAAc,QAAA,GAAAC,WAAA,CAAA,EAAA,EAAAN,UAAA,GAAA,GAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;EAGAH,SAAA,CAAA,eAAA,CAAA,GAAAhB,KAAA,IAAA,IAAA,GAAA,GAAA,GAAA0B,SAAA,CAAA;AACAV,EAAAA,SAAA,CAAA,eAAA,CAAA,GAAAhB,KAAA,IAAA,IAAA,GAAA,CAAAO,EAAAA,GAAA,CAAA,CAAA,GAAAmB,SAAA,CAAA;AACAV,EAAAA,SAAA,CAAA,eAAA,CAAA,GAAAhB,KAAA,IAAA,IAAA,GAAA,CAAAA,EAAAA,KAAA,CAAA,CAAA,GAAA0B,SAAA,CAAA;AACAV,EAAAA,SAAA,CAAA,MAAA,CAAA,GAAA,aAAA,CAAA;;;;;;;;;;;;;AAUF,CAnBA,CAAA;;AAqBA,MAAAL,MAAA,GAAA;QAAA,UAAA;sBAAA,SAAA;sBAAA,UAAA;oBAAA,UAAA;SAAA,UAAA;;AAAA,CAAA;;;;;;;"}