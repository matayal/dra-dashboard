{"version":3,"file":"UNSAFE_Floating.js","sources":["../../src/UNSAFE_Floating/FloatingTail.tsx","../../src/UNSAFE_Floating/Floating.tsx"],"sourcesContent":["import { forwardRef } from 'preact/compat';\nimport { RefObject } from 'preact';\nimport { PositionData, Coords } from '../hooks/UNSAFE_useFloating';\n\nconst FloatingTail = forwardRef<HTMLDivElement>(({}, arrowRef) => {\n  return (\n    <div ref={arrowRef}> {/*Outer arrow - shadow*/}\n      <div></div> {/*Inner arrow - body*/}\n    </div>\n  );\n});\n\nfunction renderTail(\n  data: PositionData,\n  anchorRef: RefObject<Element | Coords>,\n  arrowRef: RefObject<Element>,\n  tail: 'none' | 'simple',\n  isRtl: boolean\n) {\n  if (tail === 'simple' && data.arrow) {\n    const { x, y, centerOffset } = data.arrow;\n    const arrowEl = arrowRef.current as Element;\n    const arrowSize = 7;\n    const arrowSizeCorner = 6;\n    const arrowInnerEl = arrowRef.current?.querySelector('div') as Element;\n    const arrowInnerSize = 5;\n    const arrowInnerSizeCorner = 5;\n    const arrowCommonStyle = {\n      position: 'absolute',\n      width: '0px',\n      height: '0px'\n    };\n    let anchorRefHeight = 0;\n    let anchorRefWidth = 0;\n    const current = anchorRef.current;\n\n    // @ts-ignore. Type 'Element | Coords' issues\n    // Property 'x' does not exist on type 'Element'.\n    // Property 'y' does not exist on type 'Element'.\n    const isAnchorRefElement = current?.x === undefined && current?.y === undefined;\n    if (isAnchorRefElement) {\n      // @ts-ignore. Property 'getBoundingClientRect' does not exist on type 'Coords'.\n      anchorRefHeight = Math.round(current.getBoundingClientRect().height);\n      // @ts-ignore. Property 'getBoundingClientRect' does not exist on type 'Coords'.\n      anchorRefWidth = Math.round(anchorRef.current?.getBoundingClientRect().width);\n    }\n    const isCornerVerticalPlacement = isAnchorRefElement ?\n      Math.abs(centerOffset) >= anchorRefHeight / 2 - arrowSize / 2 :\n      ['start-top-corner', 'start-bottom-corner', 'end-top-corner', 'end-bottom-corner'].includes(data.origPlacement);\n    const isCornerHorizontalPlacement = isAnchorRefElement ?\n      Math.abs(centerOffset) >= anchorRefWidth / 2 - arrowSize / 2 :\n      ['top-start-corner', 'top-end-corner', 'bottom-start-corner', 'bottom-end-corner'].includes(data.origPlacement);\n    const isCenter = centerOffset === 0;\n    const isCenterOffsetPositive = centerOffset > 0;\n\n    // Set styles of the arrow\n    setElementStyle(arrowCommonStyle, arrowEl);\n    setElementStyle(arrowCommonStyle, arrowInnerEl);\n\n    // Set sizes of the arrow\n    setArrowSizes(isCornerVerticalPlacement || isCornerHorizontalPlacement);\n\n    // Corner vs. normal arrow\n    function setArrowSizes(isCornerPlacement?: boolean) {\n      // Outer arrow (shadow)\n      const arrowFinalSize = isCornerPlacement ? arrowSizeCorner : arrowSize;\n      setArrowStyle({\n        borderTop: `${getSize(arrowFinalSize)} solid rgba(var(--oj-c-PRIVATE-DO-NOT-USE-palette-neutral-rgb-90), 0.1)`,\n        borderRight: getTransparentBorder(arrowFinalSize),\n        borderLeft: getTransparentBorder(arrowFinalSize)\n      });\n      // Inner arrow\n      const arrowInnerFinalSize = isCornerPlacement ? arrowInnerSizeCorner : arrowInnerSize;\n      setArrowInnerStyle({\n        borderTop: `${getSize(arrowInnerFinalSize)} solid var(--oj-c-PRIVATE-DO-NOT-USE-popup-bg-color)`,\n        borderRight: `${getTransparentBorder(arrowInnerFinalSize)}`,\n        borderLeft: `${getTransparentBorder(arrowInnerFinalSize)}`,\n      })\n    }\n\n    function setElementStyle(style: object, element: Element) {\n      //@ts-ignore - regarding types arrowEl.style is not under our control\n      Object.assign(element?.style, style);\n    }\n\n    function setArrowStyle(style: object) {\n      setElementStyle(style, arrowEl);\n    }\n\n    function setArrowInnerStyle(style: object) {\n      setElementStyle(style, arrowInnerEl);\n    }\n\n    function getTurn(eighth: number) {\n      return `rotate(${(eighth) * 45}deg)`;\n    }\n\n    function getSize(size: number) {\n      return `${size}px`;\n    }\n\n    function getTransparentBorder(size: number) {\n      return `${getSize(size)} solid transparent`;\n    }\n\n    const placementArr = data.placement.split('-');\n    const side = placementArr[0];\n\n    switch(side) {\n      case 'top': setArrowTop(); break;\n      case 'end': isRtl ? setArrowStart() : setArrowEnd();break;\n      case 'bottom': setArrowBottom(); break;\n      case 'start': isRtl ? setArrowEnd() : setArrowStart(); break;\n    }\n\n    function setArrowTop() {\n      if (x != undefined) {\n        if (isCornerHorizontalPlacement) {\n          // Top corners\n          setArrowStyle({\n            top: '', // flip 'reset'\n            bottom: getSize(-arrowSize + 2),\n            left: getSize(x + (isCenterOffsetPositive ? 5 : -5)),\n            transform: getTurn(isCenterOffsetPositive ? 5 : 3)\n          });\n          setCornerArrowInner();\n        } else {\n          setArrowStyle({\n            top: '', // flip 'reset'\n            bottom: getSize(-arrowSize),\n            left: isCenter ? getSize(x) : getSize(x + (isCenterOffsetPositive ? 1 : -1)),\n            transform: getTurn(0)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowEnd() {\n      if (y != undefined) {\n        if (isCornerVerticalPlacement) {\n          // End corners\n          setArrowStyle({\n            top: getSize(y + (isCenterOffsetPositive ? 2 : -2)),\n            right: '', // flip 'reset'\n            left: getSize(-arrowSize -1),\n            transform: getTurn(isCenterOffsetPositive ? 7 : 5)\n          });\n          setCornerArrowInner();\n        } else {\n          // End\n          setArrowStyle({\n            top: isCenter ? getSize(y) : getSize(y + (isCenterOffsetPositive ? -2 : +2)),\n            right: '', // flip 'reset'\n            left: getSize(-arrowSize * 1.5),\n            transform: getTurn(2)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowBottom() {\n      if (x != undefined) {\n        if (isCornerHorizontalPlacement) {\n          // Bottom corners\n          setArrowStyle({\n            top: getSize(-arrowSize + 3),\n            bottom: '', // flip 'reset'\n            left: getSize(x + (isCenterOffsetPositive ? 4 : -4)),\n            transform: getTurn(isCenterOffsetPositive ? 2 : 6)\n          });\n          setArrowInnerStyle({\n            top: getSize(-arrowInnerSize),\n            left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? 1 : -1))\n          });\n        } else {\n          setArrowStyle({\n            top: getSize(-arrowSize),\n            bottom: '', // flip 'reset'\n            left: isCenter ? getSize(x) : getSize(x + (isCenterOffsetPositive ? 1 : -1)),\n            transform: getTurn(4)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setArrowStart() {\n      if (y != undefined) {\n        if (isCornerVerticalPlacement) {\n          // Start corners\n          setArrowStyle({\n            top: getSize(y + (isCenterOffsetPositive ? 2 : -2)),\n            right: getSize(-arrowSize - 1),\n            left: '', // flip 'reset'\n            transform: getTurn(isCenterOffsetPositive ? 1 : 3)\n          });\n          setArrowInnerStyle({\n            top: getSize(-arrowInnerSize),\n            left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? -2 : 2))\n          });\n        } else {\n          // Start\n          setArrowStyle({\n            top: isCenter ? getSize(y) : getSize(y + (isCenterOffsetPositive ? -2 : +2)),\n            right: getSize(-arrowSize * 1.5),\n            left: '', // flip 'reset'\n            transform: getTurn(6)\n          });\n          setNonCornerArrowInner();\n        }\n      }\n    }\n\n    function setCornerArrowInner() {\n      setArrowInnerStyle({\n        top: getSize(-arrowInnerSize),\n        left: getSize(-arrowInnerSize + (isCenterOffsetPositive ? 2 : -2))\n      });\n    }\n\n    function setNonCornerArrowInner() {\n      setArrowInnerStyle({\n        top: getSize(-arrowInnerSize - 2),\n        left: getSize(-arrowInnerSize)\n      });\n    }\n  }\n}\n\nexport { FloatingTail, renderTail };\n","import { RefObject } from 'preact';\nimport { useLayoutEffect, useMemo, useState, useRef, useCallback } from 'preact/hooks';\nimport { forwardRef, ForwardedRef } from 'preact/compat';\nimport { autoUpdate, arrow } from '@floating-ui/dom';\nimport {\n  useFloating,\n  shift,\n  flip,\n  size,\n  offset,\n  limitShift,\n  PositionData\n} from '../hooks/UNSAFE_useFloating';\nimport { mergeRefs } from '../utils/PRIVATE_refUtils';\nimport { Offset, Placement, Coords, VirtualElement, Rect } from '../hooks/UNSAFE_useFloating';\nimport { useOutsideClick } from '../hooks/UNSAFE_useOutsideClick';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { FloatingTail, renderTail } from './FloatingTail';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children' | 'class'>;\n\ntype FlipOptions = {\n  mainAxis?: boolean; // This is the main axis in which overflow is checked to perform a flip. Default true.\n  crossAxis?: boolean; // This is the cross axis in which overflow is checked to perform a flip, the opposite axis of mainAxis. Default false.\n};\n\ntype ShiftOptions = {\n  mainAxis?: boolean; // This is the main axis in which shifting is applied. Default true.\n  crossAxis?: boolean; // This is the cross axis in which shifting is applied, the opposite axis of mainAxis. Default false\n};\n\n/**\n * This describes the virtual padding around the collision boundary (currently the view port).\n * This could be extended in the future,\n * i.e. property to define what is a boundary ( a view port, a document, some other html element)\n */\nexport type BoundaryOptions = {\n  padding?: number | {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n  };\n}\n/**\n  * Specifies the resizing behaviour for max-height and max-width of the floating component.\n  * The floating element will change the size depending on the available space.\n  * isMaxHeightAdjusted/isMaxWidthAdjusted - sets the max-height/max-width of the floating to the available space till the collision.\n  * maxHeightCeiling/maxWidthCeiling - this is the limit for max-height/max-width that should not be exceeded, even if there is more available space till the collision.\n  */\nexport type SizeOptions = {\n  isMaxWidthAdjusted?: boolean;\n  isMaxHeightAdjusted?: boolean;\n  maxHeightCeiling?: number;\n  maxWidthCeiling?: number;\n}\n\ntype Props = IntrinsicProps & {\n  /**\n   * Placement of the floating element relative to the trigger.\n   * Possible values are:\n   * <p> <code>'top' </code> <code>'top-start' </code> <code> 'top-end' </code> <code> 'top-start-corner' </code> <code> 'top-end-corner' </code>\n   * <code> 'end' </code> <code> 'end-top'  </code> <code> 'end-bottom' </code> <code> 'end-top-corner' </code> <code> 'end-bottom-corner' </code>\n   * <code> 'bottom'  </code> <code> 'bottom-start'  </code> <code> 'bottom-end' </code> <code> 'bottom-start-corner' </code> <code> 'bottom-end-corner' </code>\n   * <code> 'start' </code> <code> 'start-top'  </code> <code> 'start-bottom' </code> <code> 'start-top-corner' </code> <code> 'start-bottom-corner' </code>\n   * </p>\n   */\n  placement?: Placement;\n\n  /**\n   * Trigger element reference.\n   */\n  anchorRef: RefObject<Element | Coords>;\n\n  /**\n   * Placement offset.\n   * Offset displaces the floating element from its core placement along the specified axes.\n   * Offset could be a number, object or a function.\n   * A number represents the distance (gutter or margin) between the floating element and the reference element.\n   * This is shorthand for mainAxis.\n   * <pre>\n   *   {\n   *     mainAxis?: number;\n   *     crossAxis?: number;\n   *   }\n   * </pre>\n   * <p><code>mainAxis</code> represents the distance (gutter or margin) between the floating element and the reference element.</p>\n   * <p><code>crossAxis</code> represents the shifting between the floating element and the reference element.<p>\n   * You may also pass a function which returns the previously listed values — this enables you to read the dimensions of the reference or floating elements and the current placement.\n   * <pre>\n   * (args: {\n   *   floating: Rect;\n   *   reference: Rect;\n   *   placement: Placement;\n   * }) => OffsetValue\n   * </pre>\n   */\n  offsetValue?: Offset;\n\n  /**\n   * Click outside callback.\n   */\n  onClickOutside?: (event: MouseEvent) => void;\n\n  /**\n   * Specifies the flipping behavior along the respective axis.\n   * When true, the floating element will be flipped to prevent overflow.\n   * Default values are 'true' for mainAxis and 'false' for crossAxis.\n   */\n  flipOptions?: FlipOptions;\n\n  /**\n   * Specifies the shift behavior along the respective axis.\n   * When true, the floating element will shift to prevent overflow.\n   * Default values are 'true' for mainAxis and 'false' for crossAxis.\n   */\n  shiftOptions?: ShiftOptions;\n\n  /**\n   *  Triggered when placement or coordinates are changed after collision is detected\n   */\n  onPosition?: (data: PositionData) => void;\n\n  /**\n   * Tail\n   */\n  tail?: 'none' | 'simple';\n\n   /**\n   * Specifies the resizing behaviour for height and width of the floating component.\n   * When either of the options isMaxHeightAdjusted, isMaxWidthAdjusted is true, the floating element will change the size depending on the available space.\n   * Default values are 'false'.\n   * maxHeightCeiling and maxWidthCeiling are maximal values that could not be exceeded.\n   * Default are undefined and it means to use full available width/height.\n   */\n  sizeOptions?: SizeOptions;\n\n   /**\n   * This describes the virtual padding around the collision boundary to check for overflow.\n   * Default value for padding is 0.\n   */\n  boundaryOptions?: BoundaryOptions;\n};\n\nfunction isElement(value: any): value is Element {\n  return value instanceof Element;\n}\n/**\n * A floating component allows the user to create a floating element that is displayed on the the \"top layer\" of all other elements.\n *  The Floating component is an advanced component and is used underneath Popup, Tooltip, SelectMultiple, Menu and other components.\n */\nexport const Floating = forwardRef(\n  (\n    {\n      children,\n      onClickOutside,\n      placement = 'bottom',\n      anchorRef,\n      offsetValue,\n      class: className,\n      tail = 'none',\n      flipOptions = { mainAxis: true, crossAxis: false },\n      shiftOptions = { mainAxis: true, crossAxis: false },\n      sizeOptions = { isMaxHeightAdjusted: false, isMaxWidthAdjusted: false },\n      boundaryOptions = { padding: 0 },\n      onPosition\n    }:\n    Props,\n    ref: ForwardedRef<HTMLElement | null>\n  ) => {\n    const arrowRef = useRef<HTMLDivElement>(null);\n\n    const [previousAnchor, setPreviousAnchor] = useState<Element | Coords | null>(null);\n\n    // we need to be sure anchorRef.current exists in first call\n    // to be able to set the previousAnchor state\n    useLayoutEffect(() => {\n      setPreviousAnchor(anchorRef.current);\n    }, []);\n\n    // In case anchorRef.current changes and we need to update floating position\n    // when it changes, we need to have copy in the state.\n    // For example when anchorRef is Coords( virtual element)\n    if (anchorRef.current !== previousAnchor) {\n      setPreviousAnchor(anchorRef.current);\n    }\n\n    const { direction } = useUser();\n    const isRtl = direction === 'rtl';\n\n\n    const _onPosition = useCallback(\n      (data: PositionData) => {\n        renderTail(data, anchorRef, arrowRef, tail, isRtl);\n        onPosition?.(data);\n      },\n      [placement, anchorRef, arrowRef, tail, onPosition]\n    );\n\n    const middleware = [\n      offset(offsetValue),\n      flip({\n        mainAxis: flipOptions.mainAxis,\n        crossAxis: flipOptions.crossAxis,\n        padding: boundaryOptions.padding\n      }),\n      shift({\n        mainAxis: shiftOptions.mainAxis,\n        crossAxis: shiftOptions.crossAxis,\n        limiter: limitShift({\n          mainAxis: shiftOptions.mainAxis,\n          crossAxis: shiftOptions.crossAxis\n        })\n      }),\n      ...(arrowRef.current\n        ? [\n            arrow({\n              element: arrowRef.current\n            })\n          ]\n        : [])\n    ];\n    if (sizeOptions.isMaxHeightAdjusted || sizeOptions.isMaxWidthAdjusted ) {\n      middleware.push(\n        size({\n          apply({ availableWidth, availableHeight, elements }) {\n            if (sizeOptions.isMaxHeightAdjusted) {\n              Object.assign(elements.floating.style, {\n                maxHeight: `${Math.min(availableHeight, sizeOptions.maxHeightCeiling || availableHeight)}px`\n              });\n            }\n            if (sizeOptions.isMaxWidthAdjusted) {\n              Object.assign(elements.floating.style, {\n                maxWidth: `${Math.min(availableWidth, sizeOptions.maxWidthCeiling || availableWidth)}px`,\n              });\n            }\n          },\n\n          padding: boundaryOptions.padding\n        }));\n    }\n\n    const { x, y, reference, floating, refs } = useFloating({\n      placement: placement,\n      middleware: middleware,\n      whileElementsMounted: autoUpdate,\n      onPosition: _onPosition\n    });\n\n    useOutsideClick({ isDisabled: false, ref: refs.floating, handler: onClickOutside });\n\n    useLayoutEffect(() => {\n      if (isElement(previousAnchor)) {\n        const element = previousAnchor as Element;\n        reference(element);\n        return;\n      }\n      const coords = previousAnchor as Coords;\n      const virtualEl: VirtualElement = {\n        getBoundingClientRect() {\n          return {\n            width: 0,\n            height: 0,\n            x: coords!.x,\n            y: coords!.y,\n            top: coords!.y,\n            left: coords!.x,\n            right: coords!.x,\n            bottom: coords!.y\n          };\n        }\n      };\n      if (coords && coords.x != null) {\n        reference(virtualEl);\n      }\n    }, [previousAnchor, reference]);\n\n    const stableRef = useMemo(() => mergeRefs(ref, floating), [ref, floating]);\n    const content = (\n      <div\n        class={className}\n        ref={stableRef}\n        style={{\n          display: 'block',\n          visibility: x == null && y == null ? 'hidden' : 'visible',\n          position: 'absolute',\n          top: y ?? '',\n          left: x ?? '',\n          width: 'auto',\n          height: 'auto'\n        }}>\n         {children}\n        <FloatingTail ref={arrowRef} />\n      </div>\n    );\n    return content;\n  }\n);\n\nexport { Offset, Placement, Coords, Rect, FlipOptions, ShiftOptions, PositionData };\n"],"names":["_jsxs","_jsx","flip","shift","limitShift","arrow","size","autoUpdate"],"mappings":"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"}