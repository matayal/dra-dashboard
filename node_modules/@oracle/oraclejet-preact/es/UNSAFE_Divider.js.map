{"version":3,"file":"UNSAFE_Divider.js","sources":["../../src/UNSAFE_Divider/Divider.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\n\n// TODO -  Expose props once vertical orientation is supported\ntype DividerProps = {\n  /**\n   * Divider's orientation.\n   */\n  orientation?: 'horizontal';\n};\n\nconst styles = {\n  orientation: {\n    horizontal: cssProps`${{\n      display: 'block',\n      width: '100%',\n      height: '0',\n      borderColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-divider-color)',\n      borderStyle: 'solid',\n      borderWidth: '1px 0 0 0',\n      fontSize: '0',\n      lineHeight: '0'\n    }}`\n  }\n};\n\nconst interpolations = [\n  ({ orientation = 'horizontal' }: Pick<DividerProps, 'orientation'>) => ({\n    class: styles.orientation[orientation]\n  })\n];\n\nconst styleInterpolations = mergeInterpolations<DividerProps>(interpolations);\n\n// TODO - Support vertical orientation\nexport function Divider() {\n  const { class: cls } = styleInterpolations({ orientation: 'horizontal' });\n\n  // TODO - Check  with archs if this should be a polymorphic component and if the answer is yes, implement it\n  return <span class={cls} role=\"separator\" aria-orientation=\"horizontal\"></span>;\n}\n"],"names":["styles","orientation","interpolations","class","styleInterpolations","mergeInterpolations","Divider","cls"],"mappings":";;;;;;;;;;AAmBA,MAAAA,MAAA,GAAA;AACEC,EAAAA,WAAA,EAAA;;AAAA,GAAA;AADF,CAAA,CAAA;AAeA,MAAAC,cAAA,GAAA;;;AAEIC,EAAAA,KAAA,EAAAH,MAAA,CAAAC,WAAA,CAAAA,WAAA,CAAA;EAFJ,CAAA,CAAA;AAMA,MAAAG,mBAAA,GAAAC,mBAAA,CAAAH,cAAA,CAAA;;AAGA,SAAAI,OAAA,GAAA;EACE,MAAA;AAAAH,IAAAA,KAAA,EAAAI,GAAAA;AAAA,GAAA,GAAAH,mBAAA,CAAA;AAAAH,IAAAA,WAAA,EAAA,YAAA;GAAA,CAAA,CADF;;;;;;;AAKA;;;;;;;"}