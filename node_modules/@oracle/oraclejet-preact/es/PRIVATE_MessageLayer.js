/* @oracle/oraclejet-preact: 14.1.0 */
import { jsx } from 'preact/jsx-runtime';
import "./PRIVATE_MessageLayer.css";
import { useUser } from './hooks/UNSAFE_useUser.js';
import { stringLiteralArray } from './utils/UNSAFE_arrayUtils.js';
import { classNames } from './utils/UNSAFE_classNames.js';
import { Flex } from './UNSAFE_Flex.js';
import { WindowOverlay } from './UNSAFE_WindowOverlay.js';
import 'preact/hooks';
import './UNSAFE_Environment.js';
import 'preact';
import './UNSAFE_Layer.js';
import 'preact/compat';
import './tslib.es6-821b2d99.js';
import './utils/UNSAFE_interpolations/dimensions.js';
import './utils/UNSAFE_size.js';
import './_curry1-ab762f3c.js';
import './utils/UNSAFE_mergeInterpolations.js';
import './_curry3-77af75f1.js';
import './_curry2-9cf34233.js';
import './_has-e54ed87c.js';
import './utils/UNSAFE_interpolations/boxalignment.js';
import './keys-6f2f2841.js';
import './utils/UNSAFE_interpolations/flexbox.js';
import './utils/UNSAFE_interpolations/flexitem.js';

const positions = stringLiteralArray(['top', 'top-left', 'top-right', 'top-start', 'top-end', 'bottom', 'bottom-left', 'bottom-right', 'bottom-start', 'bottom-end']);
const styles = {
  notificationPosition: "_16ik9hw",
  ['top-left']: "akd4h6",
  top: "urs9gb",
  ['top-right']: "_40to3k",
  ['bottom-left']: "i8j16y",
  bottom: "_183xiko",
  ['bottom-right']: "_1q3l9t"
};

const MessageLayer = ({
  children,
  offset,
  testId,
  position = 'bottom'
}) => {
  var _a, _b;

  const {
    direction
  } = useUser();
  const isLtr = direction === 'ltr';
  let logicalPosition;

  switch (position) {
    case 'top-start':
      logicalPosition = isLtr ? styles['top-left'] : styles['top-right'];
      break;

    case 'top-end':
      logicalPosition = isLtr ? styles['top-right'] : styles['top-left'];
      break;

    case 'bottom-start':
      logicalPosition = isLtr ? styles['bottom-left'] : styles['bottom-right'];
      break;

    case 'bottom-end':
      logicalPosition = isLtr ? styles['bottom-right'] : styles['bottom-left'];
      break;

    default:
      logicalPosition = styles[position];
      break;
  }

  const positionClasses = classNames([styles.notificationPosition, logicalPosition]);
  const offsetStyle = typeof offset === 'number' ? {
    '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${offset}px`,
    '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${offset}px`
  } : {
    '--oj-c-PRIVATE-DO-NOT-USE-notification-vertical-offset': `${(_a = offset === null || offset === void 0 ? void 0 : offset.vertical) !== null && _a !== void 0 ? _a : 0}px`,
    '--oj-c-PRIVATE-DO-NOT-USE-notification-horizontal-offset': `${(_b = offset === null || offset === void 0 ? void 0 : offset.horizontal) !== null && _b !== void 0 ? _b : 0}px`
  };
  return jsx(WindowOverlay, {
    children: jsx("div", Object.assign({
      class: positionClasses,
      "data-testid": testId,
      style: offset !== undefined ? offsetStyle : undefined
    }, {
      children: jsx(Flex, Object.assign({
        direction: "column",
        gap: "2x"
      }, {
        children: children
      }))
    }))
  });
};

export { MessageLayer, positions };
/*  */
//# sourceMappingURL=PRIVATE_MessageLayer.js.map
