{"version":3,"file":"LoadMoreCollection-735f7102.js","sources":["../../src/UNSAFE_LoadMoreCollection/LoadMoreCollection.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { RefObject, ComponentChildren } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport { DataState, ItemContext, Range, Metadata } from '../UNSAFE_Collection';\nimport { Collection } from '../PRIVATE_Collection';\nimport { useViewportIntersect, ViewportConfig } from '../hooks/UNSAFE_useViewportIntersect';\n\n/**\n * Props for the VirtualizedCollection component\n */\ntype Props<K, D> = {\n  /**\n   * A DataState object that provide information including data and metadata to the VirtualizedCollection.\n   */\n  data: DataState<K, D> | null;\n\n  /**\n   * Renderer callback used to render each item\n   */\n  children: (context: ItemContext<{ data: D; metadata: Metadata<K> }>) => ComponentChildren;\n\n  /**\n   * Viewport configuration including specifying the element which is used to determine what range\n   * of data to render\n   */\n  viewportConfig: ViewportConfig;\n\n  /**\n   * Callback function to handle when viewport has changed, including the case\n   * where user scrolls to the end of the component and there are more items to load.\n   * The function should sets a new DataState on the component for the specified range.\n   */\n  onLoadRange: (range: Range) => void;\n\n  /**\n   * Optionally specify the custom load more indicator\n   */\n  loadMoreIndicator?: ComponentChildren;\n\n  /**\n   * Optionally provide the suggestion indicator sparkle\n   */\n  suggestions?: ComponentChildren;\n};\n\nconst isDataStateValid = <K, D>(dataState: DataState<K, D>) => {\n  return dataState && dataState.data && dataState.offset >= 0 && dataState.totalSize >= 0;\n};\n\nconst DEFAULT_MARGIN = 1;\nconst DEFAULT_FETCH_SIZE = 25;\n\nconst LOADMORE_STYLE_CLASS = 'oj-collection-loadmore';\nconst LOAD_MORE_SELECTOR = `.${LOADMORE_STYLE_CLASS}`;\n\n/**\n * Component that only render items in the specified viewport.\n * @param props\n */\nexport function LoadMoreCollection<K, D>({\n  data,\n  children,\n  viewportConfig,\n  onLoadRange,\n  loadMoreIndicator,\n  suggestions\n}: Props<K, D>) {\n  const rootRef: RefObject<any> = useRef<HTMLElement>(null);\n  const fetchSizeRef: RefObject<number> = useRef<number>(-1);\n\n  // detect if viewport has changed and it needs to re-render based on a new range\n  useViewportIntersect(viewportConfig, DEFAULT_MARGIN, LOAD_MORE_SELECTOR, () => {\n    if (data) {\n      if (fetchSizeRef.current == null || fetchSizeRef.current <= 0) {\n        fetchSizeRef.current = data.totalSize;\n      }\n      const fetchSize =\n        fetchSizeRef.current && fetchSizeRef.current > 0\n          ? fetchSizeRef.current\n          : DEFAULT_FETCH_SIZE;\n      onLoadRange({\n        offset: 0,\n        count: data.totalSize + fetchSize\n      });\n    }\n  });\n\n  // override itemRenderer to adjust the index\n  const _getItemRenderer = (startIndex: number) => {\n    // returns a new render function\n    return (context: ItemContext<{ data: D; metadata: Metadata<K> }>) => {\n      const itemContext: ItemContext<{ data: D; metadata: Metadata<K> }> = {\n        index: startIndex + context.index,\n        data: context.data\n      };\n      return children(itemContext);\n    };\n  };\n\n  // if DataState is invalid (including not specified), just render blank\n  if (!data || !isDataStateValid(data)) {\n    return <div ref={rootRef} />;\n  }\n\n  const dataState = data;\n  const rangeData = dataState.data;\n  const offset = dataState.offset;\n  const endIndex = offset + rangeData.length;\n  const itemCount = dataState.totalSize;\n\n  const renderLoadMore =\n    loadMoreIndicator && dataState.sizePrecision === 'atLeast' && endIndex <= itemCount;\n\n  // might need to support elementType prop in the future to allow customization of what\n  // type of element to render for the root\n  return (\n    <div ref={rootRef}>\n      {suggestions}\n      <Collection items={rangeData}>{_getItemRenderer(offset)}</Collection>\n      {renderLoadMore && <div class={LOADMORE_STYLE_CLASS}>{loadMoreIndicator}</div>}\n    </div>\n  );\n}\n"],"names":["_jsx","_jsxs"],"mappings":"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"}