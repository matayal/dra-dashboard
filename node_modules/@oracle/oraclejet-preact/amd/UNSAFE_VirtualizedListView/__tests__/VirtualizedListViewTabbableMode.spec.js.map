{"version":3,"file":"VirtualizedListViewTabbableMode.spec.js","sources":["../../../../src/UNSAFE_VirtualizedListView/__tests__/VirtualizedListViewTabbableMode.spec.tsx"],"sourcesContent":["/**\n * VirtualizedListView tests pertaining to single and multi-select with mouse and keyboard\n */\nimport { JSX } from 'preact';\nimport { useRef, useState } from 'preact/hooks';\n\nimport { DataState, ListItemContext, Range } from '../../UNSAFE_Collection';\nimport { useTabbableMode } from '../../hooks/UNSAFE_useTabbableMode';\nimport { Flex } from '../../UNSAFE_Flex';\nimport { VirtualizedListView } from '../VirtualizedListView';\n\nimport { setupIntersectionObserverMock } from '../../../test/mocks/mockIntersectionObserver';\nimport {\n  Props,\n  testTabbableMode\n} from '../../PRIVATE_List/__tests__/shared/listViewTabbableModeTests';\n\n/**\n * Declare some tabbableMode aware components\n */\nconst Button = (props: JSX.HTMLAttributes<HTMLButtonElement>) => {\n  const { tabbableModeProps } = useTabbableMode();\n  return <button tabIndex={tabbableModeProps.tabIndex} {...props} />;\n};\n\nconst Input = (props: JSX.HTMLAttributes<HTMLInputElement>) => {\n  const { tabbableModeProps } = useTabbableMode();\n  return <input tabIndex={tabbableModeProps.tabIndex} {...props} />;\n};\n\ntype Employee<K> = {\n  id: K;\n  name: string;\n};\n\nfunction TestComposition<K extends string | number>({ data }: Props<K>) {\n  const rootRef = useRef(null);\n  const [currentKey, setCurrentKey] = useState<K | undefined>(undefined);\n  const [dataState, setDataState] = useState<DataState<K, Employee<K>>>({\n    offset: 0,\n    data: data.slice(0, 25),\n    totalSize: data.length,\n    sizePrecision: 'exact'\n  });\n\n  const loadRange = (range: Range) => {\n    const startIndex = range.offset;\n    const endIndex = startIndex + range.count;\n    const newDataState = {\n      ...dataState,\n      offset: startIndex,\n      data: data.slice(startIndex, endIndex)\n    };\n    setDataState(newDataState);\n  };\n\n  const getConfig = () => {\n    return {\n      scroller: () => {\n        return rootRef.current;\n      }\n    };\n  };\n\n  return (\n    <div style=\"height: 200px;overflow: auto\" ref={rootRef}>\n      <button>Preceding Button</button>\n      <VirtualizedListView\n        accessibleSummary=\"Basic list\"\n        data={dataState}\n        currentKey={currentKey}\n        viewportConfig={getConfig()}\n        onCurrentKeyChange={(detail) => setCurrentKey(detail.value)}\n        onLoadRange={loadRange}>\n        {(context: ListItemContext<K, Employee<K>>) => (\n          <Flex>\n            {context.selector && context.selector()}\n            <div className=\"item\" style={{ height: '20px', padding: '0.75rem' }}>\n              <Input data-testid={'input-' + context.data.id} />\n              <span>{context.data.name}</span>\n              <Button data-testid={'button-' + context.data.id}>Inside Button</Button>\n            </div>\n          </Flex>\n        )}\n      </VirtualizedListView>\n      <button>Following Button</button>\n    </div>\n  );\n}\n\ndescribe('Test VirtualizedListView component Selection', () => {\n  beforeEach(() => {\n    if (!window.IntersectionObserver) {\n      setupIntersectionObserverMock();\n    }\n  });\n  testTabbableMode.bind(this)(TestComposition);\n});\n"],"names":["Button","props","tabbableModeProps","useTabbableMode","_jsx","Object","assign","tabIndex","Input","TestComposition","data","rootRef","useRef","currentKey","setCurrentKey","useState","undefined","dataState","setDataState","offset","slice","totalSize","length","sizePrecision","_jsxs","style","ref","children","jsx","VirtualizedListView","accessibleSummary","viewportConfig","scroller","current","onCurrentKeyChange","detail","value","onLoadRange","range","startIndex","endIndex","count","newDataState","context","Flex","selector","className","height","padding","id","name","describe","beforeEach","window","IntersectionObserver","setupIntersectionObserverMock","testTabbableMode","bind","this"],"mappings":"u9EAoBA,MAAMA,GAAUC,IACd,MAAMC,kBAAEA,GAAsBC,EAAAA,kBAC9B,OAAOC,MAAA,SAAAC,OAAAC,OAAA,CAAQC,SAAUL,EAAkBK,UAAcN,KAGrDO,GAASP,IACb,MAAMC,kBAAEA,GAAsBC,EAAAA,kBAC9B,OAAOC,MAAA,QAAAC,OAAAC,OAAA,CAAOC,SAAUL,EAAkBK,UAAcN,KAQ1D,SAASQ,IAA2CC,KAAEA,IACpD,MAAMC,EAAUC,SAAO,OAChBC,EAAYC,GAAiBC,EAAQA,cAAgBC,IACrDC,EAAWC,GAAgBH,WAAoC,CACpEI,OAAQ,EACRT,KAAMA,EAAKU,MAAM,EAAG,IACpBC,UAAWX,EAAKY,OAChBC,cAAe,UAsBjB,OACEC,OAAA,MAAAnB,OAAAC,OAAA,CAAKmB,MAAM,+BAA+BC,IAAKf,GAAO,CAAAgB,SAAA,CACpDvB,EAAiCwB,IAAA,SAAA,CAAAD,SAAA,qBACjCvB,EAACwB,IAAAC,EAAmBA,oBAClBxB,OAAAC,OAAA,CAAAwB,kBAAkB,aAClBpB,KAAMO,EACNJ,WAAYA,EACZkB,eAdG,CACLC,SAAU,IACDrB,EAAQsB,SAafC,mBAAqBC,GAAWrB,EAAcqB,EAAOC,OACrDC,YA5BaC,IACjB,MAAMC,EAAaD,EAAMnB,OACnBqB,EAAWD,EAAaD,EAAMG,MAC9BC,EACDrC,OAAAC,OAAAD,OAAAC,OAAA,GAAAW,IACHE,OAAQoB,EACR7B,KAAMA,EAAKU,MAAMmB,EAAYC,KAE/BtB,EAAawB,KAoBa,CAAAf,SACpBgB,GACAnB,EAAAA,KAACoB,EAAAA,KACE,CAAAjB,SAAA,CAAAgB,EAAQE,UAAYF,EAAQE,WAC7BrB,OAAK,MAAAnB,OAAAC,OAAA,CAAAwC,UAAU,OAAOrB,MAAO,CAAEsB,OAAQ,OAAQC,QAAS,YACtD,CAAArB,SAAA,CAAAvB,EAAAwB,IAACpB,GAAK,CAAA,cAAc,SAAWmC,EAAQjC,KAAKuC,KAC5C7C,EAAAA,IAAA,OAAA,CAAAuB,SAAOgB,EAAQjC,KAAKwC,OACpB9C,MAACJ,GAAMK,OAAAC,OAAA,CAAA,cAAc,UAAYqC,EAAQjC,KAAKuC,IAAE,CAAAtB,SAAA,6BAKxDvB,EAAAwB,IAAA,SAAA,CAAAD,SAAA,yBAKNwB,SAAS,+CAAgD,KACvDC,WAAW,KACJC,OAAOC,sBACVC,EAAAA,kCAGJC,EAAAA,iBAAiBC,UAAKC,EAAtBF,CAA4B/C"}