{"version":3,"file":"Heading.spec.js","sources":["../../../../src/UNSAFE_Heading/__test__/Heading.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { Heading } from '../Heading';\nimport { Text } from '../../UNSAFE_Text';\nimport { Link } from '../../UNSAFE_Link';\nimport userEvent from '@testing-library/user-event';\n\ndescribe('Test Heading component', () => {\n  it('default Heading', async function () {\n    const content = render(<Heading as=\"h1\">Hello world</Heading>);\n    const h1 = await content.findByText('Hello world');\n    const classList = h1.parentElement?.classList;\n    expect(h1).not.null;\n    expect(classList?.length).equals(2);\n  });\n\n  it('heading text lineClamp applies css class and lineClamp value', async () => {\n    const content = render(\n      <Heading as=\"h1\">\n        <Text lineClamp={4}>Hello world with lineClamp</Text>\n      </Heading>\n    );\n    const span = await content.findByText('Hello world with lineClamp');\n    const lineClampValue = (span as HTMLElement).parentElement?.style.webkitLineClamp;\n    // @ts-ignore\n    const classList = span.parentElement?.classList;\n    expect(classList?.length).equals(6);\n    expect(lineClampValue).equals('4');\n  });\n  it('Heading text truncation applies css class', async () => {\n    const content = render(\n      <Heading as=\"h1\">\n        <Text truncation=\"ellipsis\">Hello world</Text>\n      </Heading>\n    );\n    const span = await content.findByText('Hello world');\n    // @ts-ignore\n    const classList = span.parentElement?.classList;\n    expect(classList?.length).equals(6);\n  });\n  it('Heading link applies default CSS classes', async function () {\n    const content = render(\n      <Heading as=\"h1\">\n        <Link href=\"#\">Link</Link>\n      </Heading>\n    );\n    const firstElement = await content.findByText('Link');\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(2);\n  });\n\n  it('Heading link variant selected', async function () {\n    const content = render(\n      <Heading as=\"h1\">\n        <Link href=\"#\" variant=\"primary\">\n          Link\n        </Link>\n      </Heading>\n    );\n    const firstElement = await content.findByText('Link');\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(3);\n  });\n\n  it('Heading link event', async function () {\n    let count = 0;\n    const increment = () => count++;\n    const content = render(\n      <Heading as=\"h1\">\n        <Link href=\"#\" onClick={increment}>\n          Link\n        </Link>\n      </Heading>\n    );\n    const link = await content.findByText('Link');\n    expect(link).not.null;\n    userEvent.click(link);\n    expect(count).equals(1);\n  });\n\n  it('has id property', async function () {\n    const content = render(\n      <Heading as=\"h1\" id=\"heading1\">\n        Heading 1\n      </Heading>\n    );\n    const heading = await content.findByText('Heading 1');\n    const id = heading.parentElement?.getAttribute('id');\n    expect(id).to.equal('heading1');\n  });\n});\n"],"names":["describe","it","async","content","render","_jsx","jsx","Heading","Object","assign","as","children","h1","findByText","classList","_a","parentElement","expect","not","null","length","equals","Text","lineClamp","span","lineClampValue","style","webkitLineClamp","_b","truncation","Link","href","variant","count","onClick","link","userEvent","click","id","getAttribute","to","equal"],"mappings":"8qBAOAA,SAAS,yBAA0B,KACjCC,GAAG,kBAAmBC,uBACpB,MAAMC,EAAUC,EAAMA,OAACC,EAACC,IAAAC,EAAOA,QAACC,OAAAC,OAAA,CAAAC,GAAG,MAA0B,CAAAC,SAAA,kBACvDC,QAAWT,EAAQU,WAAW,eAC9BC,EAA4B,QAAhBC,EAAAH,EAAGI,qBAAa,IAAAD,OAAA,EAAAA,EAAED,UACpCG,EAAAA,OAAOL,GAAIM,IAAIC,KACfF,EAAAA,OAAOH,MAAAA,SAAAA,EAAWM,QAAQC,OAAO,KAGnCpB,GAAG,+DAAgEC,kBACjE,MAAMC,EAAUC,EAAAA,OACdC,MAACE,UAAOC,OAAAC,OAAA,CAACC,GAAG,gBACVL,EAAAA,IAACiB,EAAIA,oBAACC,UAAW,GAAoC,CAAAZ,SAAA,oCAGnDa,QAAarB,EAAQU,WAAW,8BAChCY,EAAsD,QAArCV,EAACS,EAAqBR,qBAAe,IAAAD,OAAA,EAAAA,EAAAW,MAAMC,gBAE5Db,EAA8B,QAAlBc,EAAAJ,EAAKR,qBAAa,IAAAY,OAAA,EAAAA,EAAEd,UACtCG,EAAAA,OAAOH,MAAAA,SAAAA,EAAWM,QAAQC,OAAO,GACjCJ,EAAAA,OAAOQ,GAAgBJ,OAAO,OAEhCpB,GAAG,4CAA6CC,gBAC9C,MAAMC,EAAUC,EAAAA,OACdC,MAACE,UAAOC,OAAAC,OAAA,CAACC,GAAG,gBACVL,EAAAA,IAACiB,EAAIA,oBAACO,WAAW,YAA6B,CAAAlB,SAAA,qBAK5CG,EAA8B,QAAlBC,SAFCZ,EAAQU,WAAW,gBAEfG,qBAAa,IAAAD,OAAA,EAAAA,EAAED,UACtCG,EAAAA,OAAOH,MAAAA,SAAAA,EAAWM,QAAQC,OAAO,KAEnCpB,GAAG,2CAA4CC,iBAC7C,MAAMC,EAAUC,EAAAA,OACdC,MAACE,UAAOC,OAAAC,OAAA,CAACC,GAAG,gBACVL,EAAAA,IAACyB,EAAIA,oBAACC,KAAK,KAAe,CAAApB,SAAA,cAKxBG,SAFqBX,EAAQU,WAAW,SAEfC,UAC/BG,EAAAA,OAAOH,EAAUM,QAAQC,OAAO,KAGlCpB,GAAG,gCAAiCC,iBAClC,MAAMC,EAAUC,EAAAA,OACdC,EAAAC,IAACC,EAAOA,QAACC,OAAAC,OAAA,CAAAC,GAAG,MACV,CAAAC,SAAAN,EAAAA,IAACyB,EAAAA,KAAKtB,OAAAC,OAAA,CAAAsB,KAAK,IAAIC,QAAQ,WAAS,CAAArB,SAAA,cAO9BG,SAFqBX,EAAQU,WAAW,SAEfC,UAC/BG,EAAAA,OAAOH,EAAUM,QAAQC,OAAO,KAGlCpB,GAAG,qBAAsBC,iBACvB,IAAI+B,EAAQ,EACZ,MACM9B,EAAUC,EAAAA,OACdC,EAAAC,IAACC,EAAOA,QAACC,OAAAC,OAAA,CAAAC,GAAG,MACV,CAAAC,SAAAN,EAAAA,IAACyB,EAAAA,KAAKtB,OAAAC,OAAA,CAAAsB,KAAK,IAAIG,QAHD,IAAMD,KAGa,CAAAtB,SAAA,cAK/BwB,QAAahC,EAAQU,WAAW,QACtCI,EAAAA,OAAOkB,GAAMjB,IAAIC,KACjBiB,UAAUC,MAAMF,GAChBlB,EAAAA,OAAOgB,GAAOZ,OAAO,KAGvBpB,GAAG,kBAAmBC,uBACpB,MAAMC,EAAUC,EAAAA,OACdC,EAAAA,IAACE,EAAAA,QAAQC,OAAAC,OAAA,CAAAC,GAAG,KAAK4B,GAAG,YAAU,CAAA3B,SAAA,gBAK1B2B,EAA0B,QAArBvB,SADWZ,EAAQU,WAAW,cACtBG,qBAAa,IAAAD,OAAA,EAAAA,EAAEwB,aAAa,MAC/CtB,EAAAA,OAAOqB,GAAIE,GAAGC,MAAM"}