define(["preact/jsx-runtime","../../../useFocusWithin-f0637e98","@testing-library/preact","chai","sinon","preact/hooks"],function(e,t,i,n,c,s){"use strict";function o(i){const{focusProps:n,isFocused:c}=t.useFocusWithin(i);return e.jsxs("div",{children:[e.jsx("div",Object.assign({},n,{children:e.jsx("input",{id:"insideInput"})})),c&&e.jsx("span",{children:"Focused"}),e.jsx("input",{id:"outsideInput"})]})}describe("useFocusWithin tests",()=>{it("should call the callbacks correctly",async()=>{const t=c.spy(),s=c.spy(),{container:u}=i.render(e.jsx(o,{onFocusWithin:t,onBlurWithin:s})),l=u.querySelector("#insideInput"),a=u.querySelector("#outsideInput");null==l||l.focus(),await i.waitFor(()=>n.expect(t.calledOnceWithExactly(c.match({type:"focusin"})),"onFocusWithin called").be.true),null==a||a.focus(),await i.waitFor(()=>n.expect(t.calledOnceWithExactly(c.match({type:"focusin"})),"onBlurWithin called").be.true)}),it("should not call the callbacks when disabled",async()=>{const t=c.spy(),s=c.spy(),{container:u}=i.render(e.jsx(o,{onFocusWithin:t,onBlurWithin:s,isDisabled:!0})),l=u.querySelector("#insideInput"),a=u.querySelector("#outsideInput");null==l||l.focus(),await i.waitFor(()=>n.expect(t.notCalled,"onFocusWithin not called").be.true),null==a||a.focus(),await i.waitFor(()=>n.expect(s.notCalled,"onBlurWithin not called").be.true)})})});
//# sourceMappingURL=useFocusWithin.spec.js.map
