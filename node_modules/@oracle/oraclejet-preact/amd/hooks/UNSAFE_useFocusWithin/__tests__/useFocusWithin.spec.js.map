{"version":3,"file":"useFocusWithin.spec.js","sources":["../../../../../src/hooks/UNSAFE_useFocusWithin/__tests__/useFocusWithin.spec.tsx"],"sourcesContent":["import { useFocusWithin } from '../useFocusWithin';\n// import { render, waitFor, waitForElementToBeRemoved } from '@testing-library/preact';\nimport { render, waitFor } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { match, spy } from 'sinon';\n\ntype TestComponentProps = {\n  isDisabled?: boolean;\n  onBlurWithin?: (e: FocusEvent) => void;\n  onFocusWithin?: (e: FocusEvent) => void;\n};\nfunction TestComponent(props: TestComponentProps) {\n  const { focusProps, isFocused } = useFocusWithin(props);\n  return (\n    <div>\n      <div {...focusProps}>\n        <input id=\"insideInput\" />\n      </div>\n      {isFocused && <span>Focused</span>}\n      <input id=\"outsideInput\" />\n    </div>\n  );\n}\n\ndescribe('useFocusWithin tests', () => {\n  // TODO: Figure out why this test is timing out in Jest.\n  // it('should correctly set the isFocused boolean', async () => {\n  //   const { container } = render(<TestComponent />);\n\n  //   const inputElement = container.querySelector<HTMLInputElement>('#insideInput');\n  //   const outerInputElement = container.querySelector<HTMLInputElement>('#outsideInput');\n  //   // check that the isFocused is false initially\n  //   expect(container.querySelector('span'), 'focused text is not present').be.null;\n\n  //   // focus the input element and check for the flag\n  //   inputElement?.focus();\n  //   await waitFor(\n  //     () => expect(container.querySelector('span'), 'focused text is present').not.be.null\n  //   );\n\n  //   // focus outside and check for the flag\n  //   outerInputElement?.focus();\n  //   await waitForElementToBeRemoved(container.querySelector('span'));\n  // });\n\n  it('should call the callbacks correctly', async () => {\n    const onFocus = spy();\n    const onBlur = spy();\n    const { container } = render(<TestComponent onFocusWithin={onFocus} onBlurWithin={onBlur} />);\n\n    const inputElement = container.querySelector<HTMLInputElement>('#insideInput');\n    const outerInputElement = container.querySelector<HTMLInputElement>('#outsideInput');\n\n    // focus the input element and check for the flag\n    inputElement?.focus();\n    await waitFor(\n      () =>\n        expect(onFocus.calledOnceWithExactly(match({ type: 'focusin' })), 'onFocusWithin called').be\n          .true\n    );\n\n    // focus outside and check for the flag\n    outerInputElement?.focus();\n    await waitFor(\n      () =>\n        expect(onFocus.calledOnceWithExactly(match({ type: 'focusin' })), 'onBlurWithin called').be\n          .true\n    );\n  });\n\n  it('should not call the callbacks when disabled', async () => {\n    const onFocus = spy();\n    const onBlur = spy();\n    const { container } = render(\n      <TestComponent onFocusWithin={onFocus} onBlurWithin={onBlur} isDisabled={true} />\n    );\n\n    const inputElement = container.querySelector<HTMLInputElement>('#insideInput');\n    const outerInputElement = container.querySelector<HTMLInputElement>('#outsideInput');\n\n    // focus the input element and check for the flag\n    inputElement?.focus();\n    await waitFor(() => expect(onFocus.notCalled, 'onFocusWithin not called').be.true);\n\n    // focus outside and check for the flag\n    outerInputElement?.focus();\n    await waitFor(() => expect(onBlur.notCalled, 'onBlurWithin not called').be.true);\n  });\n});\n"],"names":["TestComponent","props","focusProps","isFocused","useFocusWithin","_jsxs","_jsx","Object","assign","id","jsx","children","describe","it","async","onFocus","spy","onBlur","container","render","onFocusWithin","onBlurWithin","inputElement","querySelector","outerInputElement","focus","waitFor","expect","calledOnceWithExactly","match","type","be","true","isDisabled","notCalled"],"mappings":"4JAWA,SAASA,EAAcC,GACrB,MAAMC,WAAEA,EAAUC,UAAEA,GAAcC,EAAcA,eAACH,GACjD,OACEI,EAAAA,sBACEC,EAAAA,IAAS,MAAAC,OAAAC,OAAA,GAAAN,YACPI,EAAAA,IAAO,QAAA,CAAAG,GAAG,mBAEXN,GAAaG,EAAoBI,IAAA,OAAA,CAAAC,SAAA,YAClCL,EAAOI,IAAA,QAAA,CAAAD,GAAG,oBAKhBG,SAAS,uBAAwB,KAqB/BC,GAAG,sCAAuCC,UACxC,MAAMC,EAAUC,EAAAA,MACVC,EAASD,EAAAA,OACTE,UAAEA,GAAcC,EAAMA,OAACb,MAACN,EAAa,CAACoB,cAAeL,EAASM,aAAcJ,KAE5EK,EAAeJ,EAAUK,cAAgC,gBACzDC,EAAoBN,EAAUK,cAAgC,iBAGpED,MAAAA,GAAAA,EAAcG,cACRC,UACJ,IACEC,SAAOZ,EAAQa,sBAAsBC,EAAAA,MAAM,CAAEC,KAAM,aAAe,wBAAwBC,GACvFC,MAIPR,MAAAA,GAAAA,EAAmBC,cACbC,UACJ,IACEC,SAAOZ,EAAQa,sBAAsBC,EAAAA,MAAM,CAAEC,KAAM,aAAe,uBAAuBC,GACtFC,QAITnB,GAAG,8CAA+CC,UAChD,MAAMC,EAAUC,EAAAA,MACVC,EAASD,EAAAA,OACTE,UAAEA,GAAcC,EAAMA,OAC1Bb,EAAAI,IAACV,EAAa,CAACoB,cAAeL,EAASM,aAAcJ,EAAQgB,YAAY,KAGrEX,EAAeJ,EAAUK,cAAgC,gBACzDC,EAAoBN,EAAUK,cAAgC,iBAGpED,MAAAA,GAAAA,EAAcG,cACRC,EAAOA,QAAC,IAAMC,EAAAA,OAAOZ,EAAQmB,UAAW,4BAA4BH,GAAGC,MAG7ER,MAAAA,GAAAA,EAAmBC,cACbC,EAAOA,QAAC,IAAMC,EAAAA,OAAOV,EAAOiB,UAAW,2BAA2BH,GAAGC"}