{"version":3,"file":"useAnimation.spec.js","sources":["../../../../../src/hooks/UNSAFE_useAnimation/__tests__/useAnimation.spec.tsx"],"sourcesContent":["import { useAnimation } from '../useAnimation';\nimport { render } from '@testing-library/preact';\nimport { renderHook } from '@testing-library/preact-hooks';\nimport { expect } from 'chai';\nimport { spy } from 'sinon';\n\nconst spyWAAPIAnimateFunction = spy(HTMLElement.prototype, 'animate');\n\nconst { result } = renderHook(() =>\n  useAnimation<'visible'>('visible', {\n    animationStates: {\n      visible: {\n        to: {\n          opacity: 1\n        }\n      }\n    }\n  })\n);\n\ntype TestComponentProps = { animationState: 'visible' | 'notVisible' };\n\nfunction TestComponent(props: TestComponentProps) {\n  const { nodeRef } = useAnimation<TestComponentProps['animationState'], HTMLDivElement>(\n    props.animationState,\n    {\n      animationStates: {\n        visible: {\n          to: {\n            opacity: 1\n          },\n          options: {\n            duration: 500\n          }\n        },\n        notVisible: {\n          to: {\n            opacity: 0\n          },\n          options: {\n            duration: 500\n          }\n        }\n      },\n      isAnimatedOnMount: true\n    }\n  );\n  return (\n    <div style={{ opacity: 0 }} ref={nodeRef}>\n      Hello world\n    </div>\n  );\n}\n\ndescribe('Test useAnimation hook', () => {\n  it('useAnimation returns a Ref value', async function () {\n    expect(result.current?.nodeRef).to.exist;\n  });\n  it('useAnimation returns a controller', async function () {\n    expect(result.current?.controller).to.exist;\n  });\n  it('WAAPI animate function is called', async function () {\n    //TODO: Test seems to be unstable on some browsers using karma, we have to comeback here and check\n    //why this could be happening\n    if (typeof jest !== 'undefined') {\n      const { rerender } = render(<TestComponent animationState=\"visible\"></TestComponent>);\n      rerender(<TestComponent animationState=\"notVisible\"></TestComponent>);\n      expect(spyWAAPIAnimateFunction.calledTwice).to.be.true;\n    }\n  });\n});\n"],"names":["spyWAAPIAnimateFunction","spy","HTMLElement","prototype","result","renderHook","useAnimation","animationStates","visible","to","opacity","TestComponent","props","nodeRef","animationState","options","duration","notVisible","isAnimatedOnMount","_jsx","Object","assign","style","ref","children","describe","it","async","expect","_a","current","exist","controller","jest","rerender","render","jsx","calledTwice","be","true"],"mappings":"4NAMA,MAAMA,EAA0BC,EAAAA,IAAIC,YAAYC,UAAW,YAErDC,OAAEA,GAAWC,EAAAA,WAAW,IAC5BC,EAAAA,aAAwB,UAAW,CACjCC,gBAAiB,CACfC,QAAS,CACPC,GAAI,CACFC,QAAS,QASnB,SAASC,EAAcC,GACrB,MAAMC,QAAEA,GAAYP,eAClBM,EAAME,eACN,CACEP,gBAAiB,CACfC,QAAS,CACPC,GAAI,CACFC,QAAS,GAEXK,QAAS,CACPC,SAAU,MAGdC,WAAY,CACVR,GAAI,CACFC,QAAS,GAEXK,QAAS,CACPC,SAAU,OAIhBE,mBAAmB,IAGvB,OACEC,EAAAA,IAAA,MAAAC,OAAAC,OAAA,CAAKC,MAAO,CAAEZ,QAAS,GAAKa,IAAKV,GAAO,CAAAW,SAAA,iBAM5CC,SAAS,yBAA0B,KACjCC,GAAG,mCAAoCC,uBACrCC,EAAAA,OAAqB,QAAdC,EAAAzB,EAAO0B,eAAO,IAAAD,OAAA,EAAAA,EAAEhB,SAASJ,GAAGsB,QAErCL,GAAG,oCAAqCC,uBACtCC,EAAAA,OAAqB,QAAdC,EAAAzB,EAAO0B,eAAO,IAAAD,OAAA,EAAAA,EAAEG,YAAYvB,GAAGsB,QAExCL,GAAG,mCAAoCC,iBAGrC,GAAoB,oBAATM,KAAsB,CAC/B,MAAMC,SAAEA,GAAaC,EAAAA,OAAOhB,EAAAiB,IAACzB,EAAa,CAACG,eAAe,aAC1DoB,EAASf,MAACR,EAAa,CAACG,eAAe,gBACvCc,EAAMA,OAAC5B,EAAwBqC,aAAa5B,GAAG6B,GAAGC"}