{"version":3,"file":"LoadMoreCollection.spec.js","sources":["../../../../src/UNSAFE_LoadMoreCollection/__tests__/LoadMoreCollection.spec.tsx"],"sourcesContent":["import { useRef, useState } from 'preact/hooks';\nimport { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { DataState, ItemContext, Range, Metadata } from '../../UNSAFE_Collection';\nimport { LoadMoreCollection } from '../LoadMoreCollection';\n\ntype Employee = {\n  id: string;\n  name: string;\n};\n\ntype Props = {\n  data: { data: Employee; metadata: Metadata<string> }[];\n};\nfunction TestComponent({ data }: Props) {\n  const rootRef = useRef(null);\n  const [dataState, setDataState] = useState<DataState<string, Employee>>({\n    offset: 0,\n    data: data.slice(0, 25),\n    totalSize: data.length,\n    sizePrecision: 'exact'\n  });\n\n  const loadRange = (range: Range) => {\n    const startIndex = range.offset;\n    const endIndex = startIndex + range.count;\n    const newDataState = {\n      ...dataState,\n      offset: startIndex,\n      data: data.slice(startIndex, endIndex)\n    };\n    setDataState(newDataState);\n  };\n\n  const getConfig = () => {\n    return {\n      scroller: () => {\n        return rootRef.current;\n      }\n    };\n  };\n\n  return (\n    <div style=\"height: 200px;overflow: auto\" ref={rootRef}>\n      <LoadMoreCollection data={dataState} viewportConfig={getConfig()} onLoadRange={loadRange}>\n        {(context: ItemContext<{ data: Employee; metadata: Metadata<string> }>) => (\n          <div\n            key={context.data.metadata.key}\n            className=\"item\"\n            style={{ height: '20px', padding: '0.75rem' }}>\n            {context.data.data.name}\n          </div>\n        )}\n      </LoadMoreCollection>\n    </div>\n  );\n}\n\nfunction populateData(count: number): Employee[] {\n  const data: Employee[] = [];\n  for (let i = 0; i < count; i++) {\n    data.push({ id: 'i' + i, name: 'Employee ' + i });\n  }\n  return data;\n}\n\ndescribe('Test VirtualizedCollection component', () => {\n  beforeEach(() => {\n    if (!window.IntersectionObserver) {\n      // IntersectionObserver isn't available in test environment\n      const MockIntersectionObserver = jest.fn();\n      MockIntersectionObserver.mockReturnValue({\n        observe: () => null,\n        unobserve: () => null,\n        disconnect: () => null\n      });\n\n      Object.defineProperty(global, 'IntersectionObserver', {\n        writable: true,\n        configurable: true,\n        value: MockIntersectionObserver\n      });\n    }\n  });\n\n  it('initial render', async function () {\n    const data = populateData(100);\n    const dataMetadata: { data: Employee; metadata: Metadata<string> }[] = data.map((data) => {\n      return { data: data, metadata: { key: data.id } };\n    });\n    const content = render(<TestComponent data={dataMetadata}></TestComponent>);\n    const emps = await content.queryAllByText('Employee', { exact: false });\n    expect(emps.length).eq(25);\n  });\n});\n"],"names":["TestComponent","data","rootRef","useRef","dataState","setDataState","useState","offset","slice","totalSize","length","sizePrecision","_jsx","Object","assign","style","ref","children","LoadMoreCollection","viewportConfig","scroller","current","onLoadRange","range","startIndex","endIndex","count","newDataState","context","className","height","padding","name","metadata","key","describe","beforeEach","window","IntersectionObserver","MockIntersectionObserver","jest","fn","mockReturnValue","observe","unobserve","disconnect","defineProperty","global","writable","configurable","value","it","async","dataMetadata","i","push","id","populateData","map","content","render","emps","queryAllByText","exact","expect","eq"],"mappings":"qQAcA,SAASA,GAAcC,KAAEA,IACvB,MAAMC,EAAUC,SAAO,OAChBC,EAAWC,GAAgBC,WAAsC,CACtEC,OAAQ,EACRN,KAAMA,EAAKO,MAAM,EAAG,IACpBC,UAAWR,EAAKS,OAChBC,cAAe,UAsBjB,OACEC,MAAA,MAAAC,OAAAC,OAAA,CAAKC,MAAM,+BAA+BC,IAAKd,GAC7C,CAAAe,SAAAL,EAAAA,IAACM,EAAAA,mBAAkBL,OAAAC,OAAA,CAACb,KAAMG,EAAWe,eAThC,CACLC,SAAU,IACDlB,EAAQmB,SAOiDC,YArBnDC,IACjB,MAAMC,EAAaD,EAAMhB,OACnBkB,EAAWD,EAAaD,EAAMG,MAC9BC,EACDd,OAAAC,OAAAD,OAAAC,OAAA,GAAAV,IACHG,OAAQiB,EACRvB,KAAMA,EAAKO,MAAMgB,EAAYC,KAE/BpB,EAAasB,KAcR,CAAAV,SAACW,GACAhB,EAAAA,IAEE,MAAAC,OAAAC,OAAA,CAAAe,UAAU,OACVd,MAAO,CAAEe,OAAQ,OAAQC,QAAS,YAAW,CAAAd,SAC5CW,EAAQ3B,KAAKA,KAAK+B,OAHdJ,EAAQ3B,KAAKgC,SAASC,WAmBvCC,SAAS,uCAAwC,KAC/CC,WAAW,KACT,IAAKC,OAAOC,qBAAsB,CAEhC,MAAMC,EAA2BC,KAAKC,KACtCF,EAAyBG,gBAAgB,CACvCC,QAAS,IAAM,KACfC,UAAW,IAAM,KACjBC,WAAY,IAAM,OAGpBhC,OAAOiC,eAAeC,OAAQ,uBAAwB,CACpDC,UAAU,EACVC,cAAc,EACdC,MAAOX,OAKbY,GAAG,iBAAkBC,iBACnB,MACMC,EA7BV,SAAsB3B,GACpB,MAAMzB,EAAmB,GACzB,IAAK,IAAIqD,EAAI,EAAGA,EAAI5B,EAAO4B,IACzBrD,EAAKsD,KAAK,CAAEC,GAAI,IAAMF,EAAGtB,KAAM,YAAcsB,IAE/C,OAAOrD,EAuBQwD,CAAa,KACkDC,IAAKzD,IACxE,CAAEA,KAAMA,EAAMgC,SAAU,CAAEC,IAAKjC,EAAKuD,OAEvCG,EAAUC,EAAMA,OAAChD,MAACZ,EAAc,CAAAC,KAAMoD,KACtCQ,QAAaF,EAAQG,eAAe,WAAY,CAAEC,OAAO,IAC/DC,EAAAA,OAAOH,EAAKnD,QAAQuD,GAAG"}