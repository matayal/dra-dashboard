{"version":3,"file":"MessageTimestamp.spec.js","sources":["../../../../src/PRIVATE_Message/__tests__/MessageTimestamp.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { MessageTimestamp } from '../MessageTimestamp';\nimport { formatTimestamp } from '../MessageFormattingUtils';\n\nconst todaysDate = new Date();\nconst pastDate = new Date(todaysDate);\npastDate.setUTCFullYear(2020);\nconst NNBC = /\\u202f/g;\nconst SPACE = ' ';\n// On Edge v110 there is a non-breaking whitespace between the time and the 'AM'/'PM'.\n// Even though the test and the the MessageTimestamp use the same formatter, findByText\n// cannot find the text on Edge v110. This is a fix we have used in other tests that\n// test date/time code.\nconst normalizeString = function (actual: string) {\n  return actual.replace(NNBC, SPACE);\n};\n\ndescribe('Test MessageTimestamp component', () => {\n  it(\"today's date\", async function () {\n    const isoString = todaysDate.toISOString();\n    const content = render(<MessageTimestamp value={isoString} />);\n\n    const text = normalizeString(formatTimestamp(isoString));\n    const timestamp = await content.findByText(text);\n    expect(timestamp).not.null;\n  });\n\n  it('past date', async function () {\n    const isoString = pastDate.toISOString();\n    const content = render(<MessageTimestamp value={isoString} />);\n\n    const text = normalizeString(formatTimestamp(isoString));\n    const timestamp = await content.findByText(text);\n    expect(timestamp).not.null;\n  });\n});\n"],"names":["todaysDate","Date","pastDate","setUTCFullYear","NNBC","normalizeString","actual","replace","describe","it","async","isoString","toISOString","content","render","_jsx","MessageTimestamp","value","text","formatTimestamp","timestamp","findByText","expect","not","null"],"mappings":"4ZAKA,MAAMA,EAAa,IAAIC,KACjBC,EAAW,IAAID,KAAKD,GAC1BE,EAASC,eAAe,MACxB,MAAMC,EAAO,UAMPC,EAAkB,SAAUC,GAChC,OAAOA,EAAOC,QAAQH,EANV,MASdI,SAAS,kCAAmC,KAC1CC,GAAG,eAAgBC,iBACjB,MAAMC,EAAYX,EAAWY,cACvBC,EAAUC,EAAMA,OAACC,MAACC,EAAAA,iBAAiB,CAAAC,MAAON,KAE1CO,EAAOb,EAAgBc,kBAAgBR,IACvCS,QAAkBP,EAAQQ,WAAWH,GAC3CI,EAAAA,OAAOF,GAAWG,IAAIC,OAGxBf,GAAG,YAAaC,iBACd,MAAMC,EAAYT,EAASU,cACrBC,EAAUC,EAAMA,OAACC,MAACC,EAAAA,iBAAiB,CAAAC,MAAON,KAE1CO,EAAOb,EAAgBc,kBAAgBR,IACvCS,QAAkBP,EAAQQ,WAAWH,GAC3CI,EAAAA,OAAOF,GAAWG,IAAIC"}