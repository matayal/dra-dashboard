{"version":3,"file":"SplitMenuButton.spec.js","sources":["../../../../src/UNSAFE_SplitMenuButton/__tests__/SplitMenuButton.spec.tsx"],"sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { SplitMenuButton } from '../SplitMenuButton';\nimport { MenuItem } from '../../UNSAFE_Menu';\n\nafterEach(cleanup);\n\ndescribe('Test SplitMenuButton component', () => {\n  it('render', async function () {\n    const content = render(\n      <SplitMenuButton label=\"Press Me\" onAction={() => null}></SplitMenuButton>\n    );\n    const label = await content.findByText('Press Me');\n    expect(label).not.null;\n  });\n\n  it('display text', async () => {\n    const content = render(\n      <SplitMenuButton label=\"SplitMenuButton\" onAction={() => null}></SplitMenuButton>\n    );\n    const label = await content.findByText('SplitMenuButton');\n    const endIcon = content.container.querySelector('.oj-c-button-layout-embedded-md');\n    expect(label).not.null;\n    expect(endIcon).not.null;\n  });\n});\n\nit('click', async function () {\n  let count = 0;\n  const increment = () => {\n    count++;\n  };\n  const content = render(\n    <div>\n      <SplitMenuButton label=\"Press Me\" onAction={increment}></SplitMenuButton>\n    </div>\n  );\n  const button = await content.findByText('Press Me');\n  expect(button).not.null;\n  fireEvent.click(button);\n  expect(count).to.equal(1);\n});\n\nit('ENTER', async function () {\n  let count = 0;\n  const increment = () => {\n    count++;\n  };\n  const content = render(<SplitMenuButton label=\"Press Me\" onAction={increment}></SplitMenuButton>);\n\n  const button = await content.container.firstElementChild;\n\n  expect(button).not.null;\n  if (button) {\n    fireEvent.keyDown(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n    fireEvent.keyUp(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n  }\n\n  expect(count).to.equal(1);\n});\n\nit('Space', async function () {\n  let count = 0;\n  const increment = () => {\n    count++;\n  };\n  const content = render(\n    <div>\n      <SplitMenuButton label=\"Press Me\" onAction={increment}></SplitMenuButton>\n      <span>{count}</span>\n    </div>\n  );\n  const button = await content.findByText('Press Me');\n  expect(button).not.null;\n  fireEvent.keyDown(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n  fireEvent.keyUp(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n  expect(count).to.equal(1);\n});\n\nit('Menu', async function () {\n  const increment = () => {\n    console.log('increment');\n  };\n  const content = render(\n    <SplitMenuButton label=\"Press Me\" onAction={increment}>\n      <MenuItem label=\"MenuItem1\" onAction={increment} />\n    </SplitMenuButton>\n  );\n  const button = await content.container.firstElementChild?.firstElementChild;\n  const iconButton = await button?.lastElementChild?.firstElementChild;\n\n  expect(iconButton).not.null;\n  if (iconButton) {\n    fireEvent.click(iconButton);\n  }\n});\n"],"names":["afterEach","cleanup","describe","it","async","content","render","_jsx","jsx","SplitMenuButton","label","onAction","findByText","expect","not","null","endIcon","container","querySelector","count","children","button","fireEvent","click","to","equal","firstElementChild","keyDown","code","key","keyCode","charCode","keyUp","_jsxs","charcode","increment","console","log","Object","assign","MenuItem","_a","iconButton","lastElementChild","_b"],"mappings":"mwDAKAA,UAAUC,EAAOA,SAEjBC,SAAS,iCAAkC,KACzCC,GAAG,SAAUC,iBACX,MAAMC,EAAUC,EAAAA,OACdC,EAACC,IAAAC,mBAAgBC,MAAM,WAAWC,SAAU,IAAM,QAE9CD,QAAcL,EAAQO,WAAW,YACvCC,EAAAA,OAAOH,GAAOI,IAAIC,OAGpBZ,GAAG,eAAgBC,UACjB,MAAMC,EAAUC,EAAAA,OACdC,EAACC,IAAAC,mBAAgBC,MAAM,kBAAkBC,SAAU,IAAM,QAErDD,QAAcL,EAAQO,WAAW,mBACjCI,EAAUX,EAAQY,UAAUC,cAAc,mCAChDL,EAAAA,OAAOH,GAAOI,IAAIC,KAClBF,EAAAA,OAAOG,GAASF,IAAIC,SAIxBZ,GAAG,QAASC,iBACV,IAAIe,EAAQ,EACZ,MAGMd,EAAUC,EAAAA,OACdC,EAAAA,IACE,MAAA,CAAAa,SAAAb,EAAAC,IAACC,EAAeA,gBAAC,CAAAC,MAAM,WAAWC,SALpB,KAChBQ,UAOIE,QAAehB,EAAQO,WAAW,YACxCC,EAAAA,OAAOQ,GAAQP,IAAIC,KACnBO,YAAUC,MAAMF,GAChBR,EAAAA,OAAOM,GAAOK,GAAGC,MAAM,KAGzBtB,GAAG,QAASC,iBACV,IAAIe,EAAQ,EACZ,MAGMd,EAAUC,EAAAA,OAAOC,EAAAC,IAACC,kBAAgB,CAAAC,MAAM,WAAWC,SAHvC,KAChBQ,QAIIE,QAAehB,EAAQY,UAAUS,kBAEvCb,EAAAA,OAAOQ,GAAQP,IAAIC,KACfM,IACFC,EAAAA,UAAUK,QAAQN,EAAQ,CAAEO,KAAM,QAASC,IAAK,QAASC,QAAS,GAAIC,SAAU,KAChFT,EAAAA,UAAUU,MAAMX,EAAQ,CAAEO,KAAM,QAASC,IAAK,QAASC,QAAS,GAAIC,SAAU,MAGhFlB,EAAAA,OAAOM,GAAOK,GAAGC,MAAM,KAGzBtB,GAAG,QAASC,iBACV,IAAIe,EAAQ,EACZ,MAGMd,EAAUC,SACd2B,EAAAA,sBACE1B,EAACC,IAAAC,kBAAgB,CAAAC,MAAM,WAAWC,SALpB,KAChBQ,OAKEZ,EAAAA,qBAAOY,QAGLE,QAAehB,EAAQO,WAAW,YACxCC,EAAAA,OAAOQ,GAAQP,IAAIC,KACnBO,EAAAA,UAAUK,QAAQN,EAAQ,CAAEO,KAAM,QAASC,IAAK,QAASC,QAAS,GAAII,SAAU,KAChFZ,EAAAA,UAAUU,MAAMX,EAAQ,CAAEO,KAAM,QAASC,IAAK,QAASC,QAAS,GAAII,SAAU,KAC9ErB,EAAAA,OAAOM,GAAOK,GAAGC,MAAM,KAGzBtB,GAAG,OAAQC,yBACT,MAAM+B,EAAY,KAChBC,QAAQC,IAAI,cAERhC,EAAUC,EAAAA,OACdC,EAACC,IAAAC,kBAAgB6B,OAAAC,OAAA,CAAA7B,MAAM,WAAWC,SAAUwB,GAC1C,CAAAf,SAAAb,EAAAC,IAACgC,WAAQ,CAAC9B,MAAM,YAAYC,SAAUwB,QAGpCd,QAAoD,QAArCoB,EAAApC,EAAQY,UAAUS,yBAAmB,IAAAe,OAAA,EAAAA,EAAAf,mBACpDgB,QAA6C,UAA1BrB,MAAAA,OAAM,EAANA,EAAQsB,wBAAkB,IAAAC,OAAA,EAAAA,EAAAlB,mBAEnDb,EAAAA,OAAO6B,GAAY5B,IAAIC,KACnB2B,GACFpB,YAAUC,MAAMmB"}