{"version":3,"file":"SelectSingle.spec.js","sources":["../../../../src/UNSAFE_SelectSingle/__tests__/SelectSingle.spec.tsx"],"sourcesContent":["import { ComponentProps } from 'preact';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { cleanup, fireEvent, render, waitFor } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { DataState, Range } from '../../UNSAFE_Collection';\nimport { KEYS } from '../../PRIVATE_SelectCommon';\nimport { SelectSingle } from '../SelectSingle';\nimport { ValueUpdateDetail } from '../../utils/UNSAFE_valueUpdateDetail';\nimport type { RootEnvironment } from '../../UNSAFE_Environment';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\n\nafterEach(cleanup);\n\nconst valueItem = { key: 'CH', data: { value: 'CH', label: 'Chrome' }, metadata: { key: 'CH' } };\nconst valueItem2 = { key: 'OP', data: { value: 'OP', label: 'Opera' }, metadata: { key: 'OP' } };\n\nconst noOp = () => {};\n\ntype Key = string;\ntype Data = {\n  value: string;\n  label: string;\n};\nconst items: Data[] = [\n  { value: 'IE', label: 'Internet Explorer' },\n  { value: 'FF', label: 'Firefox' },\n  { value: 'CH', label: 'Chrome' },\n  { value: 'OP', label: 'Opera' },\n  { value: 'SA', label: 'Safari' }\n];\nconst keyAttr = 'value';\n\ntype PickedPropsFromSelectSingle = Pick<\n  ComponentProps<typeof SelectSingle>,\n  | 'assistiveText'\n  | 'helpSourceLink'\n  | 'helpSourceText'\n  | 'isDisabled'\n  | 'isReadonly'\n  | 'isRequired'\n  | 'label'\n  | 'labelEdge'\n  | 'messages'\n  | 'placeholder'\n  | 'textAlign'\n  | 'userAssistanceDensity'\n  | 'valueItem'\n>;\ntype DemoSelectSingleProps = PickedPropsFromSelectSingle & {\n  data?: Data[];\n};\nfunction DemoSelectSingle({\n  assistiveText,\n  data = items,\n  helpSourceLink,\n  helpSourceText,\n  isDisabled,\n  isReadonly,\n  isRequired,\n  label,\n  labelEdge,\n  messages,\n  placeholder,\n  textAlign,\n  userAssistanceDensity,\n  valueItem\n}: DemoSelectSingleProps) {\n  const [myValue, setMyValue] = useState<Key | undefined>(valueItem?.key as string | undefined);\n  const [myValueItem, setMyValueItem] = useState(valueItem);\n  const handleCommit = useCallback(\n    (detail: ValueUpdateDetail<Key>) => {\n      if (myValue != detail.value) {\n        setMyValue(detail.value);\n\n        const item = data?.find((element) => element[keyAttr] === detail.value);\n        const newValueItem =\n          item === undefined\n            ? undefined\n            : {\n                key: item[keyAttr],\n                data: item,\n                metadata: { key: item[keyAttr] }\n              };\n        setMyValueItem(newValueItem);\n      }\n    },\n    [myValue]\n  );\n\n  const dataMapFunc = (value: any) => {\n    return { data: value, metadata: { key: value[keyAttr] } };\n  };\n\n  const dataMetadataRef = useRef(data?.map(dataMapFunc));\n\n  const [dataState, setDataState] = useState<DataState<string, Data> | null>({\n    offset: 0,\n    totalSize: dataMetadataRef.current?.length ?? 0,\n    sizePrecision: 'exact',\n    data: dataMetadataRef.current.slice(0, dataMetadataRef.current.length)\n  });\n\n  const [filter, setFilter] = useState('');\n\n  const handleFilter = useCallback(({ searchText }: { searchText?: string }) => {\n    setFilter(searchText ?? '');\n  }, []);\n\n  const delay = 0;\n\n  // this effect should only be run when filter has changed\n  const firstRender = useRef(true);\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    // put ListView into loading state\n    setDataState(null);\n\n    setTimeout(() => {\n      const dataToShow =\n        filter != null && filter.trim().length > 0\n          ? data?.filter((value: Data) => {\n              return value.label.toLowerCase().indexOf(filter.toLowerCase()) > -1;\n            })\n          : data;\n      dataMetadataRef.current = dataToShow?.map(dataMapFunc);\n      // update DataState to show the first 25 results\n      loadRange({ offset: 0, count: 25 });\n    }, delay);\n  }, [filter]);\n\n  const loadRange = (range: Range) => {\n    const startIndex = range.offset;\n    const endIndex = startIndex + range.count;\n    const newDataState: DataState<string, Data> = {\n      offset: startIndex,\n      totalSize: dataMetadataRef.current?.length ?? 0,\n      sizePrecision: 'exact',\n      data: dataMetadataRef.current.slice(startIndex, endIndex)\n    };\n    setDataState(newDataState);\n  };\n\n  return (\n    // <SelectSingle<Key, Data>\n    <SelectSingle\n      assistiveText={assistiveText}\n      data={dataState}\n      helpSourceLink={helpSourceLink}\n      helpSourceText={helpSourceText}\n      isDisabled={isDisabled}\n      isReadonly={isReadonly}\n      isRequired={isRequired}\n      itemText=\"label\"\n      label={label}\n      labelEdge={labelEdge}\n      messages={messages}\n      onCommit={handleCommit as any}\n      onFilter={handleFilter}\n      onLoadRange={loadRange}\n      placeholder={placeholder}\n      textAlign={textAlign}\n      userAssistanceDensity={userAssistanceDensity}\n      valueItem={myValueItem}\n    />\n  );\n}\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n\n// function TestSelectSingleComp(props: any) {\n//   const [commitDetail, setCommitDetail] = useState<any>();\n//   const handleCommit = (detail: any) => {\n//     setCommitDetail(detail);\n//   };\n//   const commitDetailValue = commitDetail?.value !== undefined ? commitDetail.value : '';\n//   return (\n//     <div>\n//       <SelectSingle {...props} onCommit={handleCommit} />\n//       <div>{commitDetailValue}</div>\n//     </div>\n//   );\n// }\n\ndescribe('Test SelectSingle component:', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n\n    // this was copied from ListView.spec.tsx, and appears to be needed for ListView\n    if (!window.IntersectionObserver) {\n      // IntersectionObserver isn't available in test environment\n      const MockIntersectionObserver = jest.fn();\n      MockIntersectionObserver.mockReturnValue({\n        observe: () => null,\n        unobserve: () => null,\n        disconnect: () => null\n      });\n\n      Object.defineProperty(global, 'IntersectionObserver', {\n        writable: true,\n        configurable: true,\n        value: MockIntersectionObserver\n      });\n    }\n  });\n\n  it('initialize with valueItem', async function () {\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <SelectSingle\n          itemText=\"label\"\n          label=\"Enabled\"\n          labelEdge=\"inside\"\n          valueItem={valueItem}\n          onCommit={noOp}\n        />\n      </RootEnvironmentProvider>\n    );\n\n    const input = await content.findByDisplayValue('Chrome');\n    expect(input, 'initial selected valueItem text shown').not.null;\n  });\n\n  it('programmatically change valueItem', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <SelectSingle\n          itemText=\"label\"\n          label=\"Enabled\"\n          labelEdge=\"inside\"\n          valueItem={valItem}\n          onCommit={noOp}\n        />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    let input = await content.findByDisplayValue('Chrome');\n    expect(input, 'initial selected valueItem text shown').not.null;\n\n    content.rerender(getComp(valueItem2));\n\n    input = await content.findByDisplayValue('Opera');\n    expect(input, 'changed selected valueItem text shown').not.null;\n  });\n\n  it('shows moves UserAssistance correctly on focus', async () => {\n    const { container, queryByText } = render(\n      <div>\n        <RootEnvironmentProvider environment={env}>\n          <SelectSingle\n            itemText=\"label\"\n            label=\"Enabled\"\n            labelEdge=\"inside\"\n            assistiveText=\"help instruction\"\n            onCommit={noOp}\n          />\n        </RootEnvironmentProvider>\n        <button />\n      </div>\n    );\n    const inputElement = container.querySelector('input');\n    const buttonElement = container.querySelector('button');\n\n    // check for no help.instruction initially\n    expect(queryByText('help instruction'), 'help instruction is not shown initially').be.null;\n\n    // focus input\n    inputElement?.focus();\n    waitFor(\n      () =>\n        expect(queryByText('help instruction'), 'help instruction is shown on focus').be.not.null\n    );\n\n    // focus outside\n    buttonElement?.focus();\n    waitFor(\n      () => expect(queryByText('help instruction'), 'help instruction is not shown on blur').be.null\n    );\n  });\n\n  it('open dropdown on dropdown arrow click', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n    const container = content.container;\n\n    const dropdownArrow = container.querySelector('span[aria-hidden=\"true\"][tabindex=\"-1\"]');\n    expect(dropdownArrow, 'dropdown arrow element found').not.null;\n\n    if (dropdownArrow) {\n      fireEvent.click(dropdownArrow);\n    }\n\n    const dropdown = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n  });\n\n  it('close dropdown on dropdown arrow click', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n    const container = content.container;\n\n    const dropdownArrow = container.querySelector('span[aria-hidden=\"true\"][tabindex=\"-1\"]');\n    expect(dropdownArrow, 'dropdown arrow element found').not.null;\n\n    if (dropdownArrow) {\n      fireEvent.click(dropdownArrow);\n    }\n\n    let dropdown: HTMLElement | null = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n\n    if (dropdownArrow) {\n      fireEvent.click(dropdownArrow);\n    }\n\n    // await waitForElementToBeRemoved(() => content.queryByText('Firefox'));\n    dropdown = content.queryByText('Firefox');\n    expect(dropdown, 'dropdown closed').null;\n  });\n\n  it('open dropdown on input mousedown', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.click(input);\n    fireEvent.mouseDown(input);\n\n    const dropdown = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n  });\n\n  it('open dropdown on down arrow keyup', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.type(input, '{ArrowDown}', { skipClick: true });\n    fireEvent.keyUp(input, { code: KEYS.DOWN });\n\n    const dropdown = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n  });\n\n  it('open dropdown on up arrow keyup', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.keyboard('[ArrowUp]');\n    fireEvent.keyUp(input, { code: KEYS.UP });\n\n    const dropdown = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n  });\n\n  it('close dropdown on Esc keydown', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.click(input);\n    fireEvent.mouseDown(input);\n\n    let dropdown: HTMLElement | null = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n\n    fireEvent.keyDown(input, { code: KEYS.ESC });\n\n    // await waitForElementToBeRemoved(() => content.queryByText('Firefox'));\n    dropdown = content.queryByText('Firefox');\n    expect(dropdown, 'dropdown closed').null;\n  });\n\n  it('close dropdown on Tab keydown in input', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.click(input);\n    fireEvent.mouseDown(input);\n\n    let dropdown: HTMLElement | null = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n\n    fireEvent.keyDown(input, { code: KEYS.TAB });\n\n    // await waitForElementToBeRemoved(() => content.queryByText('Firefox'));\n    dropdown = content.queryByText('Firefox');\n    expect(dropdown, 'dropdown closed').null;\n  });\n\n  it('close dropdown on Esc keydown in dropdown', async function () {\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.click(input);\n    fireEvent.mouseDown(input);\n\n    let dropdown: HTMLElement | null = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n\n    fireEvent.keyDown(dropdown, { code: KEYS.ESC });\n\n    // await waitForElementToBeRemoved(() => content.queryByText('Firefox'));\n    dropdown = content.queryByText('Firefox');\n    expect(dropdown, 'dropdown closed').null;\n  });\n\n  it('select item by clicking in dropdown', async function () {\n    const getComp = () => (\n      <RootEnvironmentProvider environment={env}>\n        <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" />\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp());\n\n    let input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.click(input);\n    fireEvent.mouseDown(input);\n\n    let listItem: HTMLElement | null = await content.findByText('Firefox');\n    expect(listItem, 'dropdown open').not.null;\n\n    fireEvent.click(listItem);\n\n    // await waitForElementToBeRemoved(() => content.queryByText('Firefox'));\n    listItem = content.queryByText('Firefox');\n    expect(listItem, 'dropdown closed').null;\n\n    input = await content.findByDisplayValue('Firefox');\n    expect(input, 'display value updated').not.null;\n  });\n\n  // The below tests are for:\n  // JET-53183 - core pack compat: stop propagation of handled events\n  // SelectSingle stops keydown events from propagating when it has handled them so that a parent\n  // collection component won't also handle them.\n\n  it('JET-53183 - propagation not stopped for Enter keydown in input', async function () {\n    let keyDownReceived = false;\n    const handleKeyDown = () => {\n      keyDownReceived = true;\n    };\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <div onKeyDown={handleKeyDown}>\n          <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n        </div>\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    fireEvent.keyDown(input, { code: KEYS.ENTER });\n\n    expect(keyDownReceived, 'propagation not stopped').to.be.true;\n  });\n\n  it('JET-53183 - propagation not stopped for Esc keydown in input when dropdown closed', async function () {\n    let keyDownReceived = false;\n    const handleKeyDown = () => {\n      keyDownReceived = true;\n    };\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <div onKeyDown={handleKeyDown}>\n          <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n        </div>\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    fireEvent.keyDown(input, { code: KEYS.ESC });\n\n    expect(keyDownReceived, 'propagation not stopped').to.be.true;\n  });\n\n  it('JET-53183 - propagation stopped for Esc keydown in input when dropdown open', async function () {\n    let keyDownReceived = false;\n    const handleKeyDown = () => {\n      keyDownReceived = true;\n    };\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <div onKeyDown={handleKeyDown}>\n          <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n        </div>\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    // userEvent.click(input);\n    fireEvent.mouseDown(input);\n\n    let dropdown: HTMLElement | null = await content.findByText('Firefox');\n    expect(dropdown, 'dropdown open').not.null;\n\n    fireEvent.keyDown(input, { code: KEYS.ESC });\n\n    // await waitForElementToBeRemoved(() => content.queryByText('Firefox'));\n    dropdown = content.queryByText('Firefox');\n    expect(dropdown, 'dropdown closed').null;\n\n    expect(keyDownReceived, 'propagation stopped').to.be.false;\n  });\n\n  it('JET-53183 - propagation not stopped for Shift+Tab keydown in input', async function () {\n    let keyDownReceived = false;\n    const handleKeyDown = () => {\n      keyDownReceived = true;\n    };\n    const getComp = (valItem: any) => (\n      <RootEnvironmentProvider environment={env}>\n        <div onKeyDown={handleKeyDown}>\n          <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" valueItem={valItem} />\n        </div>\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp(valueItem));\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    fireEvent.keyDown(input, { code: KEYS.TAB, shiftKey: true });\n\n    expect(keyDownReceived, 'propagation not stopped').to.be.true;\n  });\n\n  it('JET-53183 - propagation not stopped for Tab keydown in input', async function () {\n    let keyDownReceived = false;\n    const handleKeyDown = () => {\n      keyDownReceived = true;\n    };\n    const getComp = () => (\n      <RootEnvironmentProvider environment={env}>\n        <div onKeyDown={handleKeyDown}>\n          <DemoSelectSingle data={items} label=\"Enabled\" labelEdge=\"inside\" />\n        </div>\n      </RootEnvironmentProvider>\n    );\n    const content = render(getComp());\n\n    const input = await content.findByRole('combobox');\n    expect(input, 'input element found').not.null;\n\n    fireEvent.keyDown(input, { code: KEYS.TAB });\n\n    expect(keyDownReceived, 'propagation not stopped').to.be.true;\n  });\n\n  afterEach(cleanup);\n});\n"],"names":["afterEach","cleanup","valueItem","key","data","value","label","metadata","valueItem2","noOp","items","DemoSelectSingle","assistiveText","helpSourceLink","helpSourceText","isDisabled","isReadonly","isRequired","labelEdge","messages","placeholder","textAlign","userAssistanceDensity","myValue","setMyValue","useState","myValueItem","setMyValueItem","handleCommit","useCallback","detail","item","find","element","newValueItem","undefined","dataMapFunc","dataMetadataRef","useRef","map","dataState","setDataState","offset","totalSize","_a","current","length","_b","sizePrecision","slice","filter","setFilter","handleFilter","searchText","firstRender","useEffect","setTimeout","dataToShow","trim","toLowerCase","indexOf","loadRange","count","range","startIndex","endIndex","newDataState","_jsx","SelectSingle","itemText","onCommit","onFilter","onLoadRange","async","getEnvironmentContext","locale","matchTranslationBundle","Set","default","translations","__variableDynamicImportRuntime0__","describe","env","beforeEach","window","IntersectionObserver","MockIntersectionObserver","jest","fn","mockReturnValue","observe","unobserve","disconnect","Object","defineProperty","global","writable","configurable","it","content","render","RootEnvironmentProvider","assign","environment","jsx","input","findByDisplayValue","expect","not","null","getComp","valItem","rerender","container","queryByText","_jsxs","children","inputElement","querySelector","buttonElement","be","focus","waitFor","dropdownArrow","fireEvent","click","dropdown","findByText","findByRole","mouseDown","keyUp","code","KEYS","DOWN","UP","keyDown","ESC","TAB","listItem","keyDownReceived","handleKeyDown","onKeyDown","ENTER","to","true","false","shiftKey"],"mappings":"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"}