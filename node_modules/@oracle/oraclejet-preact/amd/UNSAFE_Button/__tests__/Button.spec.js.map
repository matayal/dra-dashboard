{"version":3,"file":"Button.spec.js","sources":["../../../../src/UNSAFE_Button/__tests__/Button.spec.tsx"],"sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { Button } from '../Button';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\n\nafterEach(cleanup);\n\ndescribe('Test Button component', () => {\n  it('render', async function () {\n    const content = render(<Button label=\"Press Me\"></Button>);\n    const label = await content.findByText('Press Me');\n    expect(label).not.null;\n  });\n\n  it('if both label and title exist, it should show title as tooltip', async () => {\n    const content = render(<Button display=\"icons\" label=\"label\" title=\"title\"></Button>);\n    const button = content.container.firstElementChild;\n    expect(button).to.not.be.null;\n    if (button) {\n      const tooltipText = button.getAttribute('title');\n      expect(tooltipText).to.equal('title');\n    }\n  });\n\n  it('no default tooltip', async () => {\n    const content = render(<Button label=\"label\"></Button>);\n    const button = content.container.firstElementChild;\n    expect(button).to.not.be.null;\n    if (button) {\n      const tooltipText = button.getAttribute('title');\n      expect(tooltipText).to.equal(null);\n    }\n  });\n\n  it('if accessibleLabel exist, it should show as tooltip', async () => {\n    const content = render(\n      <Button display=\"icons\" accessibleLabel=\"alabel\" label=\"button\"></Button>\n    );\n    const button = content.container.firstElementChild;\n    expect(button).to.not.be.null;\n    if (button) {\n      const tooltipText = button.getAttribute('title');\n      expect(tooltipText).to.equal('alabel');\n    }\n  });\n\n  it('click', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <Button label=\"Press Me\" onAction={increment}></Button>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    fireEvent.click(button);\n    expect(count).to.equal(1);\n  });\n\n  it('ENTER', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <Button label=\"Press Me\" onAction={increment}></Button>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    fireEvent.keyDown(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n    fireEvent.keyUp(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n    expect(count).to.equal(1);\n  });\n\n  it('Space', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <Button label=\"Press Me\" onAction={increment}></Button>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    fireEvent.keyDown(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n    fireEvent.keyUp(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n    expect(count).to.equal(1);\n  });\n\n  it('variant borderless', async () => {\n    const content = render(<Button variant=\"borderless\" label=\"button\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-borderless');\n    expect(button, 'borderless button found').not.null;\n  });\n\n  it('variant callToAction', async () => {\n    const content = render(<Button variant=\"callToAction\" label=\"button\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-callToAction');\n    expect(button, 'callToAction button found').not.null;\n  });\n\n  it('variant danger', async () => {\n    const content = render(<Button variant=\"danger\" label=\"button\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-danger');\n    expect(button, 'danger button found').not.null;\n  });\n\n  it('variant outlined', async () => {\n    const content = render(<Button variant=\"outlined\" label=\"button\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-outlined');\n    expect(button, 'outlined button found').not.null;\n  });\n\n  it('variant solid', async () => {\n    const content = render(<Button variant=\"solid\" label=\"button\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-solid');\n    expect(button, 'solid button found').not.null;\n  });\n\n  it('variant ghost', async () => {\n    const content = render(<Button variant=\"ghost\" label=\"button\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-ghost');\n    expect(button, 'ghost button found').not.null;\n  });\n\n  it('tabindex default ', async () => {\n    const content = render(<Button label=\"button\"></Button>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const tabindex = button.getAttribute('tabindex');\n      expect(tabindex).to.equal('0');\n    }\n  });\n\n  it('size default ', async () => {\n    const content = render(<Button label=\"button\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-md');\n    expect(button, 'default size button found').not.null;\n  });\n\n  it('size sm ', async () => {\n    const content = render(<Button label=\"button\" size=\"sm\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-sm');\n    expect(button, 'sm size button found').not.null;\n  });\n\n  it('size md ', async () => {\n    const content = render(<Button label=\"button\" size=\"md\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-md');\n    expect(button, 'md size button found').not.null;\n  });\n\n  it('size lg ', async () => {\n    const content = render(<Button label=\"button\" size=\"lg\"></Button>);\n    const button = content.container.querySelector('.oj-c-base-button-lg');\n    expect(button, 'lg size button found').not.null;\n  });\n\n  it('disabled default', async () => {\n    const content = render(<Button label=\"button\"></Button>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const disabled = button.getAttribute('disabled');\n      expect(disabled).null;\n    }\n  });\n\n  it('disabled', async () => {\n    const content = render(<Button label=\"button\" isDisabled={true}></Button>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const disabled = button.getAttribute('disabled');\n      const tabindex = button.getAttribute('tabindex');\n      expect(tabindex).to.equal('-1');\n      expect(disabled).not.null;\n    }\n  });\n\n  it('display default', async () => {\n    const content = render(\n      <Button\n        label=\"button\"\n        startIcon={<span class=\"startIcon\"></span>}\n        endIcon={<span class=\"endIcon\"></span>}></Button>\n    );\n    const startIcon = content.container.querySelector('.startIcon');\n    const endIcon = content.container.querySelector('.endIcon');\n    expect(startIcon).not.null;\n    expect(endIcon).not.null;\n  });\n\n  it('display default', async () => {\n    const content = render(\n      <Button\n        label=\"button\"\n        startIcon={<span class=\"startIcon\"></span>}\n        endIcon={<span class=\"endIcon\"></span>}></Button>\n    );\n    const label = await content.findByText('button');\n    const startIcon = content.container.querySelector('.startIcon');\n    const endIcon = content.container.querySelector('.endIcon');\n    expect(label).not.null;\n    expect(startIcon).not.null;\n    expect(endIcon).not.null;\n  });\n\n  it('display all', async () => {\n    const content = render(\n      <Button\n        label=\"button\"\n        display=\"all\"\n        startIcon={<span class=\"startIcon\"></span>}\n        endIcon={<span class=\"endIcon\"></span>}></Button>\n    );\n    const label = await content.findByText('button');\n    const startIcon = content.container.querySelector('.startIcon');\n    const endIcon = content.container.querySelector('.endIcon');\n    expect(label).not.null;\n    expect(startIcon).not.null;\n    expect(endIcon).not.null;\n  });\n\n  it('display icons', async () => {\n    const content = render(\n      <Button\n        label=\"button\"\n        display=\"icons\"\n        startIcon={<span class=\"startIcon\"></span>}\n        endIcon={<span class=\"endIcon\"></span>}></Button>\n    );\n    const label = content.findByText('button');\n    const startIcon = content.container.querySelector('.startIcon');\n    const endIcon = content.container.querySelector('.endIcon');\n    expect(Object.keys(label).length === 0).to.be.true;\n    expect(startIcon).not.null;\n    expect(endIcon).not.null;\n  });\n\n  it('display text', async () => {\n    const content = render(\n      <Button\n        label=\"button\"\n        display=\"label\"\n        startIcon={<span class=\"startIcon\"></span>}\n        endIcon={<span class=\"endIcon\"></span>}></Button>\n    );\n    const label = await content.findByText('button');\n    const startIcon = content.container.querySelector('.startIcon');\n    const endIcon = content.container.querySelector('.endIcon');\n    expect(label).not.null;\n    expect(startIcon).null;\n    expect(endIcon).null;\n  });\n\n  it('with TabbableModeContext isTabbable=true', async () => {\n    const content = render(\n      <TabbableModeContext.Provider value={{ isTabbable: true }}>\n        <Button label=\"button\" />\n      </TabbableModeContext.Provider>\n    );\n    const button = await content.findByText('button');\n    const tabindex = button.getAttribute('tabindex');\n    expect(tabindex).to.equal('0');\n  });\n\n  it('with TabbableModeContext isTabbable=false', async () => {\n    const content = render(\n      <TabbableModeContext.Provider value={{ isTabbable: false }}>\n        <Button label=\"button\" />\n      </TabbableModeContext.Provider>\n    );\n    const button = await content.findByText('button');\n    const tabindex = button.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n});\n"],"names":["afterEach","cleanup","describe","it","async","content","render","_jsx","Button","label","findByText","expect","not","null","button","display","title","container","firstElementChild","to","be","tooltipText","getAttribute","equal","accessibleLabel","count","_jsxs","jsx","onAction","fireEvent","click","keyDown","code","key","keyCode","charCode","keyUp","charcode","variant","querySelector","tabindex","size","disabled","isDisabled","startIcon","class","endIcon","Object","keys","length","true","TabbableModeContext","Provider","assign","value","isTabbable","children"],"mappings":"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"}