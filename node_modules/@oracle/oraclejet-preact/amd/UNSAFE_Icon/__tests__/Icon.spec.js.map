{"version":3,"file":"Icon.spec.js","sources":["../../../../src/UNSAFE_Icon/__tests__/Icon.spec.tsx"],"sourcesContent":["import { render, waitFor } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { Icon } from '../Icon';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport userEvent from '@testing-library/user-event';\nimport { getClientHints } from '../../utils/PRIVATE_clientHints';\n\nconst TOOLTIP_TEXT = 'IconTooltip';\nconst TOOLTIP_TEST_TIMEOUT = 5000;\n\ndescribe('Test Icon component', () => {\n  it('render', async function () {\n    const content = render(\n      <Icon>\n        <path d=\"M 0 0 H 24 V 24 H 0 L 0 0\" />\n      </Icon>\n    );\n    const svg = content.container.querySelector('svg');\n    expect(svg).not.null;\n    const path = content.container.querySelector('path');\n    expect(path).not.null;\n  });\n  it('icon size', async function () {\n    const content = render(\n      <Icon size=\"8x\">\n        <path d=\"M 0 0 H 24 V 24 H 0 L 0 0\" />\n      </Icon>\n    );\n    const firstElement = content.container.firstElementChild;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(1);\n  });\n  it('icon color', async function () {\n    const content = render(\n      <Icon color=\"danger\">\n        <path d=\"M 0 0 H 24 V 24 H 0 L 0 0\" />\n      </Icon>\n    );\n    const firstElement = content.container.firstElementChild as HTMLElement;\n    // @ts-ignore\n    const classList = firstElement.classList;\n    expect(classList.length).equals(1);\n  });\n});\n\ndescribe('Mouse Interaction', () => {\n  const clientHints = getClientHints();\n  if (typeof jest === 'undefined' && clientHints.browser === 'chrome') {\n    mocha.timeout(2 * TOOLTIP_TEST_TIMEOUT);\n    it(\n      'check tooltip correctly triggered with mouse interaction',\n      async () => {\n        const content = render(\n          <RootEnvironmentProvider>\n            <Icon accessibleLabel={TOOLTIP_TEXT}>\n              <path d=\"M 0 0 H 24 V 24 H 0 L 0 0\" />\n            </Icon>\n          </RootEnvironmentProvider>\n        );\n        const IconElement = content.container.firstElementChild as HTMLElement;\n        userEvent.hover(IconElement);\n        await waitFor(() => checkTooltipText(TOOLTIP_TEXT), {\n          timeout: TOOLTIP_TEST_TIMEOUT\n        });\n      },\n      TOOLTIP_TEST_TIMEOUT\n    );\n  }\n});\n\ndescribe('Keyboard Interaction', () => {\n  const clientHints = getClientHints();\n  if (typeof jest === 'undefined' && clientHints.browser === 'chrome') {\n    mocha.timeout(2 * TOOLTIP_TEST_TIMEOUT);\n    it(\n      'check tooltip correctly triggered with keyboard interaction',\n      async () => {\n        const content = render(\n          <RootEnvironmentProvider>\n            <Icon accessibleLabel={TOOLTIP_TEXT}>\n              <path d=\"M 0 0 H 24 V 24 H 0 L 0 0\" />\n            </Icon>\n          </RootEnvironmentProvider>\n        );\n        (content.container.firstElementChild as HTMLElement).focus();\n        userEvent.tab();\n        await waitFor(() => checkTooltipText(TOOLTIP_TEXT), {\n          timeout: TOOLTIP_TEST_TIMEOUT\n        });\n      },\n      TOOLTIP_TEST_TIMEOUT\n    );\n  }\n});\n\nconst checkTooltipText = (content: string) => {\n  const targetElements = document.querySelectorAll('[role=\"tooltip\"]');\n  const targetElementItem = targetElements.item(0) as HTMLElement;\n  const tooltipContainer = targetElementItem?.firstElementChild as HTMLElement;\n  expect(tooltipContainer?.style.opacity).not.equals('');\n  expect(tooltipContainer?.style.opacity).not.equals('0');\n  expect(tooltipContainer?.style.maxHeight).not.equals('');\n  expect(tooltipContainer?.style.maxHeight).not.equals('0');\n  const innerHTML = tooltipContainer?.firstElementChild?.innerHTML;\n  expect(innerHTML).equals(content);\n};\n"],"names":["TOOLTIP_TEXT","TOOLTIP_TEST_TIMEOUT","describe","it","async","content","render","_jsx","Icon","children","d","svg","container","querySelector","expect","not","null","path","classList","size","firstElementChild","length","equals","color","clientHints","getClientHints","jest","browser","mocha","timeout","IconElement","RootEnvironmentProvider","Object","assign","accessibleLabel","userEvent","hover","waitFor","checkTooltipText","focus","tab","targetElementItem","document","querySelectorAll","item","tooltipContainer","style","opacity","maxHeight","innerHTML","_a"],"mappings":"qjCAOA,MAAMA,EAAe,cACfC,EAAuB,IAE7BC,SAAS,sBAAuB,KAC9BC,GAAG,SAAUC,iBACX,MAAMC,EAAUC,EAAMA,OACpBC,MAACC,EAAAA,KAAI,CAAAC,SACHF,MAAM,OAAA,CAAAG,EAAE,iCAGNC,EAAMN,EAAQO,UAAUC,cAAc,OAC5CC,EAAAA,OAAOH,GAAKI,IAAIC,KAChB,MAAMC,EAAOZ,EAAQO,UAAUC,cAAc,QAC7CC,EAAAA,OAAOG,GAAMF,IAAIC,OAEnBb,GAAG,YAAaC,iBACd,MAOMc,EAPUZ,EAAMA,OACpBC,MAACC,EAAAA,oBAAKW,KAAK,MAAI,CAAAV,SACbF,EAAAA,YAAMG,EAAE,kCAGiBE,UAAUQ,kBAERF,UAC/BJ,EAAAA,OAAOI,EAAUG,QAAQC,OAAO,KAElCnB,GAAG,aAAcC,iBACf,MAOMc,EAPUZ,EAAMA,OACpBC,MAACC,EAAAA,oBAAKe,MAAM,UAAQ,CAAAd,SAClBF,EAAAA,YAAMG,EAAE,kCAGiBE,UAAUQ,kBAERF,UAC/BJ,EAAAA,OAAOI,EAAUG,QAAQC,OAAO,OAIpCpB,SAAS,oBAAqB,KAC5B,MAAMsB,EAAcC,EAAAA,iBACA,oBAATC,MAAgD,WAAxBF,EAAYG,UAC7CC,MAAMC,QAAQ,KACd1B,GACE,2DACAC,UACE,MAOM0B,EAPUxB,EAAAA,OACdC,MAACwB,0BAAuB,CAAAtB,SACtBF,EAAAA,IAACC,EAAIA,KAACwB,OAAAC,OAAA,CAAAC,gBAAiBlC,GAAY,CAAAS,SACjCF,cAAMG,EAAE,oCAIcE,UAAUQ,kBACtCe,UAAUC,MAAMN,SACVO,UAAQ,IAAMC,EAAiBtC,GAAe,CAClD6B,QAAS5B,KAGbA,MAKNC,SAAS,uBAAwB,KAC/B,MAAMsB,EAAcC,EAAAA,iBACA,oBAATC,MAAgD,WAAxBF,EAAYG,UAC7CC,MAAMC,QAAQ,KACd1B,GACE,8DACAC,UACkBE,EAAAA,OACdC,MAACwB,0BAAuB,CAAAtB,SACtBF,EAAAA,IAACC,EAAIA,KAACwB,OAAAC,OAAA,CAAAC,gBAAiBlC,GAAY,CAAAS,SACjCF,cAAMG,EAAE,oCAILE,UAAUQ,kBAAkCmB,QACrDJ,EAAS,QAACK,YACJH,UAAQ,IAAMC,EAAiBtC,GAAe,CAClD6B,QAAS5B,KAGbA,MAKN,MAAMqC,EAAoBjC,UACxB,MACMoC,EADiBC,SAASC,iBAAiB,oBACRC,KAAK,GACxCC,EAAmBJ,MAAAA,OAAA,EAAAA,EAAmBrB,kBAC5CN,EAAAA,OAAO+B,MAAAA,OAAA,EAAAA,EAAkBC,MAAMC,SAAShC,IAAIO,OAAO,IACnDR,EAAAA,OAAO+B,MAAAA,OAAA,EAAAA,EAAkBC,MAAMC,SAAShC,IAAIO,OAAO,KACnDR,EAAAA,OAAO+B,MAAAA,OAAA,EAAAA,EAAkBC,MAAME,WAAWjC,IAAIO,OAAO,IACrDR,EAAAA,OAAO+B,MAAAA,OAAA,EAAAA,EAAkBC,MAAME,WAAWjC,IAAIO,OAAO,KACrD,MAAM2B,EAAiD,QAArCC,EAAAL,MAAAA,OAAA,EAAAA,EAAkBzB,yBAAmB,IAAA8B,OAAA,EAAAA,EAAAD,UACvDnC,EAAAA,OAAOmC,GAAW3B,OAAOjB"}