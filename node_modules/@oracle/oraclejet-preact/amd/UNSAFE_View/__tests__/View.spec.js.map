{"version":3,"file":"View.spec.js","sources":["../../../../src/UNSAFE_View/__tests__/View.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { View } from '..';\n\ndescribe('Test View component', () => {\n  it('render', async function () {\n    const { container } = render(\n      <View border=\"2px solid red\">\n        <div style=\"width: 50px; height: 50px;\" />\n      </View>\n    ) as any;\n    // Test that the inner content is rendered.\n    expect(container.firstChildElement).not.null;\n  });\n\n  it('adds aria-label using accessibleLabel prop', () => {\n    const label = 'test label';\n    const { getByLabelText } = render(<View accessibleLabel={label} />);\n    expect(getByLabelText(label)).not.null;\n  });\n\n  it('adds aria-labelledby using ariaLabelledBy prop', () => {\n    const labelId = 'testId';\n    const label = 'test label';\n    const { getByLabelText } = render(\n      <View ariaLabelledBy={labelId}>\n        <label id={labelId}>{label}</label>\n      </View>\n    );\n    expect(getByLabelText(label)).not.null;\n  });\n});\n"],"names":["describe","it","async","container","render","_jsx","View","Object","assign","border","children","style","expect","firstChildElement","not","null","label","getByLabelText","jsx","accessibleLabel","labelId","ariaLabelledBy","id"],"mappings":"uwBAIAA,SAAS,sBAAuB,KAC9BC,GAAG,SAAUC,iBACX,MAAMC,UAAEA,GAAcC,SACpBC,EAAAA,IAACC,EAAAA,KAAKC,OAAAC,OAAA,CAAAC,OAAO,iBAAe,CAAAC,SAC1BL,aAAKM,MAAM,mCAIfC,EAAAA,OAAOT,EAAUU,mBAAmBC,IAAIC,OAG1Cd,GAAG,6CAA8C,KAC/C,MAAMe,EAAQ,cACRC,eAAEA,GAAmBb,EAAAA,OAAOC,EAAAa,IAACZ,EAAIA,KAAA,CAACa,gBAAiBH,KACzDJ,EAAAA,OAAOK,EAAeD,IAAQF,IAAIC,OAGpCd,GAAG,iDAAkD,KACnD,MAAMmB,EAAU,SACVJ,EAAQ,cACRC,eAAEA,GAAmBb,EAAMA,OAC/BC,EAAAa,IAACZ,EAAIA,KAAAC,OAAAC,OAAA,CAACa,eAAgBD,GACpB,CAAAV,SAAAL,MAAA,QAAAE,OAAAC,OAAA,CAAOc,GAAIF,aAAUJ,SAGzBJ,EAAAA,OAAOK,EAAeD,IAAQF,IAAIC"}