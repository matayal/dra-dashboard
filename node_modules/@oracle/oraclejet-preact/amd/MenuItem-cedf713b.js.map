{"version":3,"file":"MenuItem-cedf713b.js","sources":["../../src/UNSAFE_Menu/MenuContext.ts","../../src/UNSAFE_Menu/MenuItem.tsx","../../src/UNSAFE_Menu/useMenuContext.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext, ComponentProps } from 'preact';\n\nimport { Menu } from './Menu';\n\ntype Props = {\n  onClose: ComponentProps<typeof Menu>['onClose'];\n  currentKey?: string;\n  showFocusRing: boolean;\n};\n\n/**\n * Context used to pass menu information without having to pass it to menu children props.\n * We want to communicate information down to any interested menu item children.\n */\nconst MenuContext = createContext<Props>({\n  onClose: () => null,\n  currentKey: undefined,\n  showFocusRing: false\n});\n\nexport { MenuContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useLayoutEffect, useRef, useMemo } from 'preact/hooks';\nimport { ComponentChildren } from 'preact';\n\nimport { Text } from '../UNSAFE_Text';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { useHover } from '../hooks/UNSAFE_useHover';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\n\nimport { useMenuContext } from './useMenuContext';\n\nconst styles = {\n  menuItemContainer: cssProps`${{\n    cursor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-cursor-clickable) !important',\n    width: '100%',\n    paddingTop: 'var(--oj-PRIVATE-DO-NOT-USE-collection-list-cell-padding-vertical)',\n    paddingBottom: 'var(--oj-PRIVATE-DO-NOT-USE-collection-list-cell-padding-vertical)',\n    paddingInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-start-edge-to-start-icon-padding)',\n    paddingInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-end-icon-to-end-edge-padding)',\n    boxSizing: 'border-box',\n    minHeight: 'var( --oj-c-PRIVATE-NOT-USE-collection-list-row-height)',\n    display: 'flex',\n    textAlign: 'start',\n    alignItems: 'center',\n    textDecorationLine: 'none !important',\n    outlineStyle: 'none'\n  }}`,\n  focused: cssProps`${{\n    outlineStyle: 'dotted',\n    outlineOffset: '1px',\n    outlineWidth: '1px',\n    outlineColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-focus-border-color)'\n  }}`,\n  variant: {\n    default: {\n      menuItemContainer: cssProps`${{\n        /* Color seems to change in active state due to a:active selector added on oj-c enviroment\n        because of this we have to set color here again. Same happens on disabled which\n         can't set pointerEvents as none since disabled items can receive focus */\n        '&:active': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-active)',\n          color: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-text-color)'\n        },\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-text-color)'\n      }}`,\n      hover: cssProps`${{\n        // @ts-ignore\n        '&:not(:active)': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-hover)'\n        }\n      }}`,\n      pseudohover: cssProps`${{\n        // @ts-ignore\n        '@media(hover: hover)': {\n          '&:hover:not(:active)': {\n            backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-hover)'\n          }\n        }\n      }}`\n    },\n    destructive: {\n      menuItemContainer: cssProps`${{\n        '&:active': {\n          backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n          color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n        },\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger-low)'\n      }}`,\n      hover: cssProps`${{\n        backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n        color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n      }}`,\n      pseudohover: cssProps`${{\n        // @ts-ignore\n        '@media(hover: hover)': {\n          '&:hover': {\n            backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-danger-hover)',\n            color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-danger)'\n          }\n        }\n      }}`\n    }\n  },\n  iconLabelContainer: cssProps`${{\n    display: 'flex',\n    alignItems: 'center',\n    overflowX: 'hidden',\n    overflowY: 'hidden'\n  }}`,\n  labelContainer: cssProps`${{\n    flexGrow: 1,\n    minHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)'\n  }}`,\n  iconContainer: cssProps`${{\n    flexShrink: 0,\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)',\n    width: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-icon-size)'\n  }}`,\n  startIconContainer: cssProps`${{\n    marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-start-icon-to-label-padding)'\n  }}`,\n  endIconContainer: cssProps`${{\n    marginInlineStart: 'var(--oj-c-PRIVATE-DO-NOT-USE-menu-label-to-end-icon-padding)'\n  }}`,\n  disabledContainer: cssProps`${{\n    cursor: 'default !important',\n    '&:active': {\n      color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n    },\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`\n};\n\ntype BaseMenuItemProps = (SimpleMenuItemProps | SelectMenuItemProps) & BaseBaseMenuItemProps;\n\ntype BaseBaseMenuItemProps = {\n  label: string;\n  onAction?: () => void;\n  startIcon?: ComponentChildren;\n  endIcon?: ComponentChildren;\n  isDisabled?: boolean;\n};\n\ntype SimpleMenuItemProps = {\n  role: 'menuitem';\n  variant?: 'default' | 'destructive';\n  isChecked?: never;\n};\n\ntype SelectMenuItemProps = {\n  role: 'menuitemcheckbox' | 'menuitemradio';\n  variant?: never;\n  isChecked?: boolean;\n};\n\ntype MenuItemProps = BaseBaseMenuItemProps & {\n  variant?: 'default' | 'destructive';\n};\n\nexport function MenuItem(props: MenuItemProps) {\n  return <BaseMenuItem {...props} role=\"menuitem\"></BaseMenuItem>;\n}\n\nconst isHybrid = getClientHints().hoverSupport === 'events';\n\nexport function BaseMenuItem({\n  label,\n  onAction,\n  startIcon,\n  endIcon,\n  role,\n  isChecked,\n  isDisabled = false,\n  variant = 'default'\n}: BaseMenuItemProps) {\n  const { onClose, currentKey, showFocusRing } = useMenuContext();\n\n  const uniqueID = useId();\n  const id = useMemo(() => `oj-menu-item-${uniqueID}`, [uniqueID]);\n  const isCurrent = currentKey === id;\n\n  const menuItemRef = useRef<HTMLAnchorElement | null>(null);\n\n  const { hoverProps, isHover } = useHover({ isDisabled: !isHybrid });\n\n  const handleItemSelection = () => {\n    onClose?.({ reason: 'itemAction' });\n    onAction?.();\n  };\n\n  const { pressProps } = usePress(handleItemSelection, { isDisabled });\n\n  useLayoutEffect(() => {\n    if (isCurrent) {\n      menuItemRef.current?.focus();\n    }\n  }, [isCurrent]);\n\n  const menuItemContainerClasses = classNames([\n    styles.menuItemContainer,\n    !isDisabled && styles.variant[variant].menuItemContainer,\n    isDisabled && styles.disabledContainer,\n    !isHybrid && !isDisabled && styles.variant[variant].pseudohover,\n    isHybrid && isHover && !isDisabled && styles.variant[variant].hover,\n    isCurrent && !!showFocusRing && styles.focused\n  ]);\n\n  const startIconContainerClasses = classNames([\n    styles.iconLabelContainer,\n    styles.iconContainer,\n    styles.startIconContainer\n  ]);\n\n  const labelContainerClasses = classNames([styles.iconLabelContainer, styles.labelContainer]);\n\n  const endIconContainerClasses = classNames([\n    styles.iconLabelContainer,\n    styles.iconContainer,\n    styles.endIconContainer\n  ]);\n\n  return (\n    <a\n      ref={menuItemRef}\n      class={menuItemContainerClasses}\n      {...mergeProps(hoverProps, pressProps)}\n      role={role}\n      data-oj-menu-item-key={id}\n      {...(isDisabled && { 'aria-disabled': true })}\n      {...(role !== 'menuitem' && { 'aria-checked': isChecked })}\n      tabIndex={isCurrent ? 0 : -1}>\n      {startIcon && <span class={startIconContainerClasses}>{startIcon}</span>}\n      <span class={labelContainerClasses}>\n        <Text variant=\"inherit\" size=\"md\">\n          {label}\n        </Text>\n      </span>\n      {endIcon && <span class={endIconContainerClasses}>{endIcon}</span>}\n    </a>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\n\nimport { MenuContext } from './MenuContext';\n\n/**\n * Utility hook for consuming the MenuContext\n *\n * @returns The value of MenuContext provider\n */\nfunction useMenuContext() {\n  return useContext(MenuContext);\n}\n\nexport { useMenuContext };\n"],"names":["MenuContext","createContext","onClose","currentKey","undefined","showFocusRing","styles","variant","default","destructive","isHybrid","getClientHints","hoverSupport","BaseMenuItem","label","onAction","startIcon","endIcon","role","isChecked","isDisabled","useContext","uniqueID","useId","id","useMemo","isCurrent","menuItemRef","useRef","hoverProps","isHover","useHover","pressProps","usePress","_a","current","focus","menuItemContainer","pseudohover","hover","focused","iconLabelContainer","iconContainer","startIconContainer","labelContainerClasses","classNames","labelContainer","endIconContainer","props"],"mappings":"mXAsBM,MAAAA,EAAcC,EAAAA,cAAqB,CACvCC,QAAS,IAAM,KACfC,gBAAYC,EACZC,eAAe,ICJjB,MAAAC,EAAA,mBAAA,mBAAA,SAsBEC,QAAA,CACEC,QAAA,mBAAA,gBAAA,iCA0BAC,YAAA,mBAAA,iBAAA,qDAjDJ,0BAAA,yBAAA,8BAAA,0BAAA,sCAqIA,MAAAC,EAAA,WAAAC,EAAAA,iBAAAC,aAEA,SAAAC,GAAAC,MAAAA,EAAAC,SAAAA,EAAAC,UAAAA,EAAAC,QAAAA,EAAAC,KAAAA,EAAAC,UAAAA,EAAAC,WAAAA,GAAA,EAAAb,QAAAA,EAAA,0DC1ISc,EAAAA,WAAWrB,GDsJlBsB,EAAAC,EAAAA,QACAC,EAAAC,EAAAA,QAAA,IAAA,gBAAAH,IAAA,CAAAA,IACAI,EAAAvB,IAAAqB,EAEAG,EAAAC,SAAA,OAEAC,WAAAA,EAAAC,QAAAA,GAAAC,WAAA,CAAAX,YAAAV,KAOAsB,WAAAA,GAAAC,EAAAA,gDAHElB,MAAAA,GAAAA,KAGF,CAAAK,WAAAA,iCAGEM,IACE,QAAAQ,EAAAP,EAAAQ,eAAA,IAAAD,GAAAA,EAAAE,UAEJ,CAAAV,0BAGEpB,EAAA+B,6EAGA3B,IAAAU,GAAAd,EAAAC,QAAAA,GAAA+B,YACA5B,GAAAoB,IAAAV,GAAAd,EAAAC,QAAAA,GAAAgC,MACAb,KAAArB,GAAAC,EAAAkC,0BAIAlC,EAAAmC,mBACAnC,EAAAoC,cACApC,EAAAqC,qBAGFC,EAAAC,EAAAA,WAAA,CAAAvC,EAAAmC,mBAAAnC,EAAAwC,iCAGExC,EAAAmC,mBACAnC,EAAAoC,cACApC,EAAAyC,weA3DJ,SAAAC"}