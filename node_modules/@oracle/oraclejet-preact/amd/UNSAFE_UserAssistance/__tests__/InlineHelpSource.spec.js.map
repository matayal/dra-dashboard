{"version":3,"file":"InlineHelpSource.spec.js","sources":["../../../../src/UNSAFE_UserAssistance/__tests__/InlineHelpSource.spec.tsx"],"sourcesContent":["import { cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { InlineHelpSource } from '../InlineHelpSource';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\nimport { matchTranslationBundle } from '../../utils/UNSAFE_matchTranslationBundle';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment/EnvironmentProvider';\nimport type { RootEnvironment } from '../../UNSAFE_Environment/EnvironmentContext';\n\ndescribe('InlineHelpSource - TabbableModeContext', () => {\n  let env: Partial<RootEnvironment>;\n  beforeEach(async function () {\n    env = env ?? (await getEnvironmentContext());\n  });\n\n  it('as input, TabbableModeContext not provided', async () => {\n    const value = 'Help source';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <InlineHelpSource source=\"http://www.oracle.com\">{value}</InlineHelpSource>\n      </RootEnvironmentProvider>\n    );\n\n    const anchorElement = await content.findByText(value);\n    expect(anchorElement).not.to.be.null;\n\n    const tabindex = anchorElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=true', async () => {\n    const value = 'Help source';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: true }}>\n          <InlineHelpSource source=\"http://www.oracle.com\">{value}</InlineHelpSource>\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const anchorElement = await content.findByText(value);\n    expect(anchorElement).not.to.be.null;\n\n    const tabindex = anchorElement?.getAttribute('tabindex');\n    expect(tabindex).to.be.null;\n  });\n\n  it('as input, TabbableModeContext isTabbable=false', async () => {\n    const value = 'Help source';\n    const content = render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: false }}>\n          <InlineHelpSource source=\"http://www.oracle.com\">{value}</InlineHelpSource>\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n\n    const anchorElement = await content.findByText(value);\n    expect(anchorElement).not.to.be.null;\n\n    const tabindex = anchorElement?.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n\n  afterEach(cleanup);\n});\n\nasync function getEnvironmentContext() {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  return {\n    translations: { '@oracle/oraclejet-preact': translations }\n  } as Partial<RootEnvironment>;\n}\n"],"names":["describe","env","beforeEach","async","locale","matchTranslationBundle","Set","default","translations","__variableDynamicImportRuntime0__","getEnvironmentContext","it","value","content","render","_jsx","RootEnvironmentProvider","Object","assign","environment","children","InlineHelpSource","source","anchorElement","findByText","expect","not","to","be","null","tabindex","getAttribute","jsx","TabbableModeContext","Provider","isTabbable","equal","afterEach","cleanup"],"mappings":"2XAQAA,SAAS,yCAA0C,KACjD,IAAIC,EACJC,WAAWC,iBACTF,EAAMA,MAAAA,EAAAA,QAuDVE,iBACE,MAAMC,EAASC,yBAAuB,CAAC,MAAO,IAAIC,IAAI,CAAC,QAAS,SACxDC,QAASC,q0KAAuBC,CAAO,uBAAuBL,eACtE,MAAO,CACLI,aAAc,CAAE,2BAA4BA,IA3DxBE,KAGtBC,GAAG,6CAA8CR,UAC/C,MAAMS,EAAQ,cACRC,EAAUC,EAAAA,OACdC,MAACC,0BAAuBC,OAAAC,OAAA,CAACC,YAAalB,GAAG,CAAAmB,SACvCL,EAAAA,IAACM,EAAgBA,iBAAAJ,OAAAC,OAAA,CAACI,OAAO,mCAAyBV,SAIhDW,QAAsBV,EAAQW,WAAWZ,GAC/Ca,EAAMA,OAACF,GAAeG,IAAIC,GAAGC,GAAGC,KAEhC,MAAMC,EAAWP,MAAAA,OAAa,EAAbA,EAAeQ,aAAa,YAC7CN,EAAAA,OAAOK,GAAUH,GAAGC,GAAGC,OAGzBlB,GAAG,gDAAiDR,UAClD,MAAMS,EAAQ,cACRC,EAAUC,EAAAA,OACdC,EAAAiB,IAAChB,EAAuBA,wBAACC,OAAAC,OAAA,CAAAC,YAAalB,aACpCc,EAAAA,IAACkB,EAAmBA,oBAACC,wBAAStB,MAAO,CAAEuB,YAAY,IACjD,CAAAf,SAAAL,EAAAiB,IAACX,mBAAiBJ,OAAAC,OAAA,CAAAI,OAAO,mCAAyBV,YAKlDW,QAAsBV,EAAQW,WAAWZ,GAC/Ca,EAAMA,OAACF,GAAeG,IAAIC,GAAGC,GAAGC,KAEhC,MAAMC,EAAWP,MAAAA,OAAa,EAAbA,EAAeQ,aAAa,YAC7CN,EAAAA,OAAOK,GAAUH,GAAGC,GAAGC,OAGzBlB,GAAG,iDAAkDR,UACnD,MAAMS,EAAQ,cACRC,EAAUC,EAAAA,OACdC,EAAAiB,IAAChB,EAAuBA,wBAACC,OAAAC,OAAA,CAAAC,YAAalB,aACpCc,EAAAA,IAACkB,EAAmBA,oBAACC,wBAAStB,MAAO,CAAEuB,YAAY,IACjD,CAAAf,SAAAL,EAAAiB,IAACX,mBAAiBJ,OAAAC,OAAA,CAAAI,OAAO,mCAAyBV,YAKlDW,QAAsBV,EAAQW,WAAWZ,GAC/Ca,EAAMA,OAACF,GAAeG,IAAIC,GAAGC,GAAGC,KAEhC,MAAMC,EAAWP,MAAAA,OAAa,EAAbA,EAAeQ,aAAa,YAC7CN,EAAAA,OAAOK,GAAUH,GAAGS,MAAM,QAG5BC,UAAUC,EAAOA"}