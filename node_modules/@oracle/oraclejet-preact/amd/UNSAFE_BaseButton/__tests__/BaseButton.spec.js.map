{"version":3,"file":"BaseButton.spec.js","sources":["../../../../src/UNSAFE_BaseButton/__tests__/BaseButton.spec.tsx"],"sourcesContent":["import { cleanup, fireEvent, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { BaseButton } from '../BaseButton';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\n\nafterEach(cleanup);\n\ndescribe('Test BaseButton component', () => {\n  it('render', async function () {\n    const content = render(<BaseButton>Press Me</BaseButton>);\n    const label = await content.findByText('Press Me');\n    expect(label).not.null;\n  });\n\n  it('click', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <BaseButton onAction={increment}>Press Me</BaseButton>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    fireEvent.click(button);\n    expect(count).to.equal(1);\n  });\n\n  it('ENTER', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <BaseButton onAction={increment}>Press Me</BaseButton>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    //    fireEvent.keyDown(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n    fireEvent.keyUp(button, { code: 'Enter', key: 'Enter', keyCode: 13, charCode: 13 });\n    expect(count).to.equal(1);\n  });\n\n  it('Space', async function () {\n    let count = 0;\n    const increment = () => {\n      count++;\n    };\n    const content = render(\n      <div>\n        <BaseButton onAction={increment}>Press Me</BaseButton>\n        <span>{count}</span>\n      </div>\n    );\n    const button = await content.findByText('Press Me');\n    expect(button).not.null;\n    //   fireEvent.keyDown(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n    fireEvent.keyUp(button, { code: 'Space', key: 'Space', keyCode: 32, charcode: 32 });\n    expect(count).to.equal(1);\n  });\n\n  it('variant borderless', async () => {\n    const content = render(<BaseButton variant=\"borderless\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-borderless');\n    expect(button, 'borderless button found').not.null;\n  });\n\n  it('variant callToAction', async () => {\n    const content = render(<BaseButton variant=\"callToAction\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-callToAction');\n    expect(button, 'callToAction button found').not.null;\n  });\n\n  it('variant danger', async () => {\n    const content = render(<BaseButton variant=\"danger\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-danger');\n    expect(button, 'danger button found').not.null;\n  });\n\n  it('variant outlined', async () => {\n    const content = render(<BaseButton variant=\"outlined\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-outlined');\n    expect(button, 'outlined button found').not.null;\n  });\n\n  it('variant solid', async () => {\n    const content = render(<BaseButton variant=\"solid\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-solid');\n    expect(button, 'solid button found').not.null;\n  });\n\n  it('variant ghost', async () => {\n    const content = render(<BaseButton variant=\"ghost\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-ghost');\n    expect(button, 'ghost button found').not.null;\n  });\n\n  it('tabindex default ', async () => {\n    const content = render(<BaseButton>button</BaseButton>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const tabindex = button.getAttribute('tabindex');\n      expect(tabindex).to.equal('0');\n    }\n  });\n\n  it('size default ', async () => {\n    const content = render(<BaseButton>button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-md');\n    expect(button, 'default size button found').not.null;\n  });\n\n  it('size sm ', async () => {\n    const content = render(<BaseButton size=\"sm\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-sm');\n    expect(button, 'sm size button found').not.null;\n  });\n\n  it('size md ', async () => {\n    const content = render(<BaseButton size=\"md\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-md');\n    expect(button, 'md size button found').not.null;\n  });\n\n  it('size lg ', async () => {\n    const content = render(<BaseButton size=\"lg\">button</BaseButton>);\n    const button = content.container.querySelector('.oj-c-base-button-lg');\n    expect(button, 'lg size button found').not.null;\n  });\n\n  it('disabled default', async () => {\n    const content = render(<BaseButton>button</BaseButton>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const disabled = button.getAttribute('disabled');\n      expect(disabled).null;\n    }\n  });\n\n  it('disabled', async () => {\n    const content = render(<BaseButton isDisabled={true}>button</BaseButton>);\n    const button = content.container.firstElementChild;\n    if (button) {\n      const disabled = button.getAttribute('disabled');\n      const tabindex = button.getAttribute('tabindex');\n      expect(tabindex).to.equal('-1');\n      expect(disabled).not.null;\n    }\n  });\n\n  it('with TabbableModeContext isTabbable=true', async () => {\n    const content = render(\n      <TabbableModeContext.Provider value={{ isTabbable: true }}>\n        <BaseButton>button</BaseButton>\n      </TabbableModeContext.Provider>\n    );\n    const button = await content.findByText('button');\n    const tabindex = button.getAttribute('tabindex');\n    expect(tabindex).to.equal('0');\n  });\n\n  it('with TabbableModeContext isTabbable=false', async () => {\n    const content = render(\n      <TabbableModeContext.Provider value={{ isTabbable: false }}>\n        <BaseButton>button</BaseButton>\n      </TabbableModeContext.Provider>\n    );\n    const button = await content.findByText('button');\n    const tabindex = button.getAttribute('tabindex');\n    expect(tabindex).to.equal('-1');\n  });\n});\n"],"names":["afterEach","cleanup","describe","it","async","content","render","_jsx","BaseButton","children","label","findByText","expect","not","null","count","_jsxs","jsxs","Object","assign","onAction","jsx","button","fireEvent","click","to","equal","keyUp","code","key","keyCode","charCode","charcode","variant","container","querySelector","firstElementChild","tabindex","getAttribute","size","disabled","isDisabled","TabbableModeContext","Provider","value","isTabbable"],"mappings":"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"}