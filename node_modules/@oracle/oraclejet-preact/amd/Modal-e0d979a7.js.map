{"version":3,"file":"Modal-e0d979a7.js","sources":["../../src/UNSAFE_Modal/ModalBackdrop.tsx","../../src/UNSAFE_Modal/ModalContainer.tsx","../../src/UNSAFE_Modal/Modal.tsx"],"sourcesContent":["import { cssProps } from '@oracle/oraclejet-cssprops';\n\nconst styles = {\n  base: cssProps`${{\n    position: 'absolute',\n    top: '0',\n    right: '0',\n    bottom: '0',\n    left: '0',\n    backgroundColor: 'rgba(0,0,0,.5)'\n  }}`\n};\n\nconst ModalBackdrop = () => <div class={styles.base} />;\n\nexport default ModalBackdrop;\n","import { forwardRef } from 'preact/compat';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children'>;\ntype Props = IntrinsicProps;\n\nconst styles = {\n  base: cssProps`${{\n    position: 'absolute',\n    inset: 0,\n    backgroundColor: 'transparent',\n    height: '100%',\n    margin: '0 auto',\n    maxWidth: 'calc(100% - 0.01px) !important',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }}`\n};\n\nconst ModalContainer = forwardRef<HTMLDivElement, Props>(({ children }, ref) => (\n  <div class={styles.base} ref={ref}>\n    {children}\n  </div>\n));\nModalContainer.displayName = 'Forwarded<ModalContainer>';\n\nexport default ModalContainer;\n","import { RefObject } from 'preact';\nimport { useModal } from './hooks/useModal';\nimport { FocusTrap } from '../UNSAFE_FocusTrap';\nimport { Layer } from '../UNSAFE_Layer';\nimport ModalBackdrop from './ModalBackdrop';\nimport ModalContainer from './ModalContainer';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children'>;\ntype UseModalProps = Parameters<typeof useModal>[0];\ntype Props = UseModalProps &\n  IntrinsicProps & {\n    /**\n     * Optional Ref to an element to focus on when component mounts\n     * @default - undefined - behavior is to focus on first tabbableElement\n     */\n    autoFocusRef?: RefObject<HTMLElement>;\n\n    /**\n     * Optional Ref to element to focus on when component un-mounts\n     * @default - undefined - behavior is to focus on the original activeElement when focus trap was enabled\n     */\n    restoreFocusRef?: RefObject<HTMLElement>;\n  };\n\nconst styles = {\n  base: cssProps`${{\n    position: 'fixed',\n    top: '0',\n    right: '0',\n    bottom: '0',\n    left: '0'\n  }}`\n};\n\nconst ModalWrapper = ({ children }: IntrinsicProps) => <div class={styles.base}>{children}</div>;\n\nconst Modal = ({ autoFocusRef, children, isOpen, onBackdropClick, restoreFocusRef }: Props) => {\n  const { modalRef } = useModal({ isOpen, onBackdropClick });\n\n  return isOpen ? (\n    <Layer>\n      <ModalWrapper>\n        <ModalBackdrop />\n        <ModalContainer ref={modalRef}>\n          <FocusTrap autoFocusRef={autoFocusRef} restoreFocusRef={restoreFocusRef}>\n            {children}\n          </FocusTrap>\n        </ModalContainer>\n      </ModalWrapper>\n    </Layer>\n  ) : null;\n};\n\nexport default Modal;\n"],"names":["styles","ModalBackdrop","_jsx","jsx","class","ModalContainer","forwardRef","children","ref","Object","assign","displayName","ModalWrapper","autoFocusRef","isOpen","onBackdropClick","restoreFocusRef","modalRef","useModal","Layer","_jsxs","jsxs","FocusTrap"],"mappings":"4LAEA,MAAAA,YAWAC,EAAA,IAAAC,EAAAC,IAAA,MAAA,CAAAC,MAAAJ,ICNAA,YAcAK,EAAAC,EAAAA,WAAA,EAAAC,SAAAA,GAAAC,IAAAN,EAAAC,IAAA,MAAAM,OAAAC,OAAA,CAAAN,MAAAJ,EAAAQ,IAAAA,GAAA,CAAAD,SAAAA,MAKAF,EAAAM,YAAA,4BCAA,MAAAX,WAUAY,EAAA,EAAAL,SAAAA,KAAAL,MAAA,MAAAO,OAAAC,OAAA,CAAAN,MAAAJ,GAAA,CAAAO,SAAAA,aAEA,EAAAM,aAAAA,EAAAN,SAAAA,EAAAO,OAAAA,EAAAC,gBAAAA,EAAAC,gBAAAA,MACE,MAAAC,SAAAA,GAAAC,WAAA,CAAAJ,OAAAA,EAAAC,gBAAAA,IAEA,OAAAD,EAAAZ,EAAAC,IAAAgB,QAAA,CAAAZ,SAAAa,EAAAC,KAAAT,EAAA,CAAAL,SAAA,CAAAL,EAAAC,IAAAF,EAAA,IAAAC,MAAAG,EAAAI,OAAAC,OAAA,CAAAF,IAAAS,GAAA,CAAAV,SAAAL,EAAAC,IAAAmB,YAAAb,OAAAC,OAAA,CAAAG,aAAAA,EAAAG,gBAAAA,GAAA,CAAAT,SAAAA,aAAA"}