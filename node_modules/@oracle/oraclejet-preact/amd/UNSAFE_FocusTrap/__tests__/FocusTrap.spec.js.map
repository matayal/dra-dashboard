{"version":3,"file":"FocusTrap.spec.js","sources":["../../../../src/UNSAFE_FocusTrap/__tests__/FocusTrap.spec.tsx"],"sourcesContent":["/**\n * General FocusTrap tests\n */\nimport { Fragment, Ref, RefObject } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport { render, waitFor } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { expect } from 'chai';\nimport { FocusTrap } from '../FocusTrap';\n\nconst TestDialog = ({ submitButtonRef }: { submitButtonRef?: Ref<HTMLButtonElement> }) => (\n  <Fragment>\n    <input id=\"inside_input\" />\n    <button id=\"inside_cancel\">Cancel</button>\n    <button id=\"inside_submit\" ref={submitButtonRef}>\n      Submit\n    </button>\n  </Fragment>\n);\n\nconst TestComponent = ({\n  autoFocusTest = false,\n  isDisabled = false,\n  restoreFocusTest\n}: {\n  autoFocusTest?: boolean;\n  isDisabled?: boolean;\n  restoreFocusTest?: boolean;\n}) => {\n  const submitButtonRef = useRef<HTMLButtonElement>(null);\n  const followButtonRef = useRef<HTMLButtonElement>(null);\n\n  let maybeAutoFocusRef = undefined;\n  if (autoFocusTest) maybeAutoFocusRef = submitButtonRef;\n\n  let maybeRestoreFocusRef: undefined | RefObject<HTMLElement> | false = undefined;\n  if (restoreFocusTest === true) maybeRestoreFocusRef = followButtonRef;\n  if (restoreFocusTest === false) maybeRestoreFocusRef = false;\n\n  return (\n    <Fragment>\n      <button>Preceding Button</button>\n      {isDisabled ? (\n        <TestDialog submitButtonRef={submitButtonRef} />\n      ) : (\n        <FocusTrap autoFocusRef={maybeAutoFocusRef} restoreFocusRef={maybeRestoreFocusRef}>\n          <TestDialog submitButtonRef={submitButtonRef} />\n        </FocusTrap>\n      )}\n      <button ref={followButtonRef}>Following Button</button>\n    </Fragment>\n  );\n};\n\n/**\n * Asserting on document.activeElement is bit tricky and varies between jest (JSDOM) and karma-mocha\n * @param HTMLElement\n */\nconst expectActiveElementToBe = async (element: HTMLElement) => {\n  if (typeof jest !== typeof undefined) {\n    // For jest (JSDOM) tests we need to explicitly wait one tick\n    setTimeout(() => {\n      expect(document.activeElement).equals(element);\n    }, 0);\n  } else {\n    // for karma-mocha, sometimes, we need an await.\n    await waitFor(() => {\n      expect(document.activeElement).equals(element);\n    });\n  }\n};\n\ndescribe('Test FocusTrap component', () => {\n  beforeEach(() => {\n    // need this as focus trap expects it to be set, it is used to determine if the tab stop is visible\n    Object.defineProperty(HTMLElement.prototype, 'offsetParent', {\n      get() {\n        return this.parentNode;\n      }\n    });\n  });\n  it('renders and sets default focus on first tabbable item', function () {\n    const { getByRole } = render(<TestComponent />);\n    const insideInput = getByRole('textbox');\n    expect(document.activeElement).equals(insideInput);\n  });\n\n  it('renders and sets initial focus to specified element', function () {\n    const { getByText } = render(<TestComponent autoFocusTest={true} />);\n    const autofocusButton = getByText('Submit');\n    expect(document.activeElement).equals(autofocusButton);\n  });\n\n  it('constrains tab behavior', async () => {\n    const { getByRole, getByText } = render(<TestComponent />);\n    const cancelButton = getByText('Cancel');\n    const submitButton = getByText('Submit');\n    const insideInput = getByRole('textbox');\n    userEvent.tab();\n    await expectActiveElementToBe(cancelButton);\n    userEvent.tab();\n    await expectActiveElementToBe(submitButton);\n    userEvent.tab();\n    // wrap around forward\n    await expectActiveElementToBe(insideInput);\n    userEvent.tab();\n    await expectActiveElementToBe(cancelButton);\n    // wrap around backwards\n    userEvent.tab({ shift: true });\n    await expectActiveElementToBe(insideInput);\n    userEvent.tab({ shift: true });\n    await expectActiveElementToBe(submitButton);\n  });\n\n  it('unmounts and resets focus to original element', async () => {\n    const { getByRole, getByText, rerender } = render(<TestComponent isDisabled={true} />);\n    const precedingButton = getByText('Preceding Button');\n    // set original focus to button outside focus trap\n    precedingButton.focus();\n    await expectActiveElementToBe(precedingButton);\n    rerender(<TestComponent isDisabled={false} />);\n    const insideInput = getByRole('textbox');\n    await expectActiveElementToBe(insideInput);\n    rerender(<TestComponent isDisabled={true} />);\n    await expectActiveElementToBe(precedingButton);\n  });\n\n  it('unmounts and resets focus to specified element', async () => {\n    const { getByRole, getByText, rerender } = render(\n      <TestComponent isDisabled={true} restoreFocusTest={true} />\n    );\n    const precedingButton = getByText('Preceding Button');\n    const followingButton = getByText('Following Button');\n    // set original focus to button outside focus trap\n    precedingButton.focus();\n    await expectActiveElementToBe(precedingButton);\n    rerender(<TestComponent isDisabled={false} restoreFocusTest={true} />);\n    const insideInput = getByRole('textbox');\n    await expectActiveElementToBe(insideInput);\n    rerender(<TestComponent isDisabled={true} restoreFocusTest={true} />);\n    await expectActiveElementToBe(followingButton);\n  });\n\n  it('unmounts and does no focus restore behavior when toggled off', async () => {\n    const { getByRole, getByText, rerender } = render(\n      <TestComponent isDisabled={true} restoreFocusTest={false} />\n    );\n    const defaultActiveElement = document.activeElement;\n    const precedingButton = getByText('Preceding Button');\n    // set original focus to button outside focus trap\n    precedingButton.focus();\n    await expectActiveElementToBe(precedingButton);\n    rerender(<TestComponent isDisabled={false} restoreFocusTest={false} />);\n    const insideInput = getByRole('textbox');\n    await expectActiveElementToBe(insideInput);\n    rerender(<TestComponent isDisabled={true} restoreFocusTest={false} />);\n    await expectActiveElementToBe(defaultActiveElement as HTMLElement);\n  });\n});\n"],"names":["TestDialog","submitButtonRef","_jsxs","Fragment","children","_jsx","id","jsx","Object","assign","ref","TestComponent","autoFocusTest","isDisabled","restoreFocusTest","useRef","followButtonRef","maybeAutoFocusRef","maybeRestoreFocusRef","FocusTrap","autoFocusRef","restoreFocusRef","expectActiveElementToBe","async","element","jest","setTimeout","expect","document","activeElement","equals","waitFor","describe","beforeEach","defineProperty","HTMLElement","prototype","get","this","parentNode","it","getByRole","render","insideInput","getByText","autofocusButton","cancelButton","submitButton","userEvent","tab","shift","rerender","precedingButton","focus","followingButton","defaultActiveElement"],"mappings":"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"}