{"version":3,"file":"Menu.spec.js","sources":["../../../../src/UNSAFE_Menu/__tests__/Menu.spec.tsx"],"sourcesContent":["import { ComponentProps } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport { render, fireEvent, waitFor } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\n\nimport { expect } from 'chai';\nimport { spy } from 'sinon';\n\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { Button } from '../../UNSAFE_Button';\nimport { getClientHints } from '../../utils/PRIVATE_clientHints';\n\nimport { Menu } from '../Menu';\nimport { MenuItem } from '../MenuItem';\nimport { MenuDivider } from '../MenuDivider';\nimport {\n  setObserverConfig,\n  getMenuItemByRole,\n  getAllMenuItemsByRole,\n  getLabel\n} from './menuTestsUtils';\n\nconst MenuSimpleComponent = ({\n  onClose,\n  initialFocus = 'menu'\n}: {\n  onClose?: ComponentProps<typeof Menu>['onClose'];\n  initialFocus?: 'menu' | 'firstItem';\n}) => {\n  const ref = useRef<HTMLButtonElement>(null);\n  return (\n    <RootEnvironmentProvider>\n      <Button ref={ref} label=\"Press me\"></Button>\n      <Menu\n        isOpen={true}\n        anchorRef={ref}\n        accessibleLabel=\"Test menu\"\n        onClose={onClose}\n        initialFocus={initialFocus}>\n        <MenuItem label=\"MenuItem1\"></MenuItem>\n        <MenuItem label=\"MenuItem2\"></MenuItem>\n        <MenuDivider></MenuDivider>\n        <MenuItem label=\"MenuItem3\"></MenuItem>\n        <MenuItem label=\"MenuItem4\"></MenuItem>\n      </Menu>\n    </RootEnvironmentProvider>\n  );\n};\n\nfunction getActiveElementKey() {\n  return (document.activeElement as HTMLElement)?.dataset['ojMenuItemKey'];\n}\n\ndescribe('Test Menu Component', () => {\n  const { deviceType, hoverSupport } = getClientHints();\n\n  const isHybrid = hoverSupport === 'events';\n  const isMobile = deviceType === 'phone';\n\n  const expectedMenuItemClassesLengthOnFocus = isHybrid ? 3 : 4;\n  beforeEach(() => {\n    setObserverConfig();\n  });\n\n  it('Menu container render correctly', async function () {\n    const content = render(<MenuSimpleComponent />);\n\n    const menu = getMenuItemByRole(content, 'menu');\n    const menuItems = getAllMenuItemsByRole(content, 'menuitem');\n    const separators = getAllMenuItemsByRole(content, 'separator');\n\n    expect(menu).not.null;\n    expect(menu.classList.length).equals(2);\n    expect(menu.getAttribute('aria-label')).equals('Test menu');\n\n    expect(menuItems.length).equals(4);\n    expect(separators.length).equals(1);\n  });\n\n  it('onClose called when Escape or Tab are pressed', async function () {\n    const onActionDummyFunction = spy();\n    const content = render(<MenuSimpleComponent onClose={onActionDummyFunction} />);\n    const menu = getMenuItemByRole(content, 'menu');\n\n    expect(menu).not.null;\n    if (!isMobile) {\n      fireEvent.keyDown(menu, { key: 'Tab' });\n      fireEvent.keyDown(menu, { key: 'Escape' });\n      expect(onActionDummyFunction.calledTwice).to.be.true;\n    }\n  });\n\n  it('onClose called when clicking outside', async function () {\n    const onActionDummyFunction = spy();\n    const content = render(<MenuSimpleComponent onClose={onActionDummyFunction} />);\n\n    const menu = getMenuItemByRole(content, 'menu');\n    const button = getLabel(content, 'Press me');\n\n    expect(menu).not.null;\n\n    if (isMobile) {\n      const modalWrapper = menu.parentElement?.parentElement;\n      if (modalWrapper) {\n        userEvent.click(modalWrapper);\n      }\n    } else {\n      userEvent.click(button);\n    }\n    expect(onActionDummyFunction.called).to.be.true;\n  });\n\n  it('onClose called when item was clicked', async function () {\n    const onActionDummyFunction = spy();\n    const content = render(<MenuSimpleComponent onClose={onActionDummyFunction} />);\n    const menu = getMenuItemByRole(content, 'menu');\n    const menuItems = getAllMenuItemsByRole(content, 'menuitem');\n    const menuItem = menuItems[0];\n\n    expect(menu).not.null;\n    fireEvent.click(menuItem);\n    expect(onActionDummyFunction.called).to.be.true;\n  });\n\n  it('onClose called when swipe is done (mobile)', async function () {\n    const onActionDummyFunction = spy();\n    const content = render(<MenuSimpleComponent onClose={onActionDummyFunction} />);\n    const menu = getMenuItemByRole(content, 'menu');\n    expect(menu).not.null;\n\n    if (typeof jest === 'undefined') {\n      if (isMobile) {\n        const menuWrapper = menu.parentElement;\n        // Touch objects are created so we can replicate this in fake touch events\n        // This stuff is based on what useSwipe triggers and could change depending on the final decision\n        // on what events to trigger on useSwipe.\n        const touch1 = new Touch({\n          target: menuWrapper as EventTarget,\n          identifier: 0,\n          pageX: 386,\n          pageY: 224\n        });\n        const touch2 = new Touch({\n          target: menuWrapper as EventTarget,\n          identifier: 0,\n          pageX: 389,\n          pageY: 397\n        });\n        if (menuWrapper) {\n          fireEvent.touchStart(menuWrapper, {\n            timeStamp: 10406,\n            currentTarget: menuWrapper,\n            changedTouches: [touch1]\n          });\n          fireEvent.touchEnd(menuWrapper, {\n            timeStamp: 10472,\n            currentTarget: menuWrapper,\n            changedTouches: [touch2]\n          });\n        }\n        expect(onActionDummyFunction.called).to.be.true;\n      }\n    }\n  });\n\n  it('Focus when item is clicked', async function () {\n    const content = render(<MenuSimpleComponent />);\n\n    const menu = getMenuItemByRole(content, 'menu');\n    const menuItems = getAllMenuItemsByRole(content, 'menuitem');\n    const thirdItemKey = menuItems[2].dataset['ojMenuItemKey'];\n\n    expect(menu).not.null;\n\n    if (typeof jest !== 'undefined') {\n      await waitFor(\n        () => {\n          expect(document.activeElement as HTMLElement).equals(menu);\n        },\n        { timeout: 100 }\n      );\n      userEvent.click(menuItems[2]);\n      expect(getActiveElementKey()).equals(thirdItemKey);\n      expect(menuItems[2].classList.length).equals(expectedMenuItemClassesLengthOnFocus - 1);\n    }\n  });\n  it('Focus on firstItem when initialFocus is set as firstItem', async function () {\n    const content = render(<MenuSimpleComponent initialFocus=\"firstItem\" />);\n\n    const menu = getMenuItemByRole(content, 'menu');\n    const menuItems = getAllMenuItemsByRole(content, 'menuitem');\n\n    const firstItemKey = menuItems[0].dataset['ojMenuItemKey'];\n\n    expect(menu).not.null;\n    //TO DO: See how we can have stable tests on Karma/Mocha\n    if (typeof jest !== 'undefined') {\n      expect(getActiveElementKey()).equals(firstItemKey);\n      expect(menuItems[0].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n    }\n  });\n\n  it('Menu Keyboard navigation - focus', async function () {\n    const content = render(<MenuSimpleComponent />);\n\n    const menu = getMenuItemByRole(content, 'menu');\n    const menuItems = getAllMenuItemsByRole(content, 'menuitem');\n\n    const firstItemKey = menuItems[0].dataset['ojMenuItemKey'];\n    const secondItemKey = menuItems[1].dataset['ojMenuItemKey'];\n    const thirdItemKey = menuItems[2].dataset['ojMenuItemKey'];\n    const fourthItemKey = menuItems[3].dataset['ojMenuItemKey'];\n\n    expect(menu).not.null;\n\n    if (typeof jest !== 'undefined') {\n      await waitFor(\n        () => {\n          expect(document.activeElement as HTMLElement).equals(menu);\n        },\n        { timeout: 100 }\n      );\n\n      fireEvent.keyDown(menu, { key: 'ArrowDown' });\n      expect(getActiveElementKey()).equals(firstItemKey);\n      expect(menuItems[0].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n\n      fireEvent.keyDown(menu, { key: 'ArrowDown' });\n      expect(getActiveElementKey()).equals(secondItemKey);\n      expect(menuItems[1].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n\n      fireEvent.keyDown(menu, { key: 'ArrowDown' });\n      expect(getActiveElementKey()).equals(thirdItemKey);\n      expect(menuItems[2].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n\n      fireEvent.keyDown(menu, { key: 'ArrowDown' });\n      expect(getActiveElementKey()).equals(fourthItemKey);\n      expect(menuItems[3].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n\n      fireEvent.keyDown(menu, { key: 'ArrowDown' });\n      expect(getActiveElementKey()).equals(firstItemKey);\n      expect(menuItems[0].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n\n      fireEvent.keyDown(menu, { key: 'ArrowUp' });\n      expect(getActiveElementKey()).equals(fourthItemKey);\n      expect(menuItems[3].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n    }\n  });\n  it('Menu Keyboard navigation - focus with Home and End', async function () {\n    const content = render(<MenuSimpleComponent />);\n\n    const menu = getMenuItemByRole(content, 'menu');\n    const menuItems = getAllMenuItemsByRole(content, 'menuitem');\n\n    const firstItemKey = menuItems[0].dataset['ojMenuItemKey'];\n    const fourthItemKey = menuItems[3].dataset['ojMenuItemKey'];\n\n    expect(menu).not.null;\n    if (typeof jest !== 'undefined') {\n      await waitFor(\n        () => {\n          expect(document.activeElement as HTMLElement).equals(menu);\n        },\n        { timeout: 100 }\n      );\n\n      fireEvent.keyDown(menu, { key: 'End' });\n      expect(getActiveElementKey()).equals(fourthItemKey);\n      expect(menuItems[3].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n\n      fireEvent.keyDown(menu, { key: 'Home' });\n      expect(getActiveElementKey()).equals(firstItemKey);\n      expect(menuItems[0].classList.length).equals(expectedMenuItemClassesLengthOnFocus);\n    }\n  });\n});\n"],"names":["MenuSimpleComponent","onClose","initialFocus","ref","useRef","_jsxs","jsxs","RootEnvironmentProvider","children","_jsx","Button","label","Menu","Object","assign","isOpen","anchorRef","accessibleLabel","jsx","MenuItem","MenuDivider","getActiveElementKey","_a","document","activeElement","dataset","describe","deviceType","hoverSupport","getClientHints","isMobile","expectedMenuItemClassesLengthOnFocus","beforeEach","setObserverConfig","it","async","content","render","menu","getMenuItemByRole","menuItems","getAllMenuItemsByRole","separators","expect","not","null","classList","length","equals","getAttribute","onActionDummyFunction","spy","fireEvent","keyDown","key","calledTwice","to","be","true","button","getLabel","modalWrapper","parentElement","userEvent","click","called","menuItem","jest","menuWrapper","touch1","Touch","target","identifier","pageX","pageY","touch2","touchStart","timeStamp","currentTarget","changedTouches","touchEnd","thirdItemKey","waitFor","timeout","firstItemKey","secondItemKey","fourthItemKey"],"mappings":"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"}