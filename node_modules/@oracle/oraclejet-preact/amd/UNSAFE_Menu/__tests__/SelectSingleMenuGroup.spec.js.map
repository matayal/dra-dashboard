{"version":3,"file":"SelectSingleMenuGroup.spec.js","sources":["../../../../src/UNSAFE_Menu/SelectSingleMenuGroup.tsx","../../../../src/UNSAFE_Menu/__tests__/SelectSingleMenuGroup.spec.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\n\nimport { MenuValueUpdateDetail } from './menuUtils';\nimport { SelectMenuGroupContext } from './SelectMenuGroupContext';\n\ntype SelectSingleMenuGroupProps = {\n  children: ComponentChildren;\n  value?: string;\n  onCommit?: (detail: MenuValueUpdateDetail<string>) => void;\n};\n\nexport function SelectSingleMenuGroup({ value, onCommit, children }: SelectSingleMenuGroupProps) {\n  return (\n    <SelectMenuGroupContext.Provider value={{ isMultiple: false, value, onCommit }}>\n      {children}\n    </SelectMenuGroupContext.Provider>\n  );\n}\n","import { useState, useRef } from 'preact/hooks';\nimport { render, fireEvent } from '@testing-library/preact';\n\nimport { expect } from 'chai';\nimport { spy } from 'sinon';\n\nimport { Button } from '../../UNSAFE_Button';\n\nimport { Menu } from '../Menu';\nimport { SelectMenuItem } from '../SelectMenuItem';\nimport { SelectSingleMenuGroup } from '../SelectSingleMenuGroup';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { MenuValueUpdateDetail } from '../menuUtils';\nimport { getIcon, setObserverConfig, getAllMenuItemsByRole } from './menuTestsUtils';\n\nconst SelectMenu = ({\n  initialValue,\n  onCommit\n}: {\n  initialValue?: string;\n  onCommit?: (detail: MenuValueUpdateDetail<string>) => void;\n}) => {\n  const [selectSingleValue, setSelectSingleValue] = useState(initialValue);\n\n  const handleCommit = ({ value }: MenuValueUpdateDetail<string>) => {\n    setSelectSingleValue(value);\n  };\n\n  const ref = useRef(null);\n\n  return (\n    <>\n      <RootEnvironmentProvider>\n        <Button ref={ref} label=\"Text Wrapping\" />\n        <Menu isOpen={true} anchorRef={ref}>\n          <SelectSingleMenuGroup value={selectSingleValue} onCommit={onCommit || handleCommit}>\n            <SelectMenuItem value=\"overflow\" label=\"Overflow\"></SelectMenuItem>\n            <SelectMenuItem value=\"wrap\" label=\"Wrap\"></SelectMenuItem>\n            <SelectMenuItem value=\"clip\" label=\"Clip\"></SelectMenuItem>\n          </SelectSingleMenuGroup>\n        </Menu>\n      </RootEnvironmentProvider>\n    </>\n  );\n};\n\ndescribe('Test Menu Component', () => {\n  beforeEach(() => {\n    setObserverConfig();\n  });\n\n  it('onCommit called when selecting item', async function () {\n    const dummyFunc = spy();\n    const content = render(<SelectMenu onCommit={dummyFunc} />);\n    const menuItems = getAllMenuItemsByRole(content, 'menuitemradio');\n    fireEvent.click(menuItems[0]);\n\n    expect(dummyFunc.calledOnce).to.be.true;\n  });\n\n  it('Initial SelectSingleMenuGroup render without value', async function () {\n    const content = render(<SelectMenu />);\n    const menuItems = getAllMenuItemsByRole(content, 'menuitemradio');\n\n    const firstItem = menuItems[0];\n    const secondItem = menuItems[1];\n    const thirdItem = menuItems[2];\n\n    expect(firstItem).not.null;\n    expect(firstItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(firstItem, 'svg')).null;\n\n    expect(secondItem).not.null;\n    expect(secondItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(secondItem, 'svg')).null;\n\n    expect(thirdItem).not.null;\n    expect(thirdItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(thirdItem, 'svg')).null;\n  });\n\n  it('Initial SelectSingleMenuGroup render with value', async function () {\n    const content = render(<SelectMenu initialValue=\"overflow\" />);\n    const menuItems = getAllMenuItemsByRole(content, 'menuitemradio');\n\n    const firstItem = menuItems[0];\n    const secondItem = menuItems[1];\n    const thirdItem = menuItems[2];\n\n    expect(firstItem).not.null;\n    expect(firstItem.getAttribute('aria-checked')).equals('true');\n    expect(getIcon(firstItem, 'svg')).not.null;\n\n    expect(secondItem).not.null;\n    expect(secondItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(secondItem, 'svg')).null;\n\n    expect(thirdItem).not.null;\n    expect(thirdItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(thirdItem, 'svg')).null;\n  });\n\n  it('SelectSingleMenuGroup remains the same if selected item is selected again', async function () {\n    const content = render(<SelectMenu initialValue=\"overflow\" />);\n\n    const menuItems = getAllMenuItemsByRole(content, 'menuitemradio');\n    fireEvent.click(menuItems[0]);\n\n    const menuItemsAfterClick = getAllMenuItemsByRole(content, 'menuitemradio');\n\n    const firstItem = menuItemsAfterClick[0];\n    const secondItem = menuItemsAfterClick[1];\n    const thirdItem = menuItemsAfterClick[2];\n\n    expect(firstItem).not.null;\n    expect(firstItem.getAttribute('aria-checked')).equals('true');\n    expect(getIcon(firstItem, 'svg')).not.null;\n\n    expect(secondItem).not.null;\n    expect(secondItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(secondItem, 'svg')).null;\n\n    expect(thirdItem).not.null;\n    expect(thirdItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(thirdItem, 'svg')).null;\n  });\n\n  it('SelectSingleMenuGroup selected item changes when selecting it', async function () {\n    const content = render(<SelectMenu initialValue=\"overflow\" />);\n\n    const menuItems = getAllMenuItemsByRole(content, 'menuitemradio');\n    fireEvent.click(menuItems[1]);\n\n    const menuItemsAfterClick = getAllMenuItemsByRole(content, 'menuitemradio');\n\n    const firstItem = menuItemsAfterClick[0];\n    const secondItem = menuItemsAfterClick[1];\n    const thirdItem = menuItemsAfterClick[2];\n\n    expect(firstItem).not.null;\n    expect(firstItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(firstItem, 'svg')).null;\n\n    expect(secondItem).not.null;\n    expect(secondItem.getAttribute('aria-checked')).equals('true');\n    expect(getIcon(secondItem, 'svg')).not.null;\n\n    expect(thirdItem).not.null;\n    expect(thirdItem.getAttribute('aria-checked')).equals('false');\n    expect(getIcon(thirdItem, 'svg')).null;\n  });\n});\n"],"names":["SelectSingleMenuGroup","value","onCommit","children","_jsx","SelectMenuGroupContext","Provider","Object","assign","isMultiple","SelectMenu","initialValue","selectSingleValue","setSelectSingleValue","useState","ref","useRef","_Fragment","_jsxs","jsxs","RootEnvironmentProvider","Button","label","Menu","isOpen","anchorRef","jsx","SelectMenuItem","describe","beforeEach","setObserverConfig","it","async","dummyFunc","spy","content","render","menuItems","getAllMenuItemsByRole","fireEvent","click","expect","calledOnce","to","be","true","firstItem","secondItem","thirdItem","not","null","getAttribute","equals","getIcon","menuItemsAfterClick"],"mappings":"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"}