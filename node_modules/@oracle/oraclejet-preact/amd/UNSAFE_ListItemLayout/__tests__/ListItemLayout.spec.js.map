{"version":3,"file":"ListItemLayout.spec.js","sources":["../../../../src/UNSAFE_ListItemLayout/__tests__/ListItemLayout.spec.tsx"],"sourcesContent":["import { cleanup, render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { ListItemLayout } from '../ListItemLayout';\nimport { ListItemText } from '../ListItemText';\nimport { ListItemTextLayout } from '../ListItemTextLayout';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\n\nafterEach(cleanup);\n\ndescribe('Test ListItemLayout component', () => {\n  it('render ListItemLayout', async function () {\n    const content = render(<ListItemLayout primary=\"Simple Text\" />);\n    const label = await content.findByText('Simple Text');\n    expect(label).not.to.be.null;\n  });\n\n  it('render ListItemText', async function () {\n    const content = render(\n      <ListItemLayout\n        primary={<ListItemText variant=\"primary\">ListItemText Sample</ListItemText>}\n      />\n    );\n    const label = await content.findByText('ListItemText Sample');\n    expect(label).not.to.be.null;\n  });\n\n  it('render ListItemTextLayout', async function () {\n    const content = render(\n      <ListItemLayout>\n        <ListItemTextLayout primary=\"ListItemTextLayout Sample\" />\n      </ListItemLayout>\n    );\n    const label = await content.findByText('ListItemTextLayout Sample');\n    expect(label).not.to.be.null;\n  });\n\n  it('ListItemText, TabbableModeContext isTabbable=true', async () => {\n    const { container } = render(\n      <TabbableModeContext.Provider value={{ isTabbable: true }}>\n        <ListItemText variant=\"secondary\">Tabbing with mode</ListItemText>\n      </TabbableModeContext.Provider>\n    );\n\n    const div = container.querySelector('div');\n    expect(div).not.to.be.null;\n\n    const tabindex = div?.getAttribute('tabindex');\n    expect(tabindex).to.equal('0');\n  });\n});\n"],"names":["afterEach","cleanup","describe","it","async","content","render","_jsx","ListItemLayout","primary","label","findByText","expect","not","to","be","null","ListItemText","variant","children","ListItemTextLayout","container","TabbableModeContext","Provider","Object","assign","value","isTabbable","jsx","div","querySelector","tabindex","getAttribute","equal"],"mappings":"0rBAOAA,UAAUC,EAAOA,SAEjBC,SAAS,gCAAiC,KACxCC,GAAG,wBAAyBC,iBAC1B,MAAMC,EAAUC,EAAMA,OAACC,MAACC,EAAAA,eAAe,CAAAC,QAAQ,iBACzCC,QAAcL,EAAQM,WAAW,eACvCC,EAAMA,OAACF,GAAOG,IAAIC,GAAGC,GAAGC,OAG1Bb,GAAG,sBAAuBC,iBACxB,MAAMC,EAAUC,EAAMA,OACpBC,MAACC,EAAAA,gBACCC,QAASF,EAAAA,IAACU,EAAAA,4BAAaC,QAAQ,WAA4C,CAAAC,SAAA,4BAGzET,QAAcL,EAAQM,WAAW,uBACvCC,EAAMA,OAACF,GAAOG,IAAIC,GAAGC,GAAGC,OAG1Bb,GAAG,4BAA6BC,iBAC9B,MAAMC,EAAUC,EAAMA,OACpBC,MAACC,EAAAA,eACC,CAAAW,SAAAZ,MAACa,EAAAA,mBAAkB,CAACX,QAAQ,iCAG1BC,QAAcL,EAAQM,WAAW,6BACvCC,EAAMA,OAACF,GAAOG,IAAIC,GAAGC,GAAGC,OAG1Bb,GAAG,oDAAqDC,UACtD,MAAMiB,UAAEA,GAAcf,SACpBC,EAAAA,IAACe,EAAAA,oBAAoBC,SAASC,OAAAC,OAAA,CAAAC,MAAO,CAAEC,YAAY,IACjD,CAAAR,SAAAZ,EAAAqB,IAACX,EAAYA,aAAAO,OAAAC,OAAA,CAACP,QAAQ,aAAW,CAAAC,SAAA,2BAI/BU,EAAMR,EAAUS,cAAc,OACpClB,EAAMA,OAACiB,GAAKhB,IAAIC,GAAGC,GAAGC,KAEtB,MAAMe,EAAWF,MAAAA,OAAG,EAAHA,EAAKG,aAAa,YACnCpB,EAAAA,OAAOmB,GAAUjB,GAAGmB,MAAM"}