{"version":3,"file":"flexitem.spec.js","sources":["../../../../../src/utils/UNSAFE_interpolations/flexitem/flexitem.spec.ts"],"sourcesContent":["import { flexitemInterpolations } from './flexitem';\n//import { cssProps } from \"@oracle/oraclejet-cssprops\";\nimport { expect } from 'chai';\n\nconst { alignSelf } = flexitemInterpolations;\ntype Obj = Record<string, unknown>;\n\n// TODO: Is this test actually useful?  What kind of testing should be done on interpolations?\ndescribe('flexitem alignSelf', () => {\n  const table: [Obj, Obj][] = [\n    [{}, {}],\n    [{ foo: 'bar' }, {}]\n    // [{ alignSelf: 'end' }, cssProps`${{ alignSelf: \"end\", }}`],\n  ];\n  table.forEach((testParams) => {\n    const [input, expected] = testParams;\n    it(`when ${input} returns ${expected}`, async function () {\n      const actual = alignSelf(input);\n      expect(actual).to.deep.equal(expected);\n    });\n  });\n});\n"],"names":["alignSelf","flexitemInterpolations","describe","foo","forEach","testParams","input","expected","it","async","actual","expect","to","deep","equal"],"mappings":"wKAIA,MAAAA,UAAAA,GAAAC,yBAIAC,SAAA,qBAAA,KACE,SAEE,CAAA,CAAAC,IAAA,OAAA,KAGFC,QAAAC,IACE,MAAAC,EAAAC,GAAAF,EACAG,GAAA,QAAAF,aAAAC,IAAAE,iBACE,MAAAC,EAAAV,EAAAM,GACAK,EAAAA,OAAAD,GAAAE,GAAAC,KAAAC,MAAAP"}