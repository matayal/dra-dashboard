{"version":3,"file":"stringUtils.spec.js","sources":["../../../../src/utils/UNSAFE_stringUtils/stringUtils.spec.ts"],"sourcesContent":["import { expect } from 'chai';\nimport * as StringUtils from './stringUtils';\n\ndescribe('Test StringUtils', () => {\n  it('isEmpty', function () {\n    // null\n    expect(StringUtils.isEmpty(null)).to.be.true;\n\n    // string\n    expect(StringUtils.isEmpty('')).to.be.true;\n    expect(StringUtils.isEmpty('     ')).to.be.true;\n    expect(StringUtils.isEmpty('foo')).to.be.false;\n\n    // object\n    expect(StringUtils.isEmpty({})).to.be.true;\n    expect(StringUtils.isEmpty({ foo: 'bar' })).to.be.true;\n    expect(StringUtils.isEmpty([])).to.be.true;\n    expect(StringUtils.isEmpty(['foo'])).to.be.false;\n  });\n\n  it('isEmptyOrUndefined', function () {\n    // undefined\n    expect(StringUtils.isEmptyOrUndefined(undefined)).to.be.true;\n\n    // null\n    expect(StringUtils.isEmptyOrUndefined(null)).to.be.true;\n\n    // string\n    expect(StringUtils.isEmptyOrUndefined('')).to.be.true;\n    expect(StringUtils.isEmptyOrUndefined('     ')).to.be.true;\n    expect(StringUtils.isEmptyOrUndefined('foo')).to.be.false;\n\n    // object\n    expect(StringUtils.isEmptyOrUndefined({})).to.be.true;\n    expect(StringUtils.isEmptyOrUndefined({ foo: 'bar' })).to.be.true;\n    expect(StringUtils.isEmptyOrUndefined([])).to.be.true;\n    expect(StringUtils.isEmptyOrUndefined(['foo'])).to.be.false;\n  });\n\n  it('isString', function () {\n    // null\n    expect(StringUtils.isString(null)).to.be.false;\n\n    // string\n    expect(StringUtils.isString('')).to.be.true;\n    expect(StringUtils.isString('     ')).to.be.true;\n    expect(StringUtils.isString('foo')).to.be.true;\n\n    // object\n    expect(StringUtils.isString({})).to.be.false;\n    expect(StringUtils.isString({ foo: 'bar' })).to.be.false;\n    expect(StringUtils.isString([])).to.be.false;\n    expect(StringUtils.isString(['foo'])).to.be.false;\n    expect(StringUtils.isString(new String('foo'))).to.be.true;\n  });\n\n  it('trim', function () {\n    let str: any;\n\n    // null\n    expect(StringUtils.trim(null)).null;\n\n    // string\n    str = '';\n    expect(StringUtils.trim(str)).equal(str);\n    expect(StringUtils.trim('     ')).equal(str);\n    str = 'foo';\n    expect(StringUtils.trim(str)).equal(str);\n    expect(StringUtils.trim('  foo  ')).equal(str);\n\n    // object\n    str = {};\n    expect(StringUtils.trim(str)).equal(str);\n    str = { foo: 'bar' };\n    expect(StringUtils.trim(str)).equal(str);\n    str = [];\n    expect(StringUtils.trim(str)).equal(str);\n    str = ['foo'];\n    expect(StringUtils.trim(str)).equal(str);\n    str = new String('  foo  ');\n    expect(StringUtils.trim(str)).equal('foo');\n  });\n\n  it('hashCode', function () {\n    const hash1 = StringUtils.hashCode('foo');\n    const hash2 = StringUtils.hashCode('bar');\n    expect(typeof hash1).equal('number');\n    expect(typeof hash2).equal('number');\n    expect(hash1).not.equal(hash2);\n    expect(StringUtils.hashCode('foo')).equal(hash1);\n  });\n});\n"],"names":["describe","it","expect","StringUtils.isEmpty","isEmpty","to","be","true","false","foo","StringUtils.isEmptyOrUndefined","isEmptyOrUndefined","undefined","StringUtils.isString","isString","String","str","StringUtils.trim","trim","null","equal","hash1","StringUtils.hashCode","hash2","not","hashCode"],"mappings":"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"}