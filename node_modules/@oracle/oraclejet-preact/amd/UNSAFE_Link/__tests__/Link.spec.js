define(["preact/jsx-runtime","preact","@testing-library/preact","chai","../../Link-eadb69b7","@testing-library/user-event","css!./../../UNSAFE_Link.css","../../utils/UNSAFE_classNames","../../classNames-b7cf3c05","../../hooks/UNSAFE_usePress","preact/hooks"],function(e,i,a,t,n,s,l,r,c,d,b){"use strict";function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var L=u(s);describe("Test Link component",()=>{it("render",()=>{const i=a.render(e.jsx(n.Link,Object.assign({href:"#"},{children:"Link"}))).queryByText("Link",{exact:!1});t.expect(i).not.null}),it("applies default CSS classes",async function(){const i=a.render(e.jsx(n.Link,Object.assign({href:"#"},{children:"Link"}))).container.firstElementChild.classList;t.expect(i.length).equals(2)}),it("variant selected",async function(){const i=a.render(e.jsx(n.Link,Object.assign({href:"#",variant:"primary"},{children:"Link"}))).container.firstElementChild.classList;t.expect(i.length).equals(3)}),it("event",async function(){let i=0;const s=a.render(e.jsx(n.Link,Object.assign({href:"#",onClick:()=>i++},{children:"Link"}))),l=await s.findByText("Link");t.expect(l).not.null,L.default.click(l),t.expect(i).equals(1)}),it("has single label id as aria-labelledby attribute value",async()=>{const s="sampleLabelId",l=a.render(e.jsxs(i.Fragment,{children:[e.jsx("p",{id:s}),e.jsx(n.Link,Object.assign({href:"#",ariaLabelledBy:s},{children:"Link"}))]})),r=(await l.findByText("Link")).getAttribute("aria-labelledBy");t.expect(r).to.equal(s)}),it("has multiple label ids as aria-labelledby attribute value",async()=>{const s="sampleLabelId1",l="sampleLabelId2",r=a.render(e.jsxs(i.Fragment,{children:[e.jsx("p",{id:s}),e.jsx("p",{id:l}),e.jsx(n.Link,Object.assign({href:"#",ariaLabelledBy:`${s} ${l}`},{children:"Link"}))]})),c=(await r.findByText("Link")).getAttribute("aria-labelledBy");t.expect(c).to.equal(`${s} ${l}`)}),it("has accessible aria-label and aria-describedby values",async()=>{var s;const l="TEST-ACCESSIBLE-LABEL",r=a.render(e.jsx(i.Fragment,{children:e.jsx(n.Link,Object.assign({href:"#",accessibleLabel:l,ariaDescribedBy:"TEST ARIA-DESCRIBED-BY"},{children:"Link"}))})),c=await r.findByText("Link");t.expect(c.getAttribute("aria-label")).equals(l);const d=null===(s=c.getAttribute("aria-describedby"))||void 0===s?void 0:s.split(" ");d&&d.length>0&&(t.expect(d[0]).equals("TEST"),t.expect(d[1]).equals("ARIA-DESCRIBED-BY"))})})});
//# sourceMappingURL=Link.spec.js.map
