{"ast":null,"code":"var _jsxFileName = \"/Users/mayanktayal/my-app/src/Components/Navbar.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport \"../Css/styles.css\";\nimport logo from \"../images/oracle.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [showLinks, setShowLinks] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n  const links = [{\n    id: 1,\n    url: \"/\",\n    text: \"home\"\n  }, {\n    id: 2,\n    url: \"/load-sts\",\n    text: \"Load STS\"\n  }, {\n    id: 3,\n    url: \"/construct-graph\",\n    text: \"Construct Graph\"\n  }, {\n    id: 4,\n    url: \"/graphs\",\n    text: \"Graphs\"\n  }, {\n    id: 5,\n    url: \"/community\",\n    text: \"Community\"\n  }];\n  const toggleLinks = () => {\n    setShowLinks(!showLinks);\n  };\n  const linkStyles = {\n    height: showLinks ? `${linksRef.current.getBoundingClientRect().height}px` : \"0px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-toggle\",\n          onClick: toggleLinks,\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links-container \",\n        ref: linksContainerRef,\n        style: linkStyles,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"links\",\n          ref: linksRef,\n          children: links.map(link => {\n            const {\n              id,\n              url,\n              text\n            } = link;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: url,\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"cFY4wp8Gi4lxxIKiF76x7NQzM9A=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useState","useRef","FaBars","logo","jsxDEV","_jsxDEV","Navbar","_s","showLinks","setShowLinks","linksContainerRef","linksRef","links","id","url","text","toggleLinks","linkStyles","height","current","getBoundingClientRect","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","style","map","link","href","_c","$RefreshReg$"],"sources":["/Users/mayanktayal/my-app/src/Components/Navbar.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport \"../Css/styles.css\";\n\nimport logo from \"../images/oracle.png\";\nconst Navbar = () => {\n  const [showLinks, setShowLinks] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n\n  const links = [\n    {\n      id: 1,\n      url: \"/\",\n      text: \"home\",\n    },\n    {\n      id: 2,\n      url: \"/load-sts\",\n      text: \"Load STS\",\n    },\n    {\n      id: 3,\n      url: \"/construct-graph\",\n      text: \"Construct Graph\",\n    },\n    {\n      id: 4,\n      url: \"/graphs\",\n      text: \"Graphs\",\n    },\n    {\n      id: 5,\n      url: \"/community\",\n      text: \"Community\",\n    },\n  ];\n\n  const toggleLinks = () => {\n    setShowLinks(!showLinks);\n  };\n\n  const linkStyles = {\n    height: showLinks\n      ? `${linksRef.current.getBoundingClientRect().height}px`\n      : \"0px\",\n  };\n  return (\n    <nav>\n      <div className=\"nav-center\">\n        <div className=\"nav-header\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <button className=\"nav-toggle\" onClick={toggleLinks}>\n            <FaBars />\n          </button>\n        </div>\n\n        <div\n          className=\"links-container \"\n          ref={linksContainerRef}\n          style={linkStyles}\n        >\n          <ul className=\"links\" ref={linksRef}>\n            {links.map((link) => {\n              const { id, url, text } = link;\n              return (\n                <li key={id}>\n                  <a href={url}>{text}</a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\nexport default Navbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}