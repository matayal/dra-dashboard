{"ast":null,"code":"var _jsxFileName = \"/Users/mayanktayal/my-app/src/Components/GraphComponent.js\";\n// import React, { useEffect, useRef } from \"react\";\n// import * as d3 from \"d3\";\n// import \"../Css/styles.css\";\n\n// function GraphComponent() {\n//   const svgRef = useRef();\n\n//   useEffect(() => {\n//     const svg = d3.select(svgRef.current);\n\n//     // Define the data for the nodes and links\n//     const nodes = [\n//       { id: \"A\", color: \"red\" },\n//       { id: \"B\", color: \"green\" },\n//       { id: \"C\", color: \"blue\" },\n//       { id: \"D\", color: \"grey\" },\n//       { id: \"E\", color: \"pink\" },\n//     ];\n\n//     const links = [\n//       { source: \"A\", target: \"B\", weight: 1 },\n//       { source: \"B\", target: \"A\", weight: 1 },\n//       { source: \"A\", target: \"C\", weight: 2 },\n//       { source: \"B\", target: \"C\", weight: 3 },\n//       { source: \"A\", target: \"E\", weight: 4 },\n//       { source: \"E\", target: \"D\", weight: 5 },\n//       { source: \"C\", target: \"D\", weight: 6 },\n//     ];\n\n//     // Create the force simulation\n//     const simulation = d3\n//       .forceSimulation(nodes)\n//       .force(\n//         \"link\",\n//         d3\n//           .forceLink(links)\n//           .id((d) => d.id)\n//           .distance(100)\n//       )\n//       .force(\"charge\", d3.forceManyBody().strength(-50))\n//       .force(\"center\", d3.forceCenter(300, 150));\n\n//     // Create the links\n//     const link = svg\n//       .selectAll(\".link\")\n//       .data(links)\n//       .enter()\n//       .append(\"line\")\n//       .attr(\"class\", \"link\")\n//       .attr(\"stroke\", \"black\")\n//       .attr(\"marker-end\", \"url(#arrowhead)\");\n\n//     // Add weight labels to the links\n//     const weightLabel = svg\n//       .selectAll(\".weight-label\")\n//       .data(links)\n//       .enter()\n//       .append(\"text\")\n//       .attr(\"class\", \"weight-label\")\n//       .attr(\"text-anchor\", \"middle\")\n//       .attr(\"dy\", \"-0.5em\")\n//       .text((d) => d.weight);\n\n//     // Create the nodes\n//     const node = svg\n//       .selectAll(\".node\")\n//       .data(nodes)\n//       .enter()\n//       .append(\"circle\")\n//       .attr(\"class\", \"node\")\n//       .attr(\"r\", 15)\n//       .attr(\"fill\", (d) => d.color);\n\n//     // Add labels to the nodes\n//     const label = svg\n//       .selectAll(\".label\")\n//       .data(nodes)\n//       .enter()\n//       .append(\"text\")\n//       .attr(\"class\", \"label\")\n//       .attr(\"text-anchor\", \"middle\")\n//       .attr(\"dy\", \".35em\")\n//       .text((d) => d.id);\n\n//     // Add the arrowhead marker to the svg\n//     svg\n//       .append(\"defs\")\n//       .selectAll(\"marker\")\n//       .data([\"arrowhead\"])\n//       .enter()\n//       .append(\"marker\")\n//       .attr(\"id\", \"arrowhead\")\n//       .attr(\"viewBox\", \"0 -5 10 10\")\n//       .attr(\"refX\", 20)\n//       .attr(\"markerWidth\", 8)\n//       .attr(\"markerHeight\", 8)\n//       .attr(\"orient\", \"auto\")\n//       .append(\"path\")\n//       .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n//     // Add arrowhead marker to the svg\n//     svg\n//       .append(\"defs\")\n//       .selectAll(\"marker\")\n//       .data([\"arrowhead\"])\n//       .enter()\n//       .append(\"marker\")\n//       .attr(\"id\", \"arrowhead\")\n//       .attr(\"viewBox\", \"0 -5 10 10\")\n//       .attr(\"refX\", 25)\n//       .attr(\"markerWidth\", 8)\n//       .attr(\"markerHeight\", 8)\n//       .attr(\"orient\", \"auto\")\n//       .append(\"path\")\n//       .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n//     // Add the text for weight to the edges\n//     const text = svg\n//       .selectAll(\".text\")\n//       .data(links)\n//       .enter()\n//       .append(\"text\")\n//       .attr(\"class\", \"text\")\n//       .text((d) => d.weight);\n\n//     // Update the position of the text on each tick\n//     simulation.on(\"tick\", () => {\n//       link\n//         .attr(\"x1\", (d) => d.source.x)\n//         .attr(\"y1\", (d) => d.source.y)\n//         .attr(\"x2\", (d) => d.target.x)\n//         .attr(\"y2\", (d) => d.target.y);\n\n//       node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n\n//       label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\n\n//       text\n//         .attr(\"x\", (d) => (d.source.x + d.target.x) / 2)\n//         .attr(\"y\", (d) => (d.source.y + d.target.y) / 2);\n//     });\n//   }, []);\n\n//   return (\n//     <div className=\"form\">\n//       <svg ref={svgRef} width=\"600\" height=\"300\"></svg>\n//     </div>\n//   );\n// }\n\n// export default GraphComponent;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphComponent() {\n  const data = [{\n    name: \"John\",\n    age: 25\n  }, {\n    name: \"Jane\",\n    age: 30\n  }, {\n    name: \"Bob\",\n    age: 20\n  }];\n  const renderTableData = () => {\n    return data.map((person, index) => {\n      const {\n        name,\n        age\n      } = person;\n      let button1, button2;\n      if (age > 25) {\n        button1 = /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Button 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }, this);\n        button2 = /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Button 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }, this);\n      } else {\n        button1 = \"-\";\n        button2 = \"-\";\n      }\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [button1, \" \", button2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderTableData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GraphComponent","data","name","age","renderTableData","map","person","index","button1","button2","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/mayanktayal/my-app/src/Components/GraphComponent.js"],"sourcesContent":["// import React, { useEffect, useRef } from \"react\";\n// import * as d3 from \"d3\";\n// import \"../Css/styles.css\";\n\n// function GraphComponent() {\n//   const svgRef = useRef();\n\n//   useEffect(() => {\n//     const svg = d3.select(svgRef.current);\n\n//     // Define the data for the nodes and links\n//     const nodes = [\n//       { id: \"A\", color: \"red\" },\n//       { id: \"B\", color: \"green\" },\n//       { id: \"C\", color: \"blue\" },\n//       { id: \"D\", color: \"grey\" },\n//       { id: \"E\", color: \"pink\" },\n//     ];\n\n//     const links = [\n//       { source: \"A\", target: \"B\", weight: 1 },\n//       { source: \"B\", target: \"A\", weight: 1 },\n//       { source: \"A\", target: \"C\", weight: 2 },\n//       { source: \"B\", target: \"C\", weight: 3 },\n//       { source: \"A\", target: \"E\", weight: 4 },\n//       { source: \"E\", target: \"D\", weight: 5 },\n//       { source: \"C\", target: \"D\", weight: 6 },\n//     ];\n\n//     // Create the force simulation\n//     const simulation = d3\n//       .forceSimulation(nodes)\n//       .force(\n//         \"link\",\n//         d3\n//           .forceLink(links)\n//           .id((d) => d.id)\n//           .distance(100)\n//       )\n//       .force(\"charge\", d3.forceManyBody().strength(-50))\n//       .force(\"center\", d3.forceCenter(300, 150));\n\n//     // Create the links\n//     const link = svg\n//       .selectAll(\".link\")\n//       .data(links)\n//       .enter()\n//       .append(\"line\")\n//       .attr(\"class\", \"link\")\n//       .attr(\"stroke\", \"black\")\n//       .attr(\"marker-end\", \"url(#arrowhead)\");\n\n//     // Add weight labels to the links\n//     const weightLabel = svg\n//       .selectAll(\".weight-label\")\n//       .data(links)\n//       .enter()\n//       .append(\"text\")\n//       .attr(\"class\", \"weight-label\")\n//       .attr(\"text-anchor\", \"middle\")\n//       .attr(\"dy\", \"-0.5em\")\n//       .text((d) => d.weight);\n\n//     // Create the nodes\n//     const node = svg\n//       .selectAll(\".node\")\n//       .data(nodes)\n//       .enter()\n//       .append(\"circle\")\n//       .attr(\"class\", \"node\")\n//       .attr(\"r\", 15)\n//       .attr(\"fill\", (d) => d.color);\n\n//     // Add labels to the nodes\n//     const label = svg\n//       .selectAll(\".label\")\n//       .data(nodes)\n//       .enter()\n//       .append(\"text\")\n//       .attr(\"class\", \"label\")\n//       .attr(\"text-anchor\", \"middle\")\n//       .attr(\"dy\", \".35em\")\n//       .text((d) => d.id);\n\n//     // Add the arrowhead marker to the svg\n//     svg\n//       .append(\"defs\")\n//       .selectAll(\"marker\")\n//       .data([\"arrowhead\"])\n//       .enter()\n//       .append(\"marker\")\n//       .attr(\"id\", \"arrowhead\")\n//       .attr(\"viewBox\", \"0 -5 10 10\")\n//       .attr(\"refX\", 20)\n//       .attr(\"markerWidth\", 8)\n//       .attr(\"markerHeight\", 8)\n//       .attr(\"orient\", \"auto\")\n//       .append(\"path\")\n//       .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n//     // Add arrowhead marker to the svg\n//     svg\n//       .append(\"defs\")\n//       .selectAll(\"marker\")\n//       .data([\"arrowhead\"])\n//       .enter()\n//       .append(\"marker\")\n//       .attr(\"id\", \"arrowhead\")\n//       .attr(\"viewBox\", \"0 -5 10 10\")\n//       .attr(\"refX\", 25)\n//       .attr(\"markerWidth\", 8)\n//       .attr(\"markerHeight\", 8)\n//       .attr(\"orient\", \"auto\")\n//       .append(\"path\")\n//       .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n//     // Add the text for weight to the edges\n//     const text = svg\n//       .selectAll(\".text\")\n//       .data(links)\n//       .enter()\n//       .append(\"text\")\n//       .attr(\"class\", \"text\")\n//       .text((d) => d.weight);\n\n//     // Update the position of the text on each tick\n//     simulation.on(\"tick\", () => {\n//       link\n//         .attr(\"x1\", (d) => d.source.x)\n//         .attr(\"y1\", (d) => d.source.y)\n//         .attr(\"x2\", (d) => d.target.x)\n//         .attr(\"y2\", (d) => d.target.y);\n\n//       node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n\n//       label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\n\n//       text\n//         .attr(\"x\", (d) => (d.source.x + d.target.x) / 2)\n//         .attr(\"y\", (d) => (d.source.y + d.target.y) / 2);\n//     });\n//   }, []);\n\n//   return (\n//     <div className=\"form\">\n//       <svg ref={svgRef} width=\"600\" height=\"300\"></svg>\n//     </div>\n//   );\n// }\n\n// export default GraphComponent;\n\nimport React from \"react\";\n\nfunction GraphComponent() {\n  const data = [\n    { name: \"John\", age: 25 },\n    { name: \"Jane\", age: 30 },\n    { name: \"Bob\", age: 20 },\n  ];\n\n  const renderTableData = () => {\n    return data.map((person, index) => {\n      const { name, age } = person;\n      let button1, button2;\n\n      if (age > 25) {\n        button1 = <button>Button 1</button>;\n        button2 = <button>Button 2</button>;\n      } else {\n        button1 = \"-\";\n        button2 = \"-\";\n      }\n\n      return (\n        <tr key={index}>\n          <td>{name}</td>\n          <td>{age}</td>\n          <td>\n            {button1} {button2}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className=\"form\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Age</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{renderTableData()}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default GraphComponent;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAMC,IAAI,GAAG,CACX;IAAEC,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAG,CAAC,EACzB;IAAED,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAG,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAG,CAAC,CACzB;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAOH,IAAI,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MACjC,MAAM;QAAEL,IAAI;QAAEC;MAAI,CAAC,GAAGG,MAAM;MAC5B,IAAIE,OAAO,EAAEC,OAAO;MAEpB,IAAIN,GAAG,GAAG,EAAE,EAAE;QACZK,OAAO,gBAAGT,OAAA;UAAAW,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;QACnCL,OAAO,gBAAGV,OAAA;UAAAW,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MACrC,CAAC,MAAM;QACLN,OAAO,GAAG,GAAG;QACbC,OAAO,GAAG,GAAG;MACf;MAEA,oBACEV,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKR;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACff,OAAA;UAAAW,QAAA,EAAKP;QAAG;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACdf,OAAA;UAAAW,QAAA,GACGF,OAAO,EAAC,GAAC,EAACC,OAAO;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACf;MAAA,GALEP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMT;IAET,CAAC,CAAC;EACJ,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAL,QAAA,eACnBX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAAW,QAAA,gBACEX,OAAA;YAAAW,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACbf,OAAA;YAAAW,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACZf,OAAA;YAAAW,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACb;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACRf,OAAA;QAAAW,QAAA,EAAQN,eAAe;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAACE,EAAA,GA9CQhB,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}